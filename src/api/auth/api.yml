components:
  parameters:
    accessParam:
      description: To date
      in: query
      name: access
      schema:
        type: string
    actionParam:
      description: To date
      in: query
      name: action
      schema:
        type: string
    aliasParam:
      in: path
      name: alias
      required: true
      schema:
        description: entity alias
        type: string
    avatar:
      in: path
      name: avatar
      required: true
      schema:
        description: avatar name
        type: string
    clientParam:
      description: App or oauth client name
      in: query
      name: client
      schema:
        type: string
      style: form
    columnParam:
      in: query
      name: columns
      required: false
      schema:
        description: column names to project
        items:
          type: string
        type: array
    countParam:
      in: query
      name: count
      required: false
      schema:
        description: to process count
        example: true
        type: boolean
    cronWorkflowNameParam:
      in: path
      name: cronWorkflowName
      required: true
      schema:
        description: Name of the workflow template
        type: string
    dateFromParam:
      description: From date
      in: query
      name: dateFrom
      schema:
        type: string
      style: form
    dateToParam:
      description: To date
      in: query
      name: dateTo
      schema:
        type: string
      style: form
    emailParam:
      in: query
      name: email
      required: false
      schema:
        description: column names to project
        type: string
    endDateParam:
      description: From date
      in: query
      name: endDate
      schema:
        type: string
    filterParam:
      in: query
      name: filter
      required: false
      schema:
        description: filter string
        type: string
    firstNameParam:
      in: query
      name: firstName
      required: false
      schema:
        description: column names to project
        type: string
    firstParam:
      description: Paging offset
      in: query
      name: first
      schema:
        format: int32
        type: integer
      style: form
    fullParam:
      in: query
      name: full
      required: false
      schema:
        description: column names to project
        type: boolean
    guidParamQuery:
      in: query
      name: guid
      required: false
      schema:
        description: entity id
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
    idParam:
      in: path
      name: id
      required: true
      schema:
        description: entity id
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
    ignoreCountParam:
      in: query
      name: ignoreCount
      required: false
      schema:
        description: column names to project
        type: boolean
    ignoreGroupMetaParam:
      in: query
      name: ignoreGroupMeta
      required: false
      schema:
        description: column names to project
        type: boolean
    ignoreRolesMetaParam:
      in: query
      name: ignoreRolesMeta
      required: false
      schema:
        description: column names to project
        type: boolean
    ipAddressParam:
      description: IP address
      in: query
      name: ipAddress
      schema:
        type: string
      style: form
    lastNameParam:
      in: query
      name: lastName
      required: false
      schema:
        description: column names to project
        type: string
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        description: The numbers of items to return
        example: 10
        type: integer
    maxParam:
      description: Maximum results size (defaults to 100)
      in: query
      name: max
      schema:
        format: int32
        type: integer
      style: form
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        description: Offset for Pagination
        example: 0
        type: integer
    podNameParam:
      in: path
      name: podName
      required: true
      schema:
        description: Name of the workflow pod
        type: string
    podNameParamQuery:
      in: query
      name: podName
      required: false
      schema:
        description: Name of the workflow pod
        type: string
    policyIdParam:
      description: To date
      in: query
      name: policyId
      schema:
        type: string
    previewParam:
      in: query
      name: preview
      required: false
      schema:
        description: column names to project
        type: boolean
    qualifiedNameParam:
      description: qualified-name of asset
      in: query
      name: qualifiedName
      schema:
        type: string
    realmParam:
      in: path
      name: realm
      required: true
      schema:
        description: realm
        type: string
    relationParam:
      in: query
      name: relations
      required: false
      schema:
        description: column names to lookup
        items:
          type: string
        type: array
    resourceParam:
      description: To date
      in: query
      name: resource
      schema:
        type: string
    resourceTypeParam:
      in: path
      name: resourceType
      required: true
      schema:
        description: k8s resource name
        type: string
    searchParam:
      in: query
      name: search
      required: false
      schema:
        description: column names to project
        type: string
    sessionIdParam:
      in: path
      name: sessionId
      required: true
      schema:
        description: session id
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
    sortParam:
      in: query
      name: sort
      required: false
      schema:
        description: column names for sorting +/-
        example: created_at
        items:
          type: string
        type: array
    startDateParam:
      description: To date
      in: query
      name: startDate
      schema:
        type: string
    tenantParam:
      in: path
      name: tenant
      required: true
      schema:
        description: tenant
        type: string
    tenantQueryParam:
      in: query
      name: tenant
      required: false
      schema:
        description: Tenant Alias / ID in Query Params
        type: string
    typeParam:
      description: The types of events to return
      in: query
      name: type
      schema:
        items:
          type: string
        type: array
      style: form
    userParam:
      description: User id
      in: query
      name: user
      schema:
        type: string
      style: form
    userTypesParam:
      in: query
      name: userTypes
      required: false
      schema:
        description: user types to include
        items:
          type: string
        type: array
    usernameParam:
      in: query
      name: username
      required: false
      schema:
        description: column names to project
        type: string
    versionParam:
      in: path
      name: version
      required: true
      schema:
        description: entity version
        type: string
    whereParam:
      in: query
      name: where
      required: false
      schema:
        description: where string
        type: string
    workflowNameParam:
      in: path
      name: workflowName
      required: true
      schema:
        description: Name of the workflow template
        type: string
    workflowTemplateNameParam:
      in: path
      name: workflowTemplateName
      required: true
      schema:
        description: Name of the workflow template
        type: string
  schemas:
    AccessResult:
      description: ""
      example:
        isFinal: true
        policy:
          allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        result: 12345
      properties:
        isFinal:
          description: ""
          readOnly: false
          type: boolean
        policy:
          $ref: '#/components/schemas/RangerPolicy'
          readOnly: false
        result:
          description: ""
          format: int32
          readOnly: false
          type: integer
      title: AccessResult
      type: object
    AccessToken:
      properties:
        acr:
          type: string
        address:
          $ref: '#/components/schemas/AddressClaimSet'
        allowed-origins:
          items:
            type: string
          type: array
        at_hash:
          type: string
        auth_time:
          format: int64
          type: integer
        authorization:
          $ref: '#/components/schemas/AccessToken-Authorization'
        azp:
          type: string
        birthdate:
          type: string
        c_hash:
          type: string
        category:
          enum:
          - INTERNAL
          - ACCESS
          - ID
          - ADMIN
          - USERINFO
          type: string
        claims_locales:
          type: string
        cnf:
          $ref: '#/components/schemas/AccessToken-CertConf'
        email:
          type: string
        email_verified:
          type: boolean
        exp:
          format: int64
          type: integer
        family_name:
          type: string
        gender:
          type: string
        given_name:
          type: string
        iat:
          format: int64
          type: integer
        iss:
          type: string
        jti:
          type: string
        locale:
          type: string
        middle_name:
          type: string
        name:
          type: string
        nbf:
          format: int64
          type: integer
        nickname:
          type: string
        nonce:
          type: string
        otherClaims:
          additionalProperties: true
          type: object
        phone_number:
          type: string
        phone_number_verified:
          type: boolean
        picture:
          type: string
        preferred_username:
          type: string
        profile:
          type: string
        realm_access:
          $ref: '#/components/schemas/AccessToken-Access'
        s_hash:
          type: string
        scope:
          type: string
        session_state:
          type: string
        sub:
          type: string
        trusted-certs:
          items:
            type: string
          type: array
        typ:
          type: string
        updated_at:
          format: int64
          type: integer
        website:
          type: string
        zoneinfo:
          type: string
      type: object
    AccessToken-Access:
      properties:
        roles:
          items:
            type: string
          type: array
        verify_caller:
          type: boolean
      type: object
    AccessToken-Authorization:
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
      type: object
    AccessToken-CertConf:
      properties:
        x5t#S256:
          type: string
      type: object
    AddGroupsToRole:
      properties:
        groups:
          items:
            type: string
          type: array
      required:
      - groups
      type: object
    AddGroupsToUser:
      properties:
        groups:
          items:
            type: string
          type: array
      required:
      - groups
      type: object
    AddMembersToGroup:
      properties:
        users:
          items:
            type: string
          type: array
      required:
      - users
      type: object
    AddUser:
      properties:
        users:
          items:
            $ref: '#/components/schemas/NewUser'
          type: array
      type: object
    AddUsersToRole:
      properties:
        users:
          items:
            type: string
          type: array
      required:
      - users
      type: object
    AddressClaimSet:
      properties:
        country:
          type: string
        formatted:
          type: string
        locality:
          type: string
        postal_code:
          type: string
        region:
          type: string
        street_address:
          type: string
      type: object
    AdminEventRepresentation:
      properties:
        authDetails:
          $ref: '#/components/schemas/AuthDetailsRepresentation'
        error:
          type: string
        operationType:
          type: string
        realmId:
          type: string
        representation:
          type: string
        resourcePath:
          type: string
        resourceType:
          type: string
        time:
          format: int64
          type: integer
      type: object
    AuthDetailsRepresentation:
      properties:
        clientId:
          type: string
        ipAddress:
          type: string
        realmId:
          type: string
        userId:
          type: string
      type: object
    AuthenticationExecutionExportRepresentation:
      properties:
        authenticator:
          type: string
        authenticatorConfig:
          type: string
        authenticatorFlow:
          type: boolean
        autheticatorFlow:
          type: boolean
        flowAlias:
          type: string
        priority:
          format: int32
          type: integer
        requirement:
          type: string
        userSetupAllowed:
          type: boolean
      type: object
    AuthenticationExecutionInfoRepresentation:
      properties:
        alias:
          type: string
        authenticationConfig:
          type: string
        authenticationFlow:
          type: boolean
        configurable:
          type: boolean
        displayName:
          type: string
        flowId:
          type: string
        id:
          type: string
        index:
          format: int32
          type: integer
        level:
          format: int32
          type: integer
        providerId:
          type: string
        requirement:
          type: string
        requirementChoices:
          items:
            type: string
          type: array
      type: object
    AuthenticationExecutionRepresentation:
      properties:
        authenticator:
          type: string
        authenticatorConfig:
          type: string
        authenticatorFlow:
          type: boolean
        autheticatorFlow:
          type: boolean
        flowId:
          type: string
        id:
          type: string
        parentFlow:
          type: string
        priority:
          format: int32
          type: integer
        requirement:
          type: string
      type: object
    AuthenticationFlowRepresentation:
      properties:
        alias:
          type: string
        authenticationExecutions:
          items:
            $ref: '#/components/schemas/AuthenticationExecutionExportRepresentation'
          type: array
        builtIn:
          type: boolean
        description:
          type: string
        id:
          type: string
        providerId:
          type: string
        topLevel:
          type: boolean
      type: object
    AuthenticatorConfigInfoRepresentation:
      properties:
        helpText:
          type: string
        name:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/ConfigPropertyRepresentation'
          type: array
        providerId:
          type: string
      type: object
    AuthenticatorConfigRepresentation:
      properties:
        alias:
          type: string
        config:
          additionalProperties: true
          type: object
        id:
          type: string
      type: object
    BulkUserRepresentation:
      properties:
        ids:
          items:
            pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
            type: string
          type: array
        method:
          type: string
        usernames:
          items:
            type: string
          type: array
      type: object
    CertificateRepresentation:
      properties:
        certificate:
          type: string
        kid:
          type: string
        privateKey:
          type: string
        publicKey:
          type: string
      type: object
    ClientInitialAccessCreatePresentation:
      properties:
        count:
          format: int32
          type: integer
        expiration:
          format: int32
          type: integer
      type: object
    ClientInitialAccessPresentation:
      properties:
        count:
          format: int32
          type: integer
        expiration:
          format: int32
          type: integer
        id:
          type: string
        remainingCount:
          format: int32
          type: integer
        timestamp:
          format: int32
          type: integer
        token:
          type: string
      type: object
    ClientMappingsRepresentation:
      properties:
        client:
          type: string
        id:
          type: string
        mappings:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          type: array
      type: object
    ClientRepresentation:
      properties:
        access:
          additionalProperties: true
          type: object
        adminUrl:
          type: string
        alwaysDisplayInConsole:
          type: boolean
        attributes:
          additionalProperties: true
          type: object
        authenticationFlowBindingOverrides:
          additionalProperties: true
          type: object
        authorizationServicesEnabled:
          type: boolean
        authorizationSettings:
          $ref: '#/components/schemas/ResourceServerRepresentation'
        baseUrl:
          type: string
        bearerOnly:
          type: boolean
        clientAuthenticatorType:
          type: string
        clientId:
          type: string
        consentRequired:
          type: boolean
        defaultClientScopes:
          items:
            type: string
          type: array
        defaultRoles:
          items:
            type: string
          type: array
        description:
          type: string
        directAccessGrantsEnabled:
          type: boolean
        enabled:
          type: boolean
        frontchannelLogout:
          type: boolean
        fullScopeAllowed:
          type: boolean
        id:
          type: string
        implicitFlowEnabled:
          type: boolean
        name:
          type: string
        nodeReRegistrationTimeout:
          format: int32
          type: integer
        notBefore:
          format: int32
          type: integer
        optionalClientScopes:
          items:
            type: string
          type: array
        origin:
          type: string
        protocol:
          type: string
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          type: array
        publicClient:
          type: boolean
        redirectUris:
          items:
            type: string
          type: array
        registeredNodes:
          additionalProperties: true
          type: object
        registrationAccessToken:
          type: string
        rootUrl:
          type: string
        secret:
          type: string
        serviceAccountsEnabled:
          type: boolean
        standardFlowEnabled:
          type: boolean
        surrogateAuthRequired:
          type: boolean
        webOrigins:
          items:
            type: string
          type: array
      type: object
    ClientScopeEvaluateResource-ProtocolMapperEvaluationRepresentation:
      properties:
        containerId:
          type: string
        containerName:
          type: string
        containerType:
          type: string
        mapperId:
          type: string
        mapperName:
          type: string
        protocolMapper:
          type: string
      type: object
    ClientScopeRepresentation:
      properties:
        attributes:
          additionalProperties: true
          type: object
        description:
          type: string
        id:
          type: string
        name:
          type: string
        protocol:
          type: string
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          type: array
      type: object
    ComponentExportRepresentation:
      properties:
        config:
          $ref: '#/components/schemas/MultivaluedHashMap'
        id:
          type: string
        name:
          type: string
        providerId:
          type: string
        subComponents:
          $ref: '#/components/schemas/MultivaluedHashMap'
        subType:
          type: string
      type: object
    ComponentRepresentation:
      properties:
        config:
          $ref: '#/components/schemas/MultivaluedHashMap'
        id:
          type: string
        name:
          type: string
        parentId:
          type: string
        providerId:
          type: string
        providerType:
          type: string
        subType:
          type: string
      type: object
    ComponentTypeRepresentation:
      properties:
        helpText:
          type: string
        id:
          type: string
        metadata:
          additionalProperties: true
          type: object
        properties:
          items:
            $ref: '#/components/schemas/ConfigPropertyRepresentation'
          type: array
      type: object
    ConfigPropertyRepresentation:
      properties:
        defaultValue:
          type: object
        helpText:
          type: string
        label:
          type: string
        name:
          type: string
        options:
          items:
            type: string
          type: array
        secret:
          type: boolean
        type:
          type: string
      type: object
    ConnectionArchive:
      properties:
        deleteAssets:
          type: boolean
        deleteType:
          default: HARD
          type: string
      type: object
    ConnectionQuery:
      properties:
        allowPreview:
          type: boolean
        allowQuery:
          type: boolean
        defaultCredentialId:
          type: string
        previewConfig:
          type: object
        queryConfig:
          type: object
      required:
      - defaultCredentialId
      type: object
    ConnectionSetup:
      properties:
        botQualifiedName:
          type: string
        connection:
          $ref: '#/components/schemas/connection'
        credential:
          $ref: '#/components/schemas/credential'
        job:
          $ref: '#/components/schemas/job'
      required:
      - connection
      - credential
      type: object
    ConnectionTest:
      properties:
        host:
          type: string
        port:
          type: integer
      required:
      - host
      type: object
    CreateAccessToken:
      properties:
        category:
          type: string
        name:
          type: string
        roleId:
          type: string
        roleName:
          type: string
        validitySeconds:
          type: integer
      required:
      - name
      - category
      type: object
    CreateGroup:
      properties:
        group:
          $ref: '#/components/schemas/GroupRepresentation'
        users:
          items:
            type: string
          type: array
      required:
      - group
      type: object
    CredentialRepresentation:
      properties:
        createdDate:
          format: int64
          type: integer
        credentialData:
          type: string
        id:
          type: string
        priority:
          format: int32
          type: integer
        secretData:
          type: string
        temporary:
          type: boolean
        type:
          type: string
        userLabel:
          type: string
        value:
          type: string
      type: object
    EventRepresentation:
      properties:
        clientId:
          type: string
        details:
          additionalProperties: true
          type: object
        error:
          type: string
        ipAddress:
          type: string
        realmId:
          type: string
        sessionId:
          type: string
        time:
          format: int64
          type: integer
        type:
          type: string
        userId:
          type: string
      type: object
    FederatedIdentityRepresentation:
      properties:
        identityProvider:
          type: string
        userId:
          type: string
        userName:
          type: string
      type: object
    GlobalRequestResult:
      properties:
        failedRequests:
          items:
            type: string
          type: array
        successRequests:
          items:
            type: string
          type: array
      type: object
    GrantRevokeRequest:
      description: ""
      example:
        accessTypes:
        - '...'
        - '...'
        clientIPAddress: '...'
        clientType: '...'
        clusterName: '...'
        delegateAdmin: true
        enableAudit: true
        grantor: '...'
        grantorGroups:
        - '...'
        - '...'
        groups:
        - '...'
        - '...'
        isRecursive: true
        replaceExistingPermissions: true
        requestData: '...'
        resource:
          property1: '...'
          property2: '...'
        roles:
        - '...'
        - '...'
        sessionId: '...'
        users:
        - '...'
        - '...'
        zoneName: '...'
      properties:
        accessTypes:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        clientIPAddress:
          description: ""
          readOnly: false
          schema:
            type: string
        clientType:
          description: ""
          readOnly: false
          schema:
            type: string
        clusterName:
          description: ""
          readOnly: false
          schema:
            type: string
        delegateAdmin:
          description: ""
          readOnly: false
          type: boolean
        enableAudit:
          description: ""
          readOnly: false
          type: boolean
        grantor:
          description: ""
          readOnly: false
          schema:
            type: string
        grantorGroups:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        groups:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        isRecursive:
          description: ""
          readOnly: false
          type: boolean
        replaceExistingPermissions:
          description: ""
          readOnly: false
          type: boolean
        requestData:
          description: ""
          readOnly: false
          schema:
            type: string
        resource:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        roles:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        sessionId:
          description: ""
          readOnly: false
          schema:
            type: string
        users:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        zoneName:
          description: ""
          readOnly: false
          schema:
            type: string
      title: GrantRevokeRequest
      type: object
    GrantRevokeRoleRequest:
      description: ""
      example:
        clientIPAddress: '...'
        clientType: '...'
        clusterName: '...'
        grantOption: true
        grantor: '...'
        grantorGroups:
        - '...'
        - '...'
        groups:
        - '...'
        - '...'
        requestData: '...'
        roles:
        - '...'
        - '...'
        sessionId: '...'
        targetRoles:
        - '...'
        - '...'
        users:
        - '...'
        - '...'
      properties:
        clientIPAddress:
          description: ""
          readOnly: false
          schema:
            type: string
        clientType:
          description: ""
          readOnly: false
          schema:
            type: string
        clusterName:
          description: ""
          readOnly: false
          schema:
            type: string
        grantOption:
          description: ""
          readOnly: false
          type: boolean
        grantor:
          description: ""
          readOnly: false
          schema:
            type: string
        grantorGroups:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        groups:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        requestData:
          description: ""
          readOnly: false
          schema:
            type: string
        roles:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        sessionId:
          description: ""
          readOnly: false
          schema:
            type: string
        targetRoles:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        users:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
      title: GrantRevokeRoleRequest
      type: object
    GroupRepresentation:
      properties:
        access:
          additionalProperties: true
          type: object
        attributes:
          additionalProperties: true
          type: object
        clientRoles:
          additionalProperties: true
          type: object
        id:
          type: string
        name:
          type: string
        path:
          type: string
        realmRoles:
          items:
            type: string
          type: array
        subGroups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          type: array
      type: object
    IdentityProviderMapperRepresentation:
      properties:
        config:
          additionalProperties: true
          type: object
        id:
          type: string
        identityProviderAlias:
          type: string
        identityProviderMapper:
          type: string
        name:
          type: string
      type: object
    IdentityProviderRepresentation:
      properties:
        addReadTokenRoleOnCreate:
          type: boolean
        alias:
          type: string
        config:
          additionalProperties: true
          type: object
        displayName:
          type: string
        enabled:
          type: boolean
        firstBrokerLoginFlowAlias:
          type: string
        internalId:
          type: string
        linkOnly:
          type: boolean
        postBrokerLoginFlowAlias:
          type: string
        providerId:
          type: string
        storeToken:
          type: boolean
        trustEmail:
          type: boolean
      required:
      - alias
      type: object
    KeyStoreConfig:
      properties:
        format:
          type: string
        keyAlias:
          type: string
        keyPassword:
          type: string
        realmAlias:
          type: string
        realmCertificate:
          type: boolean
        storePassword:
          type: string
      type: object
    KeysMetadataRepresentation:
      properties:
        active:
          additionalProperties: true
          type: object
        keys:
          items:
            $ref: '#/components/schemas/KeysMetadataRepresentation-KeyMetadataRepresentation'
          type: array
      type: object
    KeysMetadataRepresentation-KeyMetadataRepresentation:
      properties:
        algorithm:
          type: string
        certificate:
          type: string
        kid:
          type: string
        providerId:
          type: string
        providerPriority:
          format: int64
          type: integer
        publicKey:
          type: string
        status:
          type: string
        type:
          type: string
      type: object
    ManagementPermissionReference:
      properties:
        enabled:
          type: boolean
        resource:
          type: string
        scopePermissions:
          additionalProperties: true
          type: object
      type: object
    MappingsRepresentation:
      properties:
        clientMappings:
          additionalProperties: true
          type: object
        realmMappings:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          type: array
      type: object
    MatchType:
      description: ""
      enum:
      - NONE
      - SELF
      - DESCENDANT
      - ANCESTOR
      - ANCESTOR_WITH_WILDCARDS
      schema:
        type: string
      title: MatchType
    MemoryInfoRepresentation:
      properties:
        free:
          format: int64
          type: integer
        freeFormated:
          type: string
        freePercentage:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
        totalFormated:
          type: string
        used:
          format: int64
          type: integer
        usedFormated:
          type: string
      type: object
    Message:
      description: ""
      example:
        fieldName: '...'
        message: '...'
        name: '...'
        objectId: 12345
        rbKey: '...'
      properties:
        fieldName:
          description: ""
          readOnly: false
          schema:
            type: string
        message:
          description: ""
          readOnly: false
          schema:
            type: string
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        objectId:
          description: ""
          readOnly: false
          type: number
        rbKey:
          description: ""
          readOnly: false
          schema:
            type: string
      title: Message
      type: object
    MultivaluedHashMap:
      properties:
        empty:
          type: boolean
        loadFactor:
          format: float
          type: number
        threshold:
          format: int32
          type: integer
      type: object
    NewUser:
      properties:
        email:
          type: string
        roleId:
          type: string
        roleName:
          type: string
      required:
      - email
      - roleName
      - roleId
      type: object
    PartialImportRepresentation:
      properties:
        clients:
          items:
            $ref: '#/components/schemas/ClientRepresentation'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/IdentityProviderRepresentation'
          type: array
        ifResourceExists:
          type: string
        policy:
          enum:
          - SKIP
          - OVERWRITE
          - FAIL
          type: string
        roles:
          $ref: '#/components/schemas/RolesRepresentation'
        users:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          type: array
      type: object
    PasswordPolicyTypeRepresentation:
      properties:
        configType:
          type: string
        defaultValue:
          type: string
        displayName:
          type: string
        id:
          type: string
        multipleSupported:
          type: boolean
      type: object
    Permission:
      properties:
        claims:
          additionalProperties: true
          type: object
        rsid:
          type: string
        rsname:
          type: string
        scopes:
          items:
            type: string
          type: array
      type: object
    PolicyRepresentation:
      properties:
        config:
          additionalProperties: true
          type: object
        decisionStrategy:
          enum:
          - AFFIRMATIVE
          - UNANIMOUS
          - CONSENSUS
          type: string
        description:
          type: string
        id:
          type: string
        logic:
          enum:
          - POSITIVE
          - NEGATIVE
          type: string
        name:
          type: string
        owner:
          type: string
        policies:
          items:
            type: string
          type: array
        resources:
          items:
            type: string
          type: array
        resourcesData:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          type: array
        scopes:
          items:
            type: string
          type: array
        scopesData:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          type: array
        type:
          type: string
      type: object
    ProfileInfoRepresentation:
      properties:
        disabledFeatures:
          items:
            type: string
          type: array
        experimentalFeatures:
          items:
            type: string
          type: array
        name:
          type: string
        previewFeatures:
          items:
            type: string
          type: array
      type: object
    ProtocolMapperRepresentation:
      properties:
        config:
          additionalProperties: true
          type: object
        id:
          type: string
        name:
          type: string
        protocol:
          type: string
        protocolMapper:
          type: string
      type: object
    ProviderRepresentation:
      properties:
        operationalInfo:
          additionalProperties: true
          type: object
        order:
          format: int32
          type: integer
      type: object
    RESTResponse:
      description: ""
      example:
        httpStatusCode: 12345
        message: '...'
        messageList:
        - fieldName: '...'
          message: '...'
          name: '...'
          objectId: 12345
          rbKey: '...'
        - fieldName: '...'
          message: '...'
          name: '...'
          objectId: 12345
          rbKey: '...'
        msgDesc: '...'
        statusCode: 12345
      properties:
        httpStatusCode:
          description: ""
          format: int32
          readOnly: false
          type: integer
        message:
          description: ""
          readOnly: false
          schema:
            type: string
        messageList:
          description: ""
          items:
            $ref: '#/components/schemas/Message'
          readOnly: false
          type: array
        msgDesc:
          description: ""
          readOnly: false
          schema:
            type: string
        statusCode:
          description: ""
          format: int32
          readOnly: false
          type: integer
      title: RESTResponse
      type: object
    RangerAccessResource:
      description: ""
      example:
        asMap:
          property1: {}
          property2: {}
        asString: '...'
        cacheKey: '...'
        keys:
        - '...'
        - '...'
        leafName: '...'
        ownerUser: '...'
        readOnlyCopy:
          asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
      properties:
        asMap:
          additionalProperties:
            type: object
          description: ""
          readOnly: false
          type: object
        asString:
          description: ""
          readOnly: false
          schema:
            type: string
        cacheKey:
          description: ""
          readOnly: false
          schema:
            type: string
        keys:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        leafName:
          description: ""
          readOnly: false
          schema:
            type: string
        ownerUser:
          description: ""
          readOnly: false
          schema:
            type: string
        readOnlyCopy:
          $ref: '#/components/schemas/RangerAccessResource'
          readOnly: false
        serviceDef:
          $ref: '#/components/schemas/RangerServiceDef'
          readOnly: false
      title: RangerAccessResource
      type: object
    RangerAccessResourceImpl:
      description: ""
      example:
        asMap:
          property1: {}
          property2: {}
        asString: '...'
        cacheKey: '...'
        keys:
        - '...'
        - '...'
        leafName: '...'
        ownerUser: '...'
        readOnlyCopy:
          asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
      properties:
        asMap:
          additionalProperties:
            type: object
          description: ""
          readOnly: false
          type: object
        asString:
          description: ""
          readOnly: false
          schema:
            type: string
        cacheKey:
          description: ""
          readOnly: false
          schema:
            type: string
        keys:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        leafName:
          description: ""
          readOnly: false
          schema:
            type: string
        ownerUser:
          description: ""
          readOnly: false
          schema:
            type: string
        readOnlyCopy:
          $ref: '#/components/schemas/RangerAccessResource'
          readOnly: false
        serviceDef:
          $ref: '#/components/schemas/RangerServiceDef'
          readOnly: false
      title: RangerAccessResourceImpl
      type: object
    RangerAccessResourceReadOnly:
      description: ""
      example:
        asMap:
          property1: {}
          property2: {}
        asString: '...'
        cacheKey: '...'
        keys:
        - '...'
        - '...'
        leafName: '...'
        ownerUser: '...'
        readOnlyCopy:
          asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
      properties:
        asMap:
          additionalProperties:
            type: object
          description: ""
          readOnly: false
          type: object
        asString:
          description: ""
          readOnly: false
          schema:
            type: string
        cacheKey:
          description: ""
          readOnly: false
          schema:
            type: string
        keys:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        leafName:
          description: ""
          readOnly: false
          schema:
            type: string
        ownerUser:
          description: ""
          readOnly: false
          schema:
            type: string
        readOnlyCopy:
          $ref: '#/components/schemas/RangerAccessResource'
          readOnly: false
        serviceDef:
          $ref: '#/components/schemas/RangerServiceDef'
          readOnly: false
      title: RangerAccessResourceReadOnly
      type: object
    RangerAccessTypeDef:
      description: ""
      example:
        impliedGrants:
        - '...'
        - '...'
        itemId: 12345
        label: '...'
        name: '...'
        rbKeyLabel: '...'
      properties:
        impliedGrants:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerAccessTypeDef
      type: object
    RangerAssetPolicy:
      properties:
        owner:
          properties:
            groups:
              items:
                type: string
              type: array
            users:
              items:
                type: string
              type: array
          required:
          - users
          - groups
          title: AssetOwner
          type: object
        qualifiedName:
          type: string
        subscriber:
          properties:
            groups:
              items:
                type: string
              type: array
            users:
              items:
                type: string
              type: array
          required:
          - users
          - groups
          title: AssetSubscriber
          type: object
      required:
      - qualifiedName
      - owner
      - subscriber
      title: AssetPolicy
      type: object
    RangerAtlanAssetPolicy:
      properties:
        assetType:
          type: string
        assets:
          items:
            type: string
          type: array
        classifications:
          items:
            type: string
          type: array
        groups:
          properties:
            editors:
              items:
                type: string
              type: array
            editorsExcludedFromAllow:
              items:
                type: string
              type: array
            editorsExcludedFromDeny:
              items:
                type: string
              type: array
            editorsdenied:
              items:
                type: string
              type: array
            subscribers:
              items:
                type: string
              type: array
            subscribersExcludedFromAllow:
              items:
                type: string
              type: array
            subscribersExcludedFromDeny:
              items:
                type: string
              type: array
            subscribersdenied:
              items:
                type: string
              type: array
          required:
          - subscribers
          - subscribersdenied
          - editors
          - editorsdenied
          title: AssetOwner
          type: object
        includeAllAssetTypes:
          type: boolean
        includeAllAssets:
          type: boolean
        includeAllClassifications:
          type: boolean
        isEnabled:
          type: boolean
        policyName:
          type: string
        users:
          properties:
            editors:
              items:
                type: string
              type: array
            editorsExcludedFromAllow:
              items:
                type: string
              type: array
            editorsExcludedFromDeny:
              items:
                type: string
              type: array
            editorsdenied:
              items:
                type: string
              type: array
            subscribers:
              items:
                type: string
              type: array
            subscribersExcludedFromAllow:
              items:
                type: string
              type: array
            subscribersExcludedFromDeny:
              items:
                type: string
              type: array
            subscribersdenied:
              items:
                type: string
              type: array
          required:
          - subscribers
          - subscribersdenied
          - editors
          - editorsdenied
          title: AssetSubscriber
          type: object
      required:
      - policyName
      - includeAllAssetTypes
      - includeAllAssets
      - includeAllClassifications
      - assetType
      - assets
      - classifications
      - isEnabled
      - groups
      - users
      title: AssetPolicy
      type: object
    RangerBaseModelObject:
      description: ""
      example:
        createTime: 12345
        createdBy: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      properties:
        createTime:
          description: ""
          readOnly: false
          schema:
            type: number
        createdBy:
          description: ""
          readOnly: false
          schema:
            type: string
        guid:
          description: ""
          readOnly: false
          schema:
            type: string
        id:
          description: ""
          readOnly: false
          schema:
            type: number
        isEnabled:
          description: ""
          readOnly: false
          schema:
            type: boolean
        updateTime:
          description: ""
          readOnly: false
          schema:
            type: number
        updatedBy:
          description: ""
          readOnly: false
          schema:
            type: string
        version:
          description: ""
          readOnly: false
          schema:
            type: number
      title: RangerBaseModelObject
      type: object
    RangerContextEnricherDef:
      description: ""
      example:
        enricher: '...'
        enricherOptions:
          property1: '...'
          property2: '...'
        itemId: 12345
        name: '...'
      properties:
        enricher:
          description: ""
          readOnly: false
          schema:
            type: string
        enricherOptions:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        itemId:
          description: ""
          readOnly: false
          type: number
        name:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerContextEnricherDef
      type: object
    RangerDataMaskDef:
      description: ""
      example:
        accessTypes:
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        maskTypes:
        - dataMaskOptions:
            property1: '...'
            property2: '...'
          description: '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          transformer: '...'
        - dataMaskOptions:
            property1: '...'
            property2: '...'
          description: '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          transformer: '...'
        resources:
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
      properties:
        accessTypes:
          description: ""
          items:
            $ref: '#/components/schemas/RangerAccessTypeDef'
          readOnly: false
          type: array
        maskTypes:
          description: ""
          items:
            $ref: '#/components/schemas/RangerDataMaskTypeDef'
          readOnly: false
          type: array
        resources:
          description: ""
          items:
            $ref: '#/components/schemas/RangerResourceDef'
          readOnly: false
          type: array
      title: RangerDataMaskDef
      type: object
    RangerDataMaskPolicyItem:
      allOf:
      - $ref: '#/components/schemas/RangerPolicyItem'
      - properties:
          dataMaskInfo:
            $ref: '#/components/schemas/RangerPolicyItemDataMaskInfo'
            readOnly: false
      description: ""
      example:
        accesses:
        - isAllowed: true
          type: '...'
        - isAllowed: true
          type: '...'
        conditions:
        - type: '...'
          values:
          - '...'
          - '...'
        - type: '...'
          values:
          - '...'
          - '...'
        dataMaskInfo:
          conditionExpr: '...'
          dataMaskType: '...'
          valueExpr: '...'
        delegateAdmin: true
        groups:
        - '...'
        - '...'
        roles:
        - '...'
        - '...'
        users:
        - '...'
        - '...'
      title: RangerDataMaskPolicyItem
      type: object
    RangerDataMaskTypeDef:
      description: ""
      example:
        dataMaskOptions:
          property1: '...'
          property2: '...'
        description: '...'
        itemId: 12345
        label: '...'
        name: '...'
        rbKeyDescription: '...'
        rbKeyLabel: '...'
        transformer: '...'
      properties:
        dataMaskOptions:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        description:
          description: ""
          readOnly: false
          schema:
            type: string
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyDescription:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
        transformer:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerDataMaskTypeDef
      type: object
    RangerEnumDef:
      description: ""
      example:
        defaultIndex: 12345
        elements:
        - itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        - itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        itemId: 12345
        name: '...'
      properties:
        defaultIndex:
          description: ""
          readOnly: false
          type: number
        elements:
          description: ""
          items:
            $ref: '#/components/schemas/RangerEnumElementDef'
          readOnly: false
          type: array
        itemId:
          description: ""
          readOnly: false
          type: number
        name:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerEnumDef
      type: object
    RangerEnumElementDef:
      description: ""
      example:
        itemId: 12345
        label: '...'
        name: '...'
        rbKeyLabel: '...'
      properties:
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerEnumElementDef
      type: object
    RangerExportPolicyList:
      allOf:
      - $ref: '#/components/schemas/RangerPolicyList'
      - properties:
          metaDataInfo:
            additionalProperties:
              type: object
            description: ""
            readOnly: false
            type: object
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        metaDataInfo:
          property1: {}
          property2: {}
        pageSize: 12345
        policies:
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerExportPolicyList
      type: object
    RangerMutableResource:
      description: ""
      example: {}
      title: RangerMutableResource
      type: object
    RangerPluginInfo:
      description: ""
      example:
        appType: '...'
        createTime: 12345
        hostName: '...'
        id: 12345
        info:
          property1: '...'
          property2: '...'
        ipAddress: '...'
        serviceName: '...'
        serviceType: '...'
        updateTime: 12345
      properties:
        appType:
          description: ""
          readOnly: false
          schema:
            type: string
        createTime:
          description: ""
          readOnly: false
          type: number
        hostName:
          description: ""
          readOnly: false
          schema:
            type: string
        id:
          description: ""
          readOnly: false
          type: number
        info:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        ipAddress:
          description: ""
          readOnly: false
          schema:
            type: string
        serviceName:
          description: ""
          readOnly: false
          schema:
            type: string
        serviceType:
          description: ""
          readOnly: false
          schema:
            type: string
        updateTime:
          description: ""
          readOnly: false
          type: number
      title: RangerPluginInfo
      type: object
    RangerPluginInfoList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          pluginInfoList:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPluginInfo'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        pluginInfoList:
        - appType: '...'
          createTime: 12345
          hostName: '...'
          id: 12345
          info:
            property1: '...'
            property2: '...'
          ipAddress: '...'
          serviceName: '...'
          serviceType: '...'
          updateTime: 12345
        - appType: '...'
          createTime: 12345
          hostName: '...'
          id: 12345
          info:
            property1: '...'
            property2: '...'
          ipAddress: '...'
          serviceName: '...'
          serviceType: '...'
          updateTime: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerPluginInfoList
      type: object
    RangerPolicy:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          allowExceptions:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyItem'
            readOnly: false
            type: array
          conditions:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyItemCondition'
            readOnly: false
            type: array
          dataMaskPolicyItems:
            description: ""
            items:
              $ref: '#/components/schemas/RangerDataMaskPolicyItem'
            readOnly: false
            type: array
          denyExceptions:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyItem'
            readOnly: false
            type: array
          denyPolicyItems:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyItem'
            readOnly: false
            type: array
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          isAuditEnabled:
            description: ""
            readOnly: false
            type: boolean
          isDenyAllElse:
            description: ""
            readOnly: false
            type: boolean
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          options:
            additionalProperties:
              type: object
            description: ""
            readOnly: false
            type: object
          policyItems:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyItem'
            readOnly: false
            type: array
          policyLabels:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          policyPriority:
            description: ""
            readOnly: false
            type: number
          policyType:
            description: ""
            readOnly: false
            type: number
          resourceSignature:
            description: ""
            readOnly: false
            schema:
              type: string
          resources:
            additionalProperties:
              $ref: '#/components/schemas/RangerPolicyResource'
            description: ""
            readOnly: false
            type: object
          rowFilterPolicyItems:
            description: ""
            items:
              $ref: '#/components/schemas/RangerRowFilterPolicyItem'
            readOnly: false
            type: array
          service:
            description: ""
            readOnly: false
            schema:
              type: string
          serviceType:
            description: ""
            readOnly: false
            schema:
              type: string
          validitySchedules:
            description: ""
            items:
              $ref: '#/components/schemas/RangerValiditySchedule'
            readOnly: false
            type: array
          zoneName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        allowExceptions:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        conditions:
        - type: '...'
          values:
          - '...'
          - '...'
        - type: '...'
          values:
          - '...'
          - '...'
        createTime: 12345
        createdBy: '...'
        dataMaskPolicyItems:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          dataMaskInfo:
            conditionExpr: '...'
            dataMaskType: '...'
            valueExpr: '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          dataMaskInfo:
            conditionExpr: '...'
            dataMaskType: '...'
            valueExpr: '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        denyExceptions:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        denyPolicyItems:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        description: '...'
        guid: '...'
        id: 12345
        isAuditEnabled: true
        isDenyAllElse: true
        isEnabled: true
        name: '...'
        options:
          property1: {}
          property2: {}
        policyItems:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          users:
          - '...'
          - '...'
        policyLabels:
        - '...'
        - '...'
        policyPriority: 12345
        policyType: 12345
        resourceSignature: '...'
        resources:
          property1:
            isExcludes: true
            isRecursive: true
            values:
            - '...'
            - '...'
          property2:
            isExcludes: true
            isRecursive: true
            values:
            - '...'
            - '...'
        rowFilterPolicyItems:
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          rowFilterInfo:
            filterExpr: '...'
          users:
          - '...'
          - '...'
        - accesses:
          - isAllowed: true
            type: '...'
          - isAllowed: true
            type: '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          delegateAdmin: true
          groups:
          - '...'
          - '...'
          roles:
          - '...'
          - '...'
          rowFilterInfo:
            filterExpr: '...'
          users:
          - '...'
          - '...'
        service: '...'
        serviceType: '...'
        updateTime: 12345
        updatedBy: '...'
        validitySchedules:
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
        version: 12345
        zoneName: '...'
      title: RangerPolicy
      type: object
    RangerPolicyConditionDef:
      description: ""
      example:
        description: '...'
        evaluator: '...'
        evaluatorOptions:
          property1: '...'
          property2: '...'
        itemId: 12345
        label: '...'
        name: '...'
        rbKeyDescription: '...'
        rbKeyLabel: '...'
        rbKeyValidationMessage: '...'
        uiHint: '...'
        validationMessage: '...'
        validationRegEx: '...'
      properties:
        description:
          description: ""
          readOnly: false
          schema:
            type: string
        evaluator:
          description: ""
          readOnly: false
          schema:
            type: string
        evaluatorOptions:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyDescription:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyValidationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        uiHint:
          description: ""
          readOnly: false
          schema:
            type: string
        validationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        validationRegEx:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerPolicyConditionDef
      type: object
    RangerPolicyDelta:
      description: ""
      example:
        changeType: 12345
        id: 12345
        policy:
          allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
      properties:
        changeType:
          description: ""
          readOnly: false
          type: number
        id:
          description: ""
          readOnly: false
          type: number
        policy:
          $ref: '#/components/schemas/RangerPolicy'
          readOnly: false
      title: RangerPolicyDelta
      type: object
    RangerPolicyItem:
      description: ""
      example:
        accesses:
        - isAllowed: true
          type: '...'
        - isAllowed: true
          type: '...'
        conditions:
        - type: '...'
          values:
          - '...'
          - '...'
        - type: '...'
          values:
          - '...'
          - '...'
        delegateAdmin: true
        groups:
        - '...'
        - '...'
        roles:
        - '...'
        - '...'
        users:
        - '...'
        - '...'
      properties:
        accesses:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicyItemAccess'
          readOnly: false
          type: array
        conditions:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicyItemCondition'
          readOnly: false
          type: array
        delegateAdmin:
          description: ""
          readOnly: false
          type: boolean
        groups:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        roles:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        users:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
      title: RangerPolicyItem
      type: object
    RangerPolicyItemAccess:
      description: ""
      example:
        isAllowed: true
        type: '...'
      properties:
        isAllowed:
          description: ""
          readOnly: false
          type: boolean
        type:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerPolicyItemAccess
      type: object
    RangerPolicyItemCondition:
      description: ""
      example:
        type: '...'
        values:
        - '...'
        - '...'
      properties:
        type:
          description: ""
          readOnly: false
          schema:
            type: string
        values:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
      title: RangerPolicyItemCondition
      type: object
    RangerPolicyItemDataMaskInfo:
      description: ""
      example:
        conditionExpr: '...'
        dataMaskType: '...'
        valueExpr: '...'
      properties:
        conditionExpr:
          description: ""
          readOnly: false
          schema:
            type: string
        dataMaskType:
          description: ""
          readOnly: false
          schema:
            type: string
        valueExpr:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerPolicyItemDataMaskInfo
      type: object
    RangerPolicyItemRowFilterInfo:
      description: ""
      example:
        filterExpr: '...'
      properties:
        filterExpr:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerPolicyItemRowFilterInfo
      type: object
    RangerPolicyList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          policies:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicy'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        policies:
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerPolicyList
      type: object
    RangerPolicyResource:
      description: ""
      example:
        isExcludes: true
        isRecursive: true
        values:
        - '...'
        - '...'
      properties:
        isExcludes:
          description: ""
          readOnly: false
          type: boolean
        isRecursive:
          description: ""
          readOnly: false
          type: boolean
        values:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
      title: RangerPolicyResource
      type: object
    RangerRequestedResources:
      description: ""
      example:
        requestedResources:
        - asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        - asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
      properties:
        requestedResources:
          description: ""
          items:
            $ref: '#/components/schemas/RangerAccessResource'
          readOnly: false
          type: array
      title: RangerRequestedResources
      type: object
    RangerResourceDef:
      description: ""
      example:
        accessTypeRestrictions:
        - '...'
        - '...'
        description: '...'
        excludesSupported: true
        isValidLeaf: true
        itemId: 12345
        label: '...'
        level: 12345
        lookupSupported: true
        mandatory: true
        matcher: '...'
        matcherOptions:
          property1: '...'
          property2: '...'
        name: '...'
        parent: '...'
        rbKeyDescription: '...'
        rbKeyLabel: '...'
        rbKeyValidationMessage: '...'
        recursiveSupported: true
        type: '...'
        uiHint: '...'
        validationMessage: '...'
        validationRegEx: '...'
      properties:
        accessTypeRestrictions:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        description:
          description: ""
          readOnly: false
          schema:
            type: string
        excludesSupported:
          description: ""
          readOnly: false
          type: boolean
        isValidLeaf:
          description: ""
          readOnly: false
          type: boolean
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        level:
          description: ""
          readOnly: false
          type: number
        lookupSupported:
          description: ""
          readOnly: false
          type: boolean
        mandatory:
          description: ""
          readOnly: false
          type: boolean
        matcher:
          description: ""
          readOnly: false
          schema:
            type: string
        matcherOptions:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        parent:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyDescription:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyValidationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        recursiveSupported:
          description: ""
          readOnly: false
          type: boolean
        type:
          description: ""
          readOnly: false
          schema:
            type: string
        uiHint:
          description: ""
          readOnly: false
          schema:
            type: string
        validationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        validationRegEx:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerResourceDef
      type: object
    RangerRole:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          createdByUser:
            description: ""
            readOnly: false
            schema:
              type: string
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          groups:
            description: ""
            items:
              $ref: '#/components/schemas/RoleMember'
            readOnly: false
            type: array
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          options:
            additionalProperties:
              type: object
            description: ""
            readOnly: false
            type: object
          roles:
            description: ""
            items:
              $ref: '#/components/schemas/RoleMember'
            readOnly: false
            type: array
          users:
            description: ""
            items:
              $ref: '#/components/schemas/RoleMember'
            readOnly: false
            type: array
      description: ""
      example:
        createTime: 12345
        createdBy: '...'
        createdByUser: '...'
        description: '...'
        groups:
        - isAdmin: true
          name: '...'
        - isAdmin: true
          name: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        name: '...'
        options:
          property1: {}
          property2: {}
        roles:
        - isAdmin: true
          name: '...'
        - isAdmin: true
          name: '...'
        updateTime: 12345
        updatedBy: '...'
        users:
        - isAdmin: true
          name: '...'
        - isAdmin: true
          name: '...'
        version: 12345
      title: RangerRole
      type: object
    RangerRoleList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          roles:
            description: ""
            items:
              $ref: '#/components/schemas/RangerRole'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        roles:
        - createTime: 12345
          createdBy: '...'
          createdByUser: '...'
          description: '...'
          groups:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          roles:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          updateTime: 12345
          updatedBy: '...'
          users:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          version: 12345
        - createTime: 12345
          createdBy: '...'
          createdByUser: '...'
          description: '...'
          groups:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          roles:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          updateTime: 12345
          updatedBy: '...'
          users:
          - isAdmin: true
            name: '...'
          - isAdmin: true
            name: '...'
          version: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerRoleList
      type: object
    RangerRowFilterDef:
      description: ""
      example:
        accessTypes:
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        resources:
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
      properties:
        accessTypes:
          description: ""
          items:
            $ref: '#/components/schemas/RangerAccessTypeDef'
          readOnly: false
          type: array
        resources:
          description: ""
          items:
            $ref: '#/components/schemas/RangerResourceDef'
          readOnly: false
          type: array
      title: RangerRowFilterDef
      type: object
    RangerRowFilterPolicyItem:
      allOf:
      - $ref: '#/components/schemas/RangerPolicyItem'
      - properties:
          rowFilterInfo:
            $ref: '#/components/schemas/RangerPolicyItemRowFilterInfo'
            readOnly: false
      description: ""
      example:
        accesses:
        - isAllowed: true
          type: '...'
        - isAllowed: true
          type: '...'
        conditions:
        - type: '...'
          values:
          - '...'
          - '...'
        - type: '...'
          values:
          - '...'
          - '...'
        delegateAdmin: true
        groups:
        - '...'
        - '...'
        roles:
        - '...'
        - '...'
        rowFilterInfo:
          filterExpr: '...'
        users:
        - '...'
        - '...'
      title: RangerRowFilterPolicyItem
      type: object
    RangerSecurityZone:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          adminUserGroups:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          adminUsers:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          auditUserGroups:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          auditUsers:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          services:
            additionalProperties:
              $ref: '#/components/schemas/RangerSecurityZoneService'
            description: ""
            readOnly: false
            type: object
          tagServices:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
      description: ""
      example:
        adminUserGroups:
        - '...'
        - '...'
        adminUsers:
        - '...'
        - '...'
        auditUserGroups:
        - '...'
        - '...'
        auditUsers:
        - '...'
        - '...'
        createTime: 12345
        createdBy: '...'
        description: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        name: '...'
        services:
          property1:
            resources:
            - property1: []
              property2: []
            - property1: []
              property2: []
          property2:
            resources:
            - property1: []
              property2: []
            - property1: []
              property2: []
        tagServices:
        - '...'
        - '...'
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerSecurityZone
      type: object
    RangerSecurityZoneList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          securityZones:
            description: ""
            items:
              $ref: '#/components/schemas/RangerSecurityZone'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        securityZones:
        - adminUserGroups:
          - '...'
          - '...'
          adminUsers:
          - '...'
          - '...'
          auditUserGroups:
          - '...'
          - '...'
          auditUsers:
          - '...'
          - '...'
          createTime: 12345
          createdBy: '...'
          description: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          services:
            property1:
              resources:
              - property1: []
                property2: []
              - property1: []
                property2: []
            property2:
              resources:
              - property1: []
                property2: []
              - property1: []
                property2: []
          tagServices:
          - '...'
          - '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        - adminUserGroups:
          - '...'
          - '...'
          adminUsers:
          - '...'
          - '...'
          auditUserGroups:
          - '...'
          - '...'
          auditUsers:
          - '...'
          - '...'
          createTime: 12345
          createdBy: '...'
          description: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          services:
            property1:
              resources:
              - property1: []
                property2: []
              - property1: []
                property2: []
            property2:
              resources:
              - property1: []
                property2: []
              - property1: []
                property2: []
          tagServices:
          - '...'
          - '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerSecurityZoneList
      type: object
    RangerSecurityZoneService:
      description: ""
      example:
        resources:
        - property1: []
          property2: []
        - property1: []
          property2: []
      properties:
        resources:
          description: ""
          items:
            additionalProperties:
              items:
                type: object
              type: array
            type: object
          readOnly: false
          type: array
      title: RangerSecurityZoneService
      type: object
    RangerService:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          configs:
            additionalProperties:
              schema:
                type: string
            description: ""
            readOnly: false
            type: object
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          policyUpdateTime:
            description: ""
            readOnly: false
            type: number
          policyVersion:
            description: ""
            readOnly: false
            type: number
          tagService:
            description: ""
            readOnly: false
            schema:
              type: string
          tagUpdateTime:
            description: ""
            readOnly: false
            type: number
          tagVersion:
            description: ""
            readOnly: false
            type: number
          type:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        configs:
          property1: '...'
          property2: '...'
        createTime: 12345
        createdBy: '...'
        description: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        name: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        tagService: '...'
        tagUpdateTime: 12345
        tagVersion: 12345
        type: '...'
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerService
      type: object
    RangerServiceConfigDef:
      description: ""
      example:
        defaultValue: '...'
        description: '...'
        itemId: 12345
        label: '...'
        mandatory: true
        name: '...'
        rbKeyDescription: '...'
        rbKeyLabel: '...'
        rbKeyValidationMessage: '...'
        subType: '...'
        type: '...'
        uiHint: '...'
        validationMessage: '...'
        validationRegEx: '...'
      properties:
        defaultValue:
          description: ""
          readOnly: false
          schema:
            type: string
        description:
          description: ""
          readOnly: false
          schema:
            type: string
        itemId:
          description: ""
          readOnly: false
          type: number
        label:
          description: ""
          readOnly: false
          schema:
            type: string
        mandatory:
          description: ""
          readOnly: false
          type: boolean
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyDescription:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyLabel:
          description: ""
          readOnly: false
          schema:
            type: string
        rbKeyValidationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        subType:
          description: ""
          readOnly: false
          schema:
            type: string
        type:
          description: ""
          readOnly: false
          schema:
            type: string
        uiHint:
          description: ""
          readOnly: false
          schema:
            type: string
        validationMessage:
          description: ""
          readOnly: false
          schema:
            type: string
        validationRegEx:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerServiceConfigDef
      type: object
    RangerServiceDef:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          accessTypes:
            description: ""
            items:
              $ref: '#/components/schemas/RangerAccessTypeDef'
            readOnly: false
            type: array
          configs:
            description: ""
            items:
              $ref: '#/components/schemas/RangerServiceConfigDef'
            readOnly: false
            type: array
          contextEnrichers:
            description: ""
            items:
              $ref: '#/components/schemas/RangerContextEnricherDef'
            readOnly: false
            type: array
          dataMaskDef:
            $ref: '#/components/schemas/RangerDataMaskDef'
            readOnly: false
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          enums:
            description: ""
            items:
              $ref: '#/components/schemas/RangerEnumDef'
            readOnly: false
            type: array
          implClass:
            description: ""
            readOnly: false
            schema:
              type: string
          label:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          options:
            additionalProperties:
              schema:
                type: string
            description: ""
            readOnly: false
            type: object
          policyConditions:
            description: ""
            items:
              $ref: '#/components/schemas/RangerPolicyConditionDef'
            readOnly: false
            type: array
          rbKeyDescription:
            description: ""
            readOnly: false
            schema:
              type: string
          rbKeyLabel:
            description: ""
            readOnly: false
            schema:
              type: string
          resources:
            description: ""
            items:
              $ref: '#/components/schemas/RangerResourceDef'
            readOnly: false
            type: array
          rowFilterDef:
            $ref: '#/components/schemas/RangerRowFilterDef'
            readOnly: false
      description: ""
      example:
        accessTypes:
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        - impliedGrants:
          - '...'
          - '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyLabel: '...'
        configs:
        - defaultValue: '...'
          description: '...'
          itemId: 12345
          label: '...'
          mandatory: true
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          subType: '...'
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        - defaultValue: '...'
          description: '...'
          itemId: 12345
          label: '...'
          mandatory: true
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          subType: '...'
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        contextEnrichers:
        - enricher: '...'
          enricherOptions:
            property1: '...'
            property2: '...'
          itemId: 12345
          name: '...'
        - enricher: '...'
          enricherOptions:
            property1: '...'
            property2: '...'
          itemId: 12345
          name: '...'
        createTime: 12345
        createdBy: '...'
        dataMaskDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          maskTypes:
          - dataMaskOptions:
              property1: '...'
              property2: '...'
            description: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            transformer: '...'
          - dataMaskOptions:
              property1: '...'
              property2: '...'
            description: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            transformer: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
        description: '...'
        enums:
        - defaultIndex: 12345
          elements:
          - itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          itemId: 12345
          name: '...'
        - defaultIndex: 12345
          elements:
          - itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          itemId: 12345
          name: '...'
        guid: '...'
        id: 12345
        implClass: '...'
        isEnabled: true
        label: '...'
        name: '...'
        options:
          property1: '...'
          property2: '...'
        policyConditions:
        - description: '...'
          evaluator: '...'
          evaluatorOptions:
            property1: '...'
            property2: '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        - description: '...'
          evaluator: '...'
          evaluatorOptions:
            property1: '...'
            property2: '...'
          itemId: 12345
          label: '...'
          name: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        rbKeyDescription: '...'
        rbKeyLabel: '...'
        resources:
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        - accessTypeRestrictions:
          - '...'
          - '...'
          description: '...'
          excludesSupported: true
          isValidLeaf: true
          itemId: 12345
          label: '...'
          level: 12345
          lookupSupported: true
          mandatory: true
          matcher: '...'
          matcherOptions:
            property1: '...'
            property2: '...'
          name: '...'
          parent: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          rbKeyValidationMessage: '...'
          recursiveSupported: true
          type: '...'
          uiHint: '...'
          validationMessage: '...'
          validationRegEx: '...'
        rowFilterDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerServiceDef
      type: object
    RangerServiceDefList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          serviceDefs:
            description: ""
            items:
              $ref: '#/components/schemas/RangerServiceDef'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        serviceDefs:
        - accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        - accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerServiceDefList
      type: object
    RangerServiceList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          services:
            description: ""
            items:
              $ref: '#/components/schemas/RangerService'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        services:
        - configs:
            property1: '...'
            property2: '...'
          createTime: 12345
          createdBy: '...'
          description: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          policyUpdateTime: 12345
          policyVersion: 12345
          tagService: '...'
          tagUpdateTime: 12345
          tagVersion: 12345
          type: '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        - configs:
            property1: '...'
            property2: '...'
          createTime: 12345
          createdBy: '...'
          description: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          name: '...'
          policyUpdateTime: 12345
          policyVersion: 12345
          tagService: '...'
          tagUpdateTime: 12345
          tagVersion: 12345
          type: '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: RangerServiceList
      type: object
    RangerServiceResource:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          resourceElements:
            additionalProperties:
              $ref: '#/components/schemas/RangerPolicyResource'
            description: ""
            readOnly: false
            type: object
          resourceSignature:
            description: ""
            readOnly: false
            schema:
              type: string
          serviceName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createTime: 12345
        createdBy: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        resourceElements:
          property1:
            isExcludes: true
            isRecursive: true
            values:
            - '...'
            - '...'
          property2:
            isExcludes: true
            isRecursive: true
            values:
            - '...'
            - '...'
        resourceSignature: '...'
        serviceName: '...'
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerServiceResource
      type: object
    RangerTag:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          attributes:
            additionalProperties:
              schema:
                type: string
            description: ""
            readOnly: false
            type: object
          options:
            additionalProperties:
              type: object
            description: ""
            readOnly: false
            type: object
          owner:
            description: ""
            readOnly: false
            type: number
          type:
            description: ""
            readOnly: false
            schema:
              type: string
          validityPeriods:
            description: ""
            items:
              $ref: '#/components/schemas/RangerValiditySchedule'
            readOnly: false
            type: array
      description: ""
      example:
        attributes:
          property1: '...'
          property2: '...'
        createTime: 12345
        createdBy: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        options:
          property1: {}
          property2: {}
        owner: 12345
        type: '...'
        updateTime: 12345
        updatedBy: '...'
        validityPeriods:
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
        version: 12345
      title: RangerTag
      type: object
    RangerTagAttributeDef:
      description: ""
      example:
        name: '...'
        type: '...'
      properties:
        name:
          description: ""
          readOnly: false
          schema:
            type: string
        type:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerTagAttributeDef
      type: object
    RangerTagDef:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          attributeDefs:
            description: ""
            items:
              $ref: '#/components/schemas/RangerTagAttributeDef'
            readOnly: false
            type: array
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          source:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        attributeDefs:
        - name: '...'
          type: '...'
        - name: '...'
          type: '...'
        createTime: 12345
        createdBy: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        name: '...'
        source: '...'
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerTagDef
      type: object
    RangerTagForEval:
      description: ""
      example:
        attributes:
          property1: '...'
          property2: '...'
        matchType: NONE
        options:
          property1: {}
          property2: {}
        type: '...'
        validityPeriods:
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
        - endTime: '...'
          recurrences:
          - interval: {}
            schedule: {}
          - interval: {}
            schedule: {}
          startTime: '...'
          timeZone: '...'
      properties:
        attributes:
          additionalProperties:
            schema:
              type: string
          description: ""
          readOnly: false
          type: object
        matchType:
          $ref: '#/components/schemas/MatchType'
          readOnly: false
        options:
          additionalProperties:
            type: object
          description: ""
          readOnly: false
          type: object
        type:
          description: ""
          readOnly: false
          schema:
            type: string
        validityPeriods:
          description: ""
          items:
            $ref: '#/components/schemas/RangerValiditySchedule'
          readOnly: false
          type: array
      title: RangerTagForEval
      type: object
    RangerTagResource:
      allOf:
      - $ref: '#/components/schemas/RangerAccessResourceImpl'
      - {}
      description: ""
      example:
        asMap:
          property1: {}
          property2: {}
        asString: '...'
        cacheKey: '...'
        keys:
        - '...'
        - '...'
        leafName: '...'
        ownerUser: '...'
        readOnlyCopy:
          asMap:
            property1: {}
            property2: {}
          asString: '...'
          cacheKey: '...'
          keys:
          - '...'
          - '...'
          leafName: '...'
          ownerUser: '...'
          readOnlyCopy: {}
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
      title: RangerTagResource
      type: object
    RangerTagResourceMap:
      allOf:
      - $ref: '#/components/schemas/RangerBaseModelObject'
      - properties:
          resourceId:
            description: ""
            readOnly: false
            type: number
          tagId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        createTime: 12345
        createdBy: '...'
        guid: '...'
        id: 12345
        isEnabled: true
        resourceId: 12345
        tagId: 12345
        updateTime: 12345
        updatedBy: '...'
        version: 12345
      title: RangerTagResourceMap
      type: object
    RangerValidityRecurrence:
      description: ""
      example:
        interval:
          days: 12345
          hours: 12345
          minutes: 12345
        schedule:
          dayOfMonth: '...'
          dayOfWeek: '...'
          hour: '...'
          minute: '...'
          month: '...'
          year: '...'
      properties:
        interval:
          $ref: '#/components/schemas/ValidityInterval'
          readOnly: false
        schedule:
          $ref: '#/components/schemas/RecurrenceSchedule'
          readOnly: false
      title: RangerValidityRecurrence
      type: object
    RangerValiditySchedule:
      description: ""
      example:
        endTime: '...'
        recurrences:
        - interval:
            days: 12345
            hours: 12345
            minutes: 12345
          schedule:
            dayOfMonth: '...'
            dayOfWeek: '...'
            hour: '...'
            minute: '...'
            month: '...'
            year: '...'
        - interval:
            days: 12345
            hours: 12345
            minutes: 12345
          schedule:
            dayOfMonth: '...'
            dayOfWeek: '...'
            hour: '...'
            minute: '...'
            month: '...'
            year: '...'
        startTime: '...'
        timeZone: '...'
      properties:
        endTime:
          description: ""
          readOnly: false
          schema:
            type: string
        recurrences:
          description: ""
          items:
            $ref: '#/components/schemas/RangerValidityRecurrence'
          readOnly: false
          type: array
        startTime:
          description: ""
          readOnly: false
          schema:
            type: string
        timeZone:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RangerValiditySchedule
      type: object
    RealmEventsConfigRepresentation:
      properties:
        adminEventsDetailsEnabled:
          type: boolean
        adminEventsEnabled:
          type: boolean
        enabledEventTypes:
          items:
            type: string
          type: array
        eventsEnabled:
          type: boolean
        eventsExpiration:
          format: int64
          type: integer
        eventsListeners:
          items:
            type: string
          type: array
      type: object
    RealmRepresentation:
      properties:
        accessCodeLifespan:
          format: int32
          type: integer
        accessCodeLifespanLogin:
          format: int32
          type: integer
        accessCodeLifespanUserAction:
          format: int32
          type: integer
        accessTokenLifespan:
          format: int32
          type: integer
        accessTokenLifespanForImplicitFlow:
          format: int32
          type: integer
        accountTheme:
          type: string
        actionTokenGeneratedByAdminLifespan:
          format: int32
          type: integer
        actionTokenGeneratedByUserLifespan:
          format: int32
          type: integer
        adminEventsDetailsEnabled:
          type: boolean
        adminEventsEnabled:
          type: boolean
        adminTheme:
          type: string
        attributes:
          additionalProperties: true
          type: object
        authenticationFlows:
          items:
            $ref: '#/components/schemas/AuthenticationFlowRepresentation'
          type: array
        authenticatorConfig:
          items:
            $ref: '#/components/schemas/AuthenticatorConfigRepresentation'
          type: array
        browserFlow:
          type: string
        browserSecurityHeaders:
          additionalProperties: true
          type: object
        bruteForceProtected:
          type: boolean
        clientAuthenticationFlow:
          type: string
        clientScopeMappings:
          additionalProperties: true
          type: object
        clientScopes:
          items:
            $ref: '#/components/schemas/ClientScopeRepresentation'
          type: array
        clientSessionIdleTimeout:
          format: int32
          type: integer
        clientSessionMaxLifespan:
          format: int32
          type: integer
        clients:
          items:
            $ref: '#/components/schemas/ClientRepresentation'
          type: array
        components:
          $ref: '#/components/schemas/MultivaluedHashMap'
        defaultDefaultClientScopes:
          items:
            type: string
          type: array
        defaultGroups:
          items:
            type: string
          type: array
        defaultLocale:
          type: string
        defaultOptionalClientScopes:
          items:
            type: string
          type: array
        defaultRoles:
          items:
            type: string
          type: array
        defaultSignatureAlgorithm:
          type: string
        directGrantFlow:
          type: string
        displayName:
          type: string
        displayNameHtml:
          type: string
        dockerAuthenticationFlow:
          type: string
        duplicateEmailsAllowed:
          type: boolean
        editUsernameAllowed:
          type: boolean
        emailTheme:
          type: string
        enabled:
          type: boolean
        enabledEventTypes:
          items:
            type: string
          type: array
        eventsEnabled:
          type: boolean
        eventsExpiration:
          format: int64
          type: integer
        eventsListeners:
          items:
            type: string
          type: array
        failureFactor:
          format: int32
          type: integer
        federatedUsers:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          type: array
        groups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          type: array
        id:
          type: string
        identityProviderMappers:
          items:
            $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/IdentityProviderRepresentation'
          type: array
        internationalizationEnabled:
          type: boolean
        keycloakVersion:
          type: string
        loginTheme:
          type: string
        loginWithEmailAllowed:
          type: boolean
        maxDeltaTimeSeconds:
          format: int32
          type: integer
        maxFailureWaitSeconds:
          format: int32
          type: integer
        minimumQuickLoginWaitSeconds:
          format: int32
          type: integer
        notBefore:
          format: int32
          type: integer
        offlineSessionIdleTimeout:
          format: int32
          type: integer
        offlineSessionMaxLifespan:
          format: int32
          type: integer
        offlineSessionMaxLifespanEnabled:
          type: boolean
        otpPolicyAlgorithm:
          type: string
        otpPolicyDigits:
          format: int32
          type: integer
        otpPolicyInitialCounter:
          format: int32
          type: integer
        otpPolicyLookAheadWindow:
          format: int32
          type: integer
        otpPolicyPeriod:
          format: int32
          type: integer
        otpPolicyType:
          type: string
        otpSupportedApplications:
          items:
            type: string
          type: array
        passwordPolicy:
          type: string
        permanentLockout:
          type: boolean
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          type: array
        quickLoginCheckMilliSeconds:
          format: int64
          type: integer
        realm:
          type: string
        refreshTokenMaxReuse:
          format: int32
          type: integer
        registrationAllowed:
          type: boolean
        registrationEmailAsUsername:
          type: boolean
        registrationFlow:
          type: string
        rememberMe:
          type: boolean
        requiredActions:
          items:
            $ref: '#/components/schemas/RequiredActionProviderRepresentation'
          type: array
        resetCredentialsFlow:
          type: string
        resetPasswordAllowed:
          type: boolean
        revokeRefreshToken:
          type: boolean
        roles:
          $ref: '#/components/schemas/RolesRepresentation'
        scopeMappings:
          items:
            $ref: '#/components/schemas/ScopeMappingRepresentation'
          type: array
        smtpServer:
          additionalProperties: true
          type: object
        sslRequired:
          type: string
        ssoSessionIdleTimeout:
          format: int32
          type: integer
        ssoSessionIdleTimeoutRememberMe:
          format: int32
          type: integer
        ssoSessionMaxLifespan:
          format: int32
          type: integer
        ssoSessionMaxLifespanRememberMe:
          format: int32
          type: integer
        supportedLocales:
          items:
            type: string
          type: array
        userFederationMappers:
          items:
            $ref: '#/components/schemas/UserFederationMapperRepresentation'
          type: array
        userFederationProviders:
          items:
            $ref: '#/components/schemas/UserFederationProviderRepresentation'
          type: array
        userManagedAccessAllowed:
          type: boolean
        users:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          type: array
        verifyEmail:
          type: boolean
        waitIncrementSeconds:
          format: int32
          type: integer
        webAuthnPolicyAcceptableAaguids:
          items:
            type: string
          type: array
        webAuthnPolicyAttestationConveyancePreference:
          type: string
        webAuthnPolicyAuthenticatorAttachment:
          type: string
        webAuthnPolicyAvoidSameAuthenticatorRegister:
          type: boolean
        webAuthnPolicyCreateTimeout:
          format: int32
          type: integer
        webAuthnPolicyPasswordlessAcceptableAaguids:
          items:
            type: string
          type: array
        webAuthnPolicyPasswordlessAttestationConveyancePreference:
          type: string
        webAuthnPolicyPasswordlessAuthenticatorAttachment:
          type: string
        webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister:
          type: boolean
        webAuthnPolicyPasswordlessCreateTimeout:
          format: int32
          type: integer
        webAuthnPolicyPasswordlessRequireResidentKey:
          type: string
        webAuthnPolicyPasswordlessRpEntityName:
          type: string
        webAuthnPolicyPasswordlessRpId:
          type: string
        webAuthnPolicyPasswordlessSignatureAlgorithms:
          items:
            type: string
          type: array
        webAuthnPolicyPasswordlessUserVerificationRequirement:
          type: string
        webAuthnPolicyRequireResidentKey:
          type: string
        webAuthnPolicyRpEntityName:
          type: string
        webAuthnPolicyRpId:
          type: string
        webAuthnPolicySignatureAlgorithms:
          items:
            type: string
          type: array
        webAuthnPolicyUserVerificationRequirement:
          type: string
      type: object
    RecurrenceSchedule:
      description: ""
      example:
        dayOfMonth: '...'
        dayOfWeek: '...'
        hour: '...'
        minute: '...'
        month: '...'
        year: '...'
      properties:
        dayOfMonth:
          description: ""
          readOnly: false
          schema:
            type: string
        dayOfWeek:
          description: ""
          readOnly: false
          schema:
            type: string
        hour:
          description: ""
          readOnly: false
          schema:
            type: string
        minute:
          description: ""
          readOnly: false
          schema:
            type: string
        month:
          description: ""
          readOnly: false
          schema:
            type: string
        year:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RecurrenceSchedule
      type: object
    RequiredActionProviderRepresentation:
      properties:
        alias:
          type: string
        config:
          additionalProperties: true
          type: object
        defaultAction:
          type: boolean
        enabled:
          type: boolean
        name:
          type: string
        priority:
          format: int32
          type: integer
        providerId:
          type: string
      type: object
    ResourceLookupContext:
      description: ""
      example:
        resourceName: '...'
        resources:
          property1:
          - '...'
          - '...'
          property2:
          - '...'
          - '...'
        userInput: '...'
      properties:
        resourceName:
          description: ""
          readOnly: false
          schema:
            type: string
        resources:
          additionalProperties:
            items:
              schema:
                type: string
            type: array
          description: ""
          readOnly: false
          type: object
        userInput:
          description: ""
          readOnly: false
          schema:
            type: string
      title: ResourceLookupContext
      type: object
    ResourceRepresentation:
      properties:
        attributes:
          additionalProperties: true
          type: object
        displayName:
          type: string
        icon_uri:
          type: string
        id:
          type: string
        name:
          type: string
        ownerManagedAccess:
          type: boolean
        scopes:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          type: array
        type:
          type: string
        uris:
          items:
            type: string
          type: array
      type: object
    ResourceServerRepresentation:
      properties:
        allowRemoteResourceManagement:
          type: boolean
        clientId:
          type: string
        decisionStrategy:
          enum:
          - AFFIRMATIVE
          - UNANIMOUS
          - CONSENSUS
          type: string
        id:
          type: string
        name:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyRepresentation'
          type: array
        policyEnforcementMode:
          enum:
          - ENFORCING
          - PERMISSIVE
          - DISABLED
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          type: array
        scopes:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          type: array
      type: object
    RoleMember:
      description: ""
      example:
        isAdmin: true
        name: '...'
      properties:
        isAdmin:
          description: ""
          readOnly: false
          type: boolean
        name:
          description: ""
          readOnly: false
          schema:
            type: string
      title: RoleMember
      type: object
    RoleRepresentation:
      properties:
        attributes:
          additionalProperties: true
          type: object
        clientRole:
          type: boolean
        composite:
          type: boolean
        composites:
          $ref: '#/components/schemas/RoleRepresentation-Composites'
        containerId:
          type: string
        description:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    RoleRepresentation-Composites:
      properties:
        client:
          additionalProperties: true
          type: object
        realm:
          items:
            type: string
          type: array
      type: object
    RolesRepresentation:
      properties:
        client:
          additionalProperties: true
          type: object
        realm:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          type: array
      type: object
    ScopeMappingRepresentation:
      properties:
        client:
          type: string
        clientScope:
          type: string
        roles:
          items:
            type: string
          type: array
        self:
          type: string
      type: object
    ScopeRepresentation:
      properties:
        displayName:
          type: string
        iconUri:
          type: string
        id:
          type: string
        name:
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyRepresentation'
          type: array
        resources:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          type: array
      type: object
    SecurityZoneInfo:
      description: ""
      example:
        containsAssociatedTagService: true
        policies:
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        policyDeltas:
        - changeType: 12345
          id: 12345
          policy:
            allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
        - changeType: 12345
          id: 12345
          policy:
            allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
        resources:
        - property1: []
          property2: []
        - property1: []
          property2: []
        zoneName: '...'
      properties:
        containsAssociatedTagService:
          description: ""
          readOnly: false
          type: boolean
        policies:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicy'
          readOnly: false
          type: array
        policyDeltas:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicyDelta'
          readOnly: false
          type: array
        resources:
          description: ""
          items:
            additionalProperties:
              items:
                type: object
              type: array
            type: object
          readOnly: false
          type: array
        zoneName:
          description: ""
          readOnly: false
          schema:
            type: string
      title: SecurityZoneInfo
      type: object
    ServerInfoRepresentation:
      properties:
        builtinProtocolMappers:
          additionalProperties: true
          type: object
        clientImporters:
          items:
            additionalProperties: true
            type: object
          type: array
        clientInstallations:
          additionalProperties: true
          type: object
        componentTypes:
          additionalProperties: true
          type: object
        enums:
          additionalProperties: true
          type: object
        identityProviders:
          items:
            additionalProperties: true
            type: object
          type: array
        memoryInfo:
          $ref: '#/components/schemas/MemoryInfoRepresentation'
        passwordPolicies:
          items:
            $ref: '#/components/schemas/PasswordPolicyTypeRepresentation'
          type: array
        profileInfo:
          $ref: '#/components/schemas/ProfileInfoRepresentation'
        protocolMapperTypes:
          additionalProperties: true
          type: object
        providers:
          additionalProperties: true
          type: object
        socialProviders:
          items:
            additionalProperties: true
            type: object
          type: array
        systemInfo:
          $ref: '#/components/schemas/SystemInfoRepresentation'
        themes:
          additionalProperties: true
          type: object
      type: object
    ServicePolicies:
      description: ""
      example:
        auditMode: '...'
        groupRoles:
          property1:
          - '...'
          - '...'
          property2:
          - '...'
          - '...'
        policies:
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        policyDeltas:
        - changeType: 12345
          id: 12345
          policy:
            allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
        - changeType: 12345
          id: 12345
          policy:
            allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        securityZones:
          property1:
            containsAssociatedTagService: true
            policies:
            - allowExceptions:
              - {}
              - {}
              conditions:
              - {}
              - {}
              createTime: 12345
              createdBy: '...'
              dataMaskPolicyItems:
              - {}
              - {}
              denyExceptions:
              - {}
              - {}
              denyPolicyItems:
              - {}
              - {}
              description: '...'
              guid: '...'
              id: 12345
              isAuditEnabled: true
              isDenyAllElse: true
              isEnabled: true
              name: '...'
              options:
                property1: {}
                property2: {}
              policyItems:
              - {}
              - {}
              policyLabels:
              - '...'
              - '...'
              policyPriority: 12345
              policyType: 12345
              resourceSignature: '...'
              resources:
                property1: {}
                property2: {}
              rowFilterPolicyItems:
              - {}
              - {}
              service: '...'
              serviceType: '...'
              updateTime: 12345
              updatedBy: '...'
              validitySchedules:
              - {}
              - {}
              version: 12345
              zoneName: '...'
            - allowExceptions:
              - {}
              - {}
              conditions:
              - {}
              - {}
              createTime: 12345
              createdBy: '...'
              dataMaskPolicyItems:
              - {}
              - {}
              denyExceptions:
              - {}
              - {}
              denyPolicyItems:
              - {}
              - {}
              description: '...'
              guid: '...'
              id: 12345
              isAuditEnabled: true
              isDenyAllElse: true
              isEnabled: true
              name: '...'
              options:
                property1: {}
                property2: {}
              policyItems:
              - {}
              - {}
              policyLabels:
              - '...'
              - '...'
              policyPriority: 12345
              policyType: 12345
              resourceSignature: '...'
              resources:
                property1: {}
                property2: {}
              rowFilterPolicyItems:
              - {}
              - {}
              service: '...'
              serviceType: '...'
              updateTime: 12345
              updatedBy: '...'
              validitySchedules:
              - {}
              - {}
              version: 12345
              zoneName: '...'
            policyDeltas:
            - changeType: 12345
              id: 12345
              policy: {}
            - changeType: 12345
              id: 12345
              policy: {}
            resources:
            - property1: []
              property2: []
            - property1: []
              property2: []
            zoneName: '...'
          property2:
            containsAssociatedTagService: true
            policies:
            - allowExceptions:
              - {}
              - {}
              conditions:
              - {}
              - {}
              createTime: 12345
              createdBy: '...'
              dataMaskPolicyItems:
              - {}
              - {}
              denyExceptions:
              - {}
              - {}
              denyPolicyItems:
              - {}
              - {}
              description: '...'
              guid: '...'
              id: 12345
              isAuditEnabled: true
              isDenyAllElse: true
              isEnabled: true
              name: '...'
              options:
                property1: {}
                property2: {}
              policyItems:
              - {}
              - {}
              policyLabels:
              - '...'
              - '...'
              policyPriority: 12345
              policyType: 12345
              resourceSignature: '...'
              resources:
                property1: {}
                property2: {}
              rowFilterPolicyItems:
              - {}
              - {}
              service: '...'
              serviceType: '...'
              updateTime: 12345
              updatedBy: '...'
              validitySchedules:
              - {}
              - {}
              version: 12345
              zoneName: '...'
            - allowExceptions:
              - {}
              - {}
              conditions:
              - {}
              - {}
              createTime: 12345
              createdBy: '...'
              dataMaskPolicyItems:
              - {}
              - {}
              denyExceptions:
              - {}
              - {}
              denyPolicyItems:
              - {}
              - {}
              description: '...'
              guid: '...'
              id: 12345
              isAuditEnabled: true
              isDenyAllElse: true
              isEnabled: true
              name: '...'
              options:
                property1: {}
                property2: {}
              policyItems:
              - {}
              - {}
              policyLabels:
              - '...'
              - '...'
              policyPriority: 12345
              policyType: 12345
              resourceSignature: '...'
              resources:
                property1: {}
                property2: {}
              rowFilterPolicyItems:
              - {}
              - {}
              service: '...'
              serviceType: '...'
              updateTime: 12345
              updatedBy: '...'
              validitySchedules:
              - {}
              - {}
              version: 12345
              zoneName: '...'
            policyDeltas:
            - changeType: 12345
              id: 12345
              policy: {}
            - changeType: 12345
              id: 12345
              policy: {}
            resources:
            - property1: []
              property2: []
            - property1: []
              property2: []
            zoneName: '...'
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        serviceId: 12345
        serviceName: '...'
        tagPolicies:
          auditMode: '...'
          policies:
          - allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
          - allowExceptions:
            - {}
            - {}
            conditions:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - {}
            - {}
            denyExceptions:
            - {}
            - {}
            denyPolicyItems:
            - {}
            - {}
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - {}
            - {}
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1: {}
              property2: {}
            rowFilterPolicyItems:
            - {}
            - {}
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - {}
            - {}
            version: 12345
            zoneName: '...'
          policyUpdateTime: 12345
          policyVersion: 12345
          serviceDef:
            accessTypes:
            - {}
            - {}
            configs:
            - {}
            - {}
            contextEnrichers:
            - {}
            - {}
            createTime: 12345
            createdBy: '...'
            dataMaskDef: {}
            description: '...'
            enums:
            - {}
            - {}
            guid: '...'
            id: 12345
            implClass: '...'
            isEnabled: true
            label: '...'
            name: '...'
            options:
              property1: '...'
              property2: '...'
            policyConditions:
            - {}
            - {}
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            resources:
            - {}
            - {}
            rowFilterDef: {}
            updateTime: 12345
            updatedBy: '...'
            version: 12345
          serviceId: 12345
          serviceName: '...'
        userRoles:
          property1:
          - '...'
          - '...'
          property2:
          - '...'
          - '...'
      properties:
        auditMode:
          description: ""
          readOnly: false
          schema:
            type: string
        groupRoles:
          additionalProperties:
            items:
              schema:
                type: string
            type: array
          description: ""
          readOnly: false
          type: object
        policies:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicy'
          readOnly: false
          type: array
        policyDeltas:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicyDelta'
          readOnly: false
          type: array
        policyUpdateTime:
          description: ""
          readOnly: false
          type: number
        policyVersion:
          description: ""
          readOnly: false
          type: number
        securityZones:
          additionalProperties:
            $ref: '#/components/schemas/SecurityZoneInfo'
          description: ""
          readOnly: false
          type: object
        serviceDef:
          $ref: '#/components/schemas/RangerServiceDef'
          readOnly: false
        serviceId:
          description: ""
          readOnly: false
          type: number
        serviceName:
          description: ""
          readOnly: false
          schema:
            type: string
        tagPolicies:
          $ref: '#/components/schemas/TagPolicies'
          readOnly: false
        userRoles:
          additionalProperties:
            items:
              schema:
                type: string
            type: array
          description: ""
          readOnly: false
          type: object
      title: ServicePolicies
      type: object
    ServiceTags:
      description: ""
      example:
        op: '...'
        resourceToTagIds:
          property1:
          - 12345
          - 12345
          property2:
          - 12345
          - 12345
        serviceName: '...'
        serviceResources:
        - createTime: 12345
          createdBy: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          resourceElements:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          resourceSignature: '...'
          serviceName: '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        - createTime: 12345
          createdBy: '...'
          guid: '...'
          id: 12345
          isEnabled: true
          resourceElements:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          resourceSignature: '...'
          serviceName: '...'
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        tagDefinitions:
          property1:
            attributeDefs:
            - name: '...'
              type: '...'
            - name: '...'
              type: '...'
            createTime: 12345
            createdBy: '...'
            guid: '...'
            id: 12345
            isEnabled: true
            name: '...'
            source: '...'
            updateTime: 12345
            updatedBy: '...'
            version: 12345
          property2:
            attributeDefs:
            - name: '...'
              type: '...'
            - name: '...'
              type: '...'
            createTime: 12345
            createdBy: '...'
            guid: '...'
            id: 12345
            isEnabled: true
            name: '...'
            source: '...'
            updateTime: 12345
            updatedBy: '...'
            version: 12345
        tagUpdateTime: 12345
        tagVersion: 12345
        tags:
          property1:
            attributes:
              property1: '...'
              property2: '...'
            createTime: 12345
            createdBy: '...'
            guid: '...'
            id: 12345
            isEnabled: true
            options:
              property1: {}
              property2: {}
            owner: 12345
            type: '...'
            updateTime: 12345
            updatedBy: '...'
            validityPeriods:
            - endTime: '...'
              recurrences:
              - {}
              - {}
              startTime: '...'
              timeZone: '...'
            - endTime: '...'
              recurrences:
              - {}
              - {}
              startTime: '...'
              timeZone: '...'
            version: 12345
          property2:
            attributes:
              property1: '...'
              property2: '...'
            createTime: 12345
            createdBy: '...'
            guid: '...'
            id: 12345
            isEnabled: true
            options:
              property1: {}
              property2: {}
            owner: 12345
            type: '...'
            updateTime: 12345
            updatedBy: '...'
            validityPeriods:
            - endTime: '...'
              recurrences:
              - {}
              - {}
              startTime: '...'
              timeZone: '...'
            - endTime: '...'
              recurrences:
              - {}
              - {}
              startTime: '...'
              timeZone: '...'
            version: 12345
      properties:
        op:
          description: ""
          readOnly: false
          schema:
            type: string
        resourceToTagIds:
          additionalProperties:
            items:
              type: number
            type: array
          description: ""
          readOnly: false
          type: object
        serviceName:
          description: ""
          readOnly: false
          schema:
            type: string
        serviceResources:
          description: ""
          items:
            $ref: '#/components/schemas/RangerServiceResource'
          readOnly: false
          type: array
        tagDefinitions:
          additionalProperties:
            $ref: '#/components/schemas/RangerTagDef'
          description: ""
          readOnly: false
          type: object
        tagUpdateTime:
          description: ""
          readOnly: false
          type: number
        tagVersion:
          description: ""
          readOnly: false
          type: number
        tags:
          additionalProperties:
            $ref: '#/components/schemas/RangerTag'
          description: ""
          readOnly: false
          type: object
      title: ServiceTags
      type: object
    SpiInfoRepresentation:
      properties:
        internal:
          type: boolean
        providers:
          additionalProperties: true
          type: object
      type: object
    SynchronizationResult:
      properties:
        added:
          format: int32
          type: integer
        failed:
          format: int32
          type: integer
        ignored:
          type: boolean
        removed:
          format: int32
          type: integer
        status:
          type: string
        updated:
          format: int32
          type: integer
      type: object
    SystemInfoRepresentation:
      properties:
        fileEncoding:
          type: string
        javaHome:
          type: string
        javaRuntime:
          type: string
        javaVendor:
          type: string
        javaVersion:
          type: string
        javaVm:
          type: string
        javaVmVersion:
          type: string
        osArchitecture:
          type: string
        osName:
          type: string
        osVersion:
          type: string
        serverTime:
          type: string
        uptime:
          type: string
        uptimeMillis:
          format: int64
          type: integer
        userDir:
          type: string
        userLocale:
          type: string
        userName:
          type: string
        userTimezone:
          type: string
        version:
          type: string
      type: object
    TagPolicies:
      description: ""
      example:
        auditMode: '...'
        policies:
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        - allowExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          conditions:
          - type: '...'
            values:
            - '...'
            - '...'
          - type: '...'
            values:
            - '...'
            - '...'
          createTime: 12345
          createdBy: '...'
          dataMaskPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            dataMaskInfo: {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyExceptions:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          denyPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          description: '...'
          guid: '...'
          id: 12345
          isAuditEnabled: true
          isDenyAllElse: true
          isEnabled: true
          name: '...'
          options:
            property1: {}
            property2: {}
          policyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            users:
            - '...'
            - '...'
          policyLabels:
          - '...'
          - '...'
          policyPriority: 12345
          policyType: 12345
          resourceSignature: '...'
          resources:
            property1:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
            property2:
              isExcludes: true
              isRecursive: true
              values:
              - '...'
              - '...'
          rowFilterPolicyItems:
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          - accesses:
            - {}
            - {}
            conditions:
            - {}
            - {}
            delegateAdmin: true
            groups:
            - '...'
            - '...'
            roles:
            - '...'
            - '...'
            rowFilterInfo: {}
            users:
            - '...'
            - '...'
          service: '...'
          serviceType: '...'
          updateTime: 12345
          updatedBy: '...'
          validitySchedules:
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          - endTime: '...'
            recurrences:
            - {}
            - {}
            startTime: '...'
            timeZone: '...'
          version: 12345
          zoneName: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        serviceDef:
          accessTypes:
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          - impliedGrants:
            - '...'
            - '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyLabel: '...'
          configs:
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - defaultValue: '...'
            description: '...'
            itemId: 12345
            label: '...'
            mandatory: true
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            subType: '...'
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          contextEnrichers:
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          - enricher: '...'
            enricherOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            name: '...'
          createTime: 12345
          createdBy: '...'
          dataMaskDef:
            accessTypes:
            - {}
            - {}
            maskTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          description: '...'
          enums:
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          - defaultIndex: 12345
            elements:
            - {}
            - {}
            itemId: 12345
            name: '...'
          guid: '...'
          id: 12345
          implClass: '...'
          isEnabled: true
          label: '...'
          name: '...'
          options:
            property1: '...'
            property2: '...'
          policyConditions:
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - description: '...'
            evaluator: '...'
            evaluatorOptions:
              property1: '...'
              property2: '...'
            itemId: 12345
            label: '...'
            name: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rbKeyDescription: '...'
          rbKeyLabel: '...'
          resources:
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          - accessTypeRestrictions:
            - '...'
            - '...'
            description: '...'
            excludesSupported: true
            isValidLeaf: true
            itemId: 12345
            label: '...'
            level: 12345
            lookupSupported: true
            mandatory: true
            matcher: '...'
            matcherOptions:
              property1: '...'
              property2: '...'
            name: '...'
            parent: '...'
            rbKeyDescription: '...'
            rbKeyLabel: '...'
            rbKeyValidationMessage: '...'
            recursiveSupported: true
            type: '...'
            uiHint: '...'
            validationMessage: '...'
            validationRegEx: '...'
          rowFilterDef:
            accessTypes:
            - {}
            - {}
            resources:
            - {}
            - {}
          updateTime: 12345
          updatedBy: '...'
          version: 12345
        serviceId: 12345
        serviceName: '...'
      properties:
        auditMode:
          description: ""
          readOnly: false
          schema:
            type: string
        policies:
          description: ""
          items:
            $ref: '#/components/schemas/RangerPolicy'
          readOnly: false
          type: array
        policyUpdateTime:
          description: ""
          readOnly: false
          type: number
        policyVersion:
          description: ""
          readOnly: false
          type: number
        serviceDef:
          $ref: '#/components/schemas/RangerServiceDef'
          readOnly: false
        serviceId:
          description: ""
          readOnly: false
          type: number
        serviceName:
          description: ""
          readOnly: false
          schema:
            type: string
      title: TagPolicies
      type: object
    TestLdapConnectionRepresentation:
      properties:
        action:
          type: string
        bindCredential:
          type: string
        bindDn:
          type: string
        componentId:
          type: string
        connectionTimeout:
          type: string
        connectionUrl:
          type: string
        startTls:
          type: string
        useTruststoreSpi:
          type: string
      type: object
    UpdatePassword:
      properties:
        oldPassword:
          type: string
        password:
          type: string
        temporary:
          type: boolean
        username:
          type: string
      required:
      - password
      - username
      - oldPassword
      type: object
    UpdateUserRole:
      properties:
        roleId:
          type: string
      required:
      - roleId
      type: object
    UserConsentRepresentation:
      properties:
        clientId:
          type: string
        createdDate:
          format: int64
          type: integer
        grantedClientScopes:
          items:
            type: string
          type: array
        lastUpdatedDate:
          format: int64
          type: integer
      type: object
    UserFederationMapperRepresentation:
      properties:
        config:
          additionalProperties: true
          type: object
        federationMapperType:
          type: string
        federationProviderDisplayName:
          type: string
        id:
          type: string
        name:
          type: string
      type: object
    UserFederationProviderRepresentation:
      properties:
        changedSyncPeriod:
          format: int32
          type: integer
        config:
          additionalProperties: true
          type: object
        displayName:
          type: string
        fullSyncPeriod:
          format: int32
          type: integer
        id:
          type: string
        lastSync:
          format: int32
          type: integer
        priority:
          format: int32
          type: integer
        providerName:
          type: string
      type: object
    UserRepresentation:
      properties:
        access:
          additionalProperties: true
          type: object
        attributes:
          additionalProperties: true
          type: object
        clientConsents:
          items:
            $ref: '#/components/schemas/UserConsentRepresentation'
          type: array
        clientRoles:
          additionalProperties: true
          type: object
        createdTimestamp:
          format: int64
          type: integer
        credentials:
          items:
            $ref: '#/components/schemas/CredentialRepresentation'
          type: array
        disableableCredentialTypes:
          items:
            type: string
          type: array
        email:
          type: string
        emailVerified:
          type: boolean
        enabled:
          type: boolean
        federatedIdentities:
          items:
            $ref: '#/components/schemas/FederatedIdentityRepresentation'
          type: array
        federationLink:
          type: string
        firstName:
          type: string
        groups:
          items:
            type: string
          type: array
        id:
          type: string
        lastName:
          type: string
        notBefore:
          format: int32
          type: integer
        origin:
          type: string
        realmRoles:
          items:
            type: string
          type: array
        requiredActions:
          items:
            type: string
          type: array
        self:
          type: string
        serviceAccountClientId:
          type: string
        username:
          type: string
      type: object
    UserSessionRepresentation:
      properties:
        clients:
          additionalProperties: true
          type: object
        id:
          type: string
        ipAddress:
          type: string
        lastAccess:
          format: int64
          type: integer
        start:
          format: int64
          type: integer
        userId:
          type: string
        username:
          type: string
      type: object
    VEnum:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          elementList:
            description: Returns the value for the member attribute <b>elementList<b>
            items:
              $ref: '#/components/schemas/VEnumElement'
            readOnly: false
            type: array
          enumName:
            description: Returns the value for the member attribute <b>enumName<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        elementList:
        - elementLabel: '...'
          elementName: '...'
          elementValue: 12345
          enumName: '...'
          myClassType: 12345
          rbKey: '...'
        - elementLabel: '...'
          elementName: '...'
          elementValue: 12345
          enumName: '...'
          myClassType: 12345
          rbKey: '...'
        enumName: '...'
        myClassType: 12345
      title: VEnum
      type: object
    VEnumElement:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          elementLabel:
            description: Returns the value for the member attribute <b>elementLabel<b>
            readOnly: false
            schema:
              type: string
          elementName:
            description: ""
            readOnly: false
            schema:
              type: string
          elementValue:
            description: Returns the value for the member attribute <b>elementValue<b>
            format: int32
            readOnly: false
            type: integer
          enumName:
            description: ""
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          rbKey:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        elementLabel: '...'
        elementName: '...'
        elementValue: 12345
        enumName: '...'
        myClassType: 12345
        rbKey: '...'
      title: VEnumElement
      type: object
    VList:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          list:
            description: ""
            items:
              type: object
            readOnly: false
            type: array
          listSize:
            description: ""
            format: int32
            readOnly: false
            type: integer
          pageSize:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resultSize:
            description: Returns the value for the member attribute <b>resultSize<b>
            format: int32
            readOnly: false
            type: integer
          sortBy:
            description: ""
            readOnly: false
            schema:
              type: string
          sortType:
            description: ""
            readOnly: false
            schema:
              type: string
          startIndex:
            description: ""
            format: int32
            readOnly: false
            type: integer
          totalCount:
            description: ""
            format: int64
            readOnly: false
            type: integer
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
      title: VList
      type: object
    VTrxLogAttr:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          attribUserFriendlyName:
            description: ""
            readOnly: false
            schema:
              type: string
          enum:
            description: ""
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        attribUserFriendlyName: '...'
        enum: true
        myClassType: 12345
      title: VTrxLogAttr
      type: object
    VXAccessAudit:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          accessResult:
            description: Returns the value for the member attribute <b>accessResult<b>
            format: int32
            readOnly: false
            type: integer
          accessType:
            description: Returns the value for the member attribute <b>accessType<b>
            readOnly: false
            schema:
              type: string
          aclEnforcer:
            description: Returns the value for the member attribute <b>aclEnforcer<b>
            readOnly: false
            schema:
              type: string
          action:
            description: Returns the value for the member attribute <b>action<b>
            readOnly: false
            schema:
              type: string
          agentHost:
            description: ""
            readOnly: false
            schema:
              type: string
          agentId:
            description: Returns the value for the member attribute <b>agentId<b>
            readOnly: false
            schema:
              type: string
          auditType:
            description: Returns the value for the member attribute <b>auditType<b>
            format: int32
            readOnly: false
            type: integer
          clientIP:
            description: Returns the value for the member attribute <b>clientIP<b>
            readOnly: false
            schema:
              type: string
          clientType:
            description: Returns the value for the member attribute <b>clientType<b>
            readOnly: false
            schema:
              type: string
          clusterName:
            description: ""
            readOnly: false
            schema:
              type: string
          eventCount:
            description: ""
            format: int64
            readOnly: false
            type: integer
          eventDuration:
            description: ""
            format: int64
            readOnly: false
            type: integer
          eventTime:
            description: Returns the value for the member attribute <b>eventTime<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            format: int64
            readOnly: false
            type: integer
          policyVersion:
            description: ""
            readOnly: false
            type: number
          repoName:
            description: Returns the value for the member attribute <b>repoName<b>
            readOnly: false
            schema:
              type: string
          repoType:
            description: Returns the value for the member attribute <b>repoType<b>
            format: int32
            readOnly: false
            type: integer
          requestData:
            description: Returns the value for the member attribute <b>requestData<b>
            readOnly: false
            schema:
              type: string
          requestUser:
            description: Returns the value for the member attribute <b>requestUser<b>
            readOnly: false
            schema:
              type: string
          resourcePath:
            description: Returns the value for the member attribute <b>resourcePath<b>
            readOnly: false
            schema:
              type: string
          resourceType:
            description: Returns the value for the member attribute <b>resourceType<b>
            readOnly: false
            schema:
              type: string
          resultReason:
            description: Returns the value for the member attribute <b>resultReason<b>
            readOnly: false
            schema:
              type: string
          sequenceNumber:
            description: ""
            format: int64
            readOnly: false
            type: integer
          serviceType:
            description: ""
            readOnly: false
            schema:
              type: string
          sessionId:
            description: Returns the value for the member attribute <b>sessionId<b>
            readOnly: false
            schema:
              type: string
          tags:
            description: ""
            readOnly: false
            schema:
              type: string
          zoneName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        accessResult: 12345
        accessType: '...'
        aclEnforcer: '...'
        action: '...'
        agentHost: '...'
        agentId: '...'
        auditType: 12345
        clientIP: '...'
        clientType: '...'
        clusterName: '...'
        createDate: 12345
        eventCount: 12345
        eventDuration: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        policyId: 12345
        policyVersion: 12345
        repoName: '...'
        repoType: 12345
        requestData: '...'
        requestUser: '...'
        resourcePath: '...'
        resourceType: '...'
        resultReason: '...'
        sequenceNumber: 12345
        serviceType: '...'
        sessionId: '...'
        tags: '...'
        updateDate: 12345
        updatedBy: '...'
        zoneName: '...'
      title: VXAccessAudit
      type: object
    VXAccessAuditList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXAccessAudits:
            description: ""
            items:
              $ref: '#/components/schemas/VXAccessAudit'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXAccessAudits:
        - accessResult: 12345
          accessType: '...'
          aclEnforcer: '...'
          action: '...'
          agentHost: '...'
          agentId: '...'
          auditType: 12345
          clientIP: '...'
          clientType: '...'
          clusterName: '...'
          createDate: 12345
          eventCount: 12345
          eventDuration: 12345
          eventTime: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          policyId: 12345
          policyVersion: 12345
          repoName: '...'
          repoType: 12345
          requestData: '...'
          requestUser: '...'
          resourcePath: '...'
          resourceType: '...'
          resultReason: '...'
          sequenceNumber: 12345
          serviceType: '...'
          sessionId: '...'
          tags: '...'
          updateDate: 12345
          updatedBy: '...'
          zoneName: '...'
        - accessResult: 12345
          accessType: '...'
          aclEnforcer: '...'
          action: '...'
          agentHost: '...'
          agentId: '...'
          auditType: 12345
          clientIP: '...'
          clientType: '...'
          clusterName: '...'
          createDate: 12345
          eventCount: 12345
          eventDuration: 12345
          eventTime: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          policyId: 12345
          policyVersion: 12345
          repoName: '...'
          repoType: 12345
          requestData: '...'
          requestUser: '...'
          resourcePath: '...'
          resourceType: '...'
          resultReason: '...'
          sequenceNumber: 12345
          serviceType: '...'
          sessionId: '...'
          tags: '...'
          updateDate: 12345
          updatedBy: '...'
          zoneName: '...'
      title: VXAccessAuditList
      type: object
    VXAsset:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          activeStatus:
            description: Returns the value for the member attribute <b>activeStatus<b>
            format: int32
            readOnly: false
            type: integer
          assetType:
            description: Returns the value for the member attribute <b>assetType<b>
            format: int32
            readOnly: false
            type: integer
          config:
            description: Returns the value for the member attribute <b>config<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          supportNative:
            description: Returns the value for the member attribute <b>supportNative<b>
            readOnly: false
            type: boolean
      description: ""
      example:
        activeStatus: 12345
        assetType: 12345
        config: '...'
        createDate: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        supportNative: true
        updateDate: 12345
        updatedBy: '...'
      title: VXAsset
      type: object
    VXAssetList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXAssets:
            description: ""
            items:
              $ref: '#/components/schemas/VXAsset'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXAssets:
        - activeStatus: 12345
          assetType: 12345
          config: '...'
          createDate: 12345
          description: '...'
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          supportNative: true
          updateDate: 12345
          updatedBy: '...'
        - activeStatus: 12345
          assetType: 12345
          config: '...'
          createDate: 12345
          description: '...'
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          supportNative: true
          updateDate: 12345
          updatedBy: '...'
      title: VXAssetList
      type: object
    VXAuditMap:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          auditType:
            description: Returns the value for the member attribute <b>auditType<b>
            format: int32
            readOnly: false
            type: integer
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resourceId:
            description: Returns the value for the member attribute <b>resourceId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        auditType: 12345
        createDate: 12345
        groupId: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        resourceId: 12345
        updateDate: 12345
        updatedBy: '...'
        userId: 12345
      title: VXAuditMap
      type: object
    VXAuditMapList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXAuditMaps:
            description: ""
            items:
              $ref: '#/components/schemas/VXAuditMap'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXAuditMaps:
        - auditType: 12345
          createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
        - auditType: 12345
          createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
      title: VXAuditMapList
      type: object
    VXAuditRecord:
      description: ""
      example:
        action: '...'
        assetType: 12345
        date: 12345
        enforcer: '...'
        resource: '...'
        resourceType: 12345
        result: '...'
        user: '...'
      properties:
        action:
          description: Returns the value for the member attribute <b>action<b>
          readOnly: false
          schema:
            type: string
        assetType:
          description: Returns the value for the member attribute <b>assetType<b>
          format: int32
          readOnly: false
          type: integer
        date:
          description: Returns the value for the member attribute <b>date<b>
          readOnly: false
          type: number
        enforcer:
          description: ""
          readOnly: false
          schema:
            type: string
        resource:
          description: Returns the value for the member attribute <b>resource<b>
          readOnly: false
          schema:
            type: string
        resourceType:
          description: Returns the value for the member attribute <b>resourceType<b>
          format: int32
          readOnly: false
          type: integer
        result:
          description: Returns the value for the member attribute <b>result<b>
          readOnly: false
          schema:
            type: string
        user:
          description: Returns the value for the member attribute <b>user<b>
          readOnly: false
          schema:
            type: string
      title: VXAuditRecord
      type: object
    VXAuditRecordList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXAuditRecords:
            description: ""
            items:
              $ref: '#/components/schemas/VXAuditRecord'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXAuditRecords:
        - action: '...'
          assetType: 12345
          date: 12345
          enforcer: '...'
          resource: '...'
          resourceType: 12345
          result: '...'
          user: '...'
        - action: '...'
          assetType: 12345
          date: 12345
          enforcer: '...'
          resource: '...'
          resourceType: 12345
          result: '...'
          user: '...'
      title: VXAuditRecordList
      type: object
    VXAuthSession:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          authProvider:
            description: Returns the value for the member attribute <b>authProvider<b>
            format: int32
            readOnly: false
            type: integer
          authStatus:
            description: Returns the value for the member attribute <b>authStatus<b>
            format: int32
            readOnly: false
            type: integer
          authTime:
            description: Returns the value for the member attribute <b>authTime<b>
            readOnly: false
            type: number
          authType:
            description: Returns the value for the member attribute <b>authType<b>
            format: int32
            readOnly: false
            type: integer
          cityName:
            description: Returns the value for the member attribute <b>cityName<b>
            readOnly: false
            schema:
              type: string
          countryName:
            description: Returns the value for the member attribute <b>countryName<b>
            readOnly: false
            schema:
              type: string
          deviceType:
            description: Returns the value for the member attribute <b>deviceType<b>
            format: int32
            readOnly: false
            type: integer
          emailAddress:
            description: Returns the value for the member attribute <b>emailAddress<b>
            readOnly: false
            schema:
              type: string
          familyScreenName:
            description: Returns the value for the member attribute <b>familyScreenName<b>
            readOnly: false
            schema:
              type: string
          firstName:
            description: Returns the value for the member attribute <b>firstName<b>
            readOnly: false
            schema:
              type: string
          isTestUser:
            description: Returns the value for the member attribute <b>isTestUser<b>
            readOnly: false
            type: boolean
          lastName:
            description: Returns the value for the member attribute <b>lastName<b>
            readOnly: false
            schema:
              type: string
          loginId:
            description: Returns the value for the member attribute <b>loginId<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          publicScreenName:
            description: Returns the value for the member attribute <b>publicScreenName<b>
            readOnly: false
            schema:
              type: string
          requestIP:
            description: Returns the value for the member attribute <b>requestIP<b>
            readOnly: false
            schema:
              type: string
          requestUserAgent:
            description: Returns the value for the member attribute <b>requestUserAgent<b>
            readOnly: false
            schema:
              type: string
          stateName:
            description: Returns the value for the member attribute <b>stateName<b>
            readOnly: false
            schema:
              type: string
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        authProvider: 12345
        authStatus: 12345
        authTime: 12345
        authType: 12345
        cityName: '...'
        countryName: '...'
        createDate: 12345
        deviceType: 12345
        emailAddress: '...'
        familyScreenName: '...'
        firstName: '...'
        id: 12345
        isTestUser: true
        lastName: '...'
        loginId: '...'
        myClassType: 12345
        owner: '...'
        publicScreenName: '...'
        requestIP: '...'
        requestUserAgent: '...'
        stateName: '...'
        updateDate: 12345
        updatedBy: '...'
        userId: 12345
      title: VXAuthSession
      type: object
    VXAuthSessionList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXAuthSessions:
            description: ""
            items:
              $ref: '#/components/schemas/VXAuthSession'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXAuthSessions:
        - authProvider: 12345
          authStatus: 12345
          authTime: 12345
          authType: 12345
          cityName: '...'
          countryName: '...'
          createDate: 12345
          deviceType: 12345
          emailAddress: '...'
          familyScreenName: '...'
          firstName: '...'
          id: 12345
          isTestUser: true
          lastName: '...'
          loginId: '...'
          myClassType: 12345
          owner: '...'
          publicScreenName: '...'
          requestIP: '...'
          requestUserAgent: '...'
          stateName: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
        - authProvider: 12345
          authStatus: 12345
          authTime: 12345
          authType: 12345
          cityName: '...'
          countryName: '...'
          createDate: 12345
          deviceType: 12345
          emailAddress: '...'
          familyScreenName: '...'
          firstName: '...'
          id: 12345
          isTestUser: true
          lastName: '...'
          loginId: '...'
          myClassType: 12345
          owner: '...'
          publicScreenName: '...'
          requestIP: '...'
          requestUserAgent: '...'
          stateName: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
      title: VXAuthSessionList
      type: object
    VXCredentialStore:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXCredentialStore
      type: object
    VXCredentialStoreList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXCredentialStores:
            description: ""
            items:
              $ref: '#/components/schemas/VXCredentialStore'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXCredentialStores:
        - createDate: 12345
          description: '...'
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          description: '...'
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXCredentialStoreList
      type: object
    VXDataObject:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          createDate:
            description: Returns the value for the member attribute <b>createDate<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          owner:
            description: Returns the value for the member attribute <b>owner<b>
            readOnly: false
            schema:
              type: string
          updateDate:
            description: Returns the value for the member attribute <b>updateDate<b>
            readOnly: false
            type: number
          updatedBy:
            description: Returns the value for the member attribute <b>updatedBy<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXDataObject
      type: object
    VXFileSyncSourceInfo:
      description: ""
      example:
        fileName: '...'
        lastModified: '...'
        syncTime: '...'
        totalGroupsSynced: 12345
        totalUsersSynced: 12345
      properties:
        fileName:
          description: ""
          readOnly: false
          schema:
            type: string
        lastModified:
          description: ""
          readOnly: false
          schema:
            type: string
        syncTime:
          description: ""
          readOnly: false
          schema:
            type: string
        totalGroupsSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
        totalUsersSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
      title: VXFileSyncSourceInfo
      type: object
    VXGroup:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          credStoreId:
            description: Returns the value for the member attribute <b>credStoreId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          groupSource:
            description: ""
            format: int32
            readOnly: false
            type: integer
          groupType:
            description: Returns the value for the member attribute <b>groupType<b>
            format: int32
            readOnly: false
            type: integer
          isVisible:
            description: ""
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        credStoreId: 12345
        description: '...'
        groupSource: 12345
        groupType: 12345
        id: 12345
        isVisible: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXGroup
      type: object
    VXGroupGroup:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentGroupId:
            description: Returns the value for the member attribute <b>parentGroupId<b>
            readOnly: false
            type: number
      description: ""
      example:
        createDate: 12345
        groupId: 12345
        id: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        parentGroupId: 12345
        updateDate: 12345
        updatedBy: '...'
      title: VXGroupGroup
      type: object
    VXGroupGroupList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXGroupGroups:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroupGroup'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXGroupGroups:
        - createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentGroupId: 12345
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentGroupId: 12345
          updateDate: 12345
          updatedBy: '...'
      title: VXGroupGroupList
      type: object
    VXGroupList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXGroups:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroup'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXGroups:
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          groupSource: 12345
          groupType: 12345
          id: 12345
          isVisible: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          groupSource: 12345
          groupType: 12345
          id: 12345
          isVisible: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXGroupList
      type: object
    VXGroupPermission:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          groupId:
            description: ""
            readOnly: false
            type: number
          groupName:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isAllowed:
            description: ""
            readOnly: false
            type: number
          moduleId:
            description: ""
            readOnly: false
            type: number
          moduleName:
            description: ""
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        createDate: 12345
        groupId: 12345
        groupName: '...'
        id: 12345
        isAllowed: 12345
        moduleId: 12345
        moduleName: '...'
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXGroupPermission
      type: object
    VXGroupPermissionList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXGroupPermission:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroupPermission'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXGroupPermission:
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXGroupPermissionList
      type: object
    VXGroupUser:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentGroupId:
            description: Returns the value for the member attribute <b>parentGroupId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        createDate: 12345
        id: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        parentGroupId: 12345
        updateDate: 12345
        updatedBy: '...'
        userId: 12345
      title: VXGroupUser
      type: object
    VXGroupUserInfo:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          xgroupInfo:
            $ref: '#/components/schemas/VXGroup'
            readOnly: false
          xuserInfo:
            description: ""
            items:
              $ref: '#/components/schemas/VXUser'
            readOnly: false
            type: array
      description: ""
      example:
        createDate: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
        xgroupInfo:
          createDate: 12345
          credStoreId: 12345
          description: '...'
          groupSource: 12345
          groupType: 12345
          id: 12345
          isVisible: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        xuserInfo:
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupNameList:
          - '...'
          - '...'
          id: 12345
          isVisible: 12345
          lastName: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          password: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupNameList:
          - '...'
          - '...'
          id: 12345
          isVisible: 12345
          lastName: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          password: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
      title: VXGroupUserInfo
      type: object
    VXGroupUserList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXGroupUsers:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroupUser'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXGroupUsers:
        - createDate: 12345
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentGroupId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
        - createDate: 12345
          id: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentGroupId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
      title: VXGroupUserList
      type: object
    VXKmsKey:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          attributes:
            additionalProperties:
              schema:
                type: string
            description: ""
            readOnly: false
            type: object
          cipher:
            description: ""
            readOnly: false
            schema:
              type: string
          created:
            description: ""
            readOnly: false
            type: number
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          length:
            description: ""
            format: int32
            readOnly: false
            type: integer
          material:
            description: ""
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          versionName:
            description: ""
            readOnly: false
            schema:
              type: string
          versions:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        attributes:
          property1: '...'
          property2: '...'
        cipher: '...'
        createDate: 12345
        created: 12345
        description: '...'
        id: 12345
        length: 12345
        material: '...'
        myClassType: 12345
        name: '...'
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
        versionName: '...'
        versions: 12345
      title: VXKmsKey
      type: object
    VXKmsKeyList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXKeys:
            description: ""
            items:
              $ref: '#/components/schemas/VXKmsKey'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXKeys:
        - attributes:
            property1: '...'
            property2: '...'
          cipher: '...'
          createDate: 12345
          created: 12345
          description: '...'
          id: 12345
          length: 12345
          material: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          versionName: '...'
          versions: 12345
        - attributes:
            property1: '...'
            property2: '...'
          cipher: '...'
          createDate: 12345
          created: 12345
          description: '...'
          id: 12345
          length: 12345
          material: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          versionName: '...'
          versions: 12345
      title: VXKmsKeyList
      type: object
    VXLdapSyncSourceInfo:
      description: ""
      example:
        groupHierarchyLevel: '...'
        groupSearchEnabled: '...'
        groupSearchFilter: '...'
        groupSearchFirstEnabled: '...'
        ldapUrl: '...'
        totalGroupsSynced: 12345
        totalUsersSynced: 12345
        userSearchEnabled: '...'
        userSearchFilter: '...'
      properties:
        groupHierarchyLevel:
          description: ""
          readOnly: false
          schema:
            type: string
        groupSearchEnabled:
          description: ""
          readOnly: false
          schema:
            type: string
        groupSearchFilter:
          description: ""
          readOnly: false
          schema:
            type: string
        groupSearchFirstEnabled:
          description: ""
          readOnly: false
          schema:
            type: string
        ldapUrl:
          description: ""
          readOnly: false
          schema:
            type: string
        totalGroupsSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
        totalUsersSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
        userSearchEnabled:
          description: ""
          readOnly: false
          schema:
            type: string
        userSearchFilter:
          description: ""
          readOnly: false
          schema:
            type: string
      title: VXLdapSyncSourceInfo
      type: object
    VXLong:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          value:
            description: Returns the value for the member attribute <b>value<b>
            format: int64
            readOnly: false
            type: integer
      description: ""
      example:
        myClassType: 12345
        value: 12345
      title: VXLong
      type: object
    VXMessage:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          fieldName:
            description: Returns the value for the member attribute <b>fieldName<b>
            readOnly: false
            schema:
              type: string
          message:
            description: Returns the value for the member attribute <b>message<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          objectId:
            description: Returns the value for the member attribute <b>objectId<b>
            readOnly: false
            type: number
          rbKey:
            description: Returns the value for the member attribute <b>rbKey<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        fieldName: '...'
        message: '...'
        myClassType: 12345
        name: '...'
        objectId: 12345
        rbKey: '...'
      title: VXMessage
      type: object
    VXMetricAuditDetailsCount:
      description: ""
      example:
        accessEventsCountTwoDays:
          serviceBasedCountList:
            property1: 12345
            property2: 12345
          totalCount: 12345
        accessEventsCountWeek:
          serviceBasedCountList:
            property1: 12345
            property2: 12345
          totalCount: 12345
        denialEventsCountTwoDays:
          serviceBasedCountList:
            property1: 12345
            property2: 12345
          totalCount: 12345
        denialEventsCountWeek:
          serviceBasedCountList:
            property1: 12345
            property2: 12345
          totalCount: 12345
        solrIndexCountTwoDays: 12345
        solrIndexCountWeek: 12345
      properties:
        accessEventsCountTwoDays:
          $ref: '#/components/schemas/VXMetricServiceCount'
          readOnly: false
        accessEventsCountWeek:
          $ref: '#/components/schemas/VXMetricServiceCount'
          readOnly: false
        denialEventsCountTwoDays:
          $ref: '#/components/schemas/VXMetricServiceCount'
          readOnly: false
        denialEventsCountWeek:
          $ref: '#/components/schemas/VXMetricServiceCount'
          readOnly: false
        solrIndexCountTwoDays:
          description: ""
          readOnly: false
          type: number
        solrIndexCountWeek:
          description: ""
          readOnly: false
          type: number
      title: VXMetricAuditDetailsCount
      type: object
    VXMetricPolicyCount:
      description: ""
      example:
        policyCountList:
          property1:
            serviceBasedCountList:
              property1: 12345
              property2: 12345
            totalCount: 12345
          property2:
            serviceBasedCountList:
              property1: 12345
              property2: 12345
            totalCount: 12345
        totalCount: 12345
      properties:
        policyCountList:
          additionalProperties:
            $ref: '#/components/schemas/VXMetricServiceCount'
          description: ""
          readOnly: false
          type: object
        totalCount:
          description: ""
          format: int64
          readOnly: false
          type: integer
      title: VXMetricPolicyCount
      type: object
    VXMetricPolicyWithServiceNameCount:
      description: ""
      example:
        policyCountList:
          property1:
            serviceBasedCountList:
              property1: {}
              property2: {}
            totalCount: 12345
          property2:
            serviceBasedCountList:
              property1: {}
              property2: {}
            totalCount: 12345
        totalCount: 12345
      properties:
        policyCountList:
          additionalProperties:
            $ref: '#/components/schemas/VXMetricServiceNameCount'
          description: ""
          readOnly: false
          type: object
        totalCount:
          description: ""
          format: int64
          readOnly: false
          type: integer
      title: VXMetricPolicyWithServiceNameCount
      type: object
    VXMetricServiceCount:
      description: ""
      example:
        serviceBasedCountList:
          property1: 12345
          property2: 12345
        totalCount: 12345
      properties:
        serviceBasedCountList:
          additionalProperties:
            type: number
          description: ""
          readOnly: false
          type: object
        totalCount:
          description: ""
          readOnly: false
          type: number
      title: VXMetricServiceCount
      type: object
    VXMetricServiceNameCount:
      description: ""
      example:
        serviceBasedCountList:
          property1: {}
          property2: {}
        totalCount: 12345
      properties:
        serviceBasedCountList:
          additionalProperties:
            type: object
          description: ""
          readOnly: false
          type: object
        totalCount:
          description: ""
          readOnly: false
          type: number
      title: VXMetricServiceNameCount
      type: object
    VXMetricUserGroupCount:
      description: ""
      example:
        groupCount: 12345
        userCountOfKeyAdminRole: 12345
        userCountOfKeyadminAuditorRole: 12345
        userCountOfSysAdminAuditorRole: 12345
        userCountOfSysAdminRole: 12345
        userCountOfUserRole: 12345
        userTotalCount: 12345
      properties:
        groupCount:
          description: ""
          readOnly: false
          type: number
        userCountOfKeyAdminRole:
          description: ""
          readOnly: false
          type: number
        userCountOfKeyadminAuditorRole:
          description: ""
          readOnly: false
          type: number
        userCountOfSysAdminAuditorRole:
          description: ""
          readOnly: false
          type: number
        userCountOfSysAdminRole:
          description: ""
          readOnly: false
          type: number
        userCountOfUserRole:
          description: ""
          readOnly: false
          type: number
        userTotalCount:
          description: ""
          readOnly: false
          type: number
      title: VXMetricUserGroupCount
      type: object
    VXModuleDef:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          addedById:
            description: ""
            readOnly: false
            type: number
          createTime:
            description: ""
            readOnly: false
            type: number
          groupPermList:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroupPermission'
            readOnly: false
            type: array
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          module:
            description: ""
            readOnly: false
            schema:
              type: string
          updateTime:
            description: ""
            readOnly: false
            type: number
          updatedById:
            description: ""
            readOnly: false
            type: number
          url:
            description: ""
            readOnly: false
            schema:
              type: string
          userPermList:
            description: ""
            items:
              $ref: '#/components/schemas/VXUserPermission'
            readOnly: false
            type: array
      description: ""
      example:
        addedById: 12345
        createDate: 12345
        createTime: 12345
        groupPermList:
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        id: 12345
        module: '...'
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updateTime: 12345
        updatedBy: '...'
        updatedById: 12345
        url: '...'
        userPermList:
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
      title: VXModuleDef
      type: object
    VXModuleDefList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXModuleDef:
            description: ""
            items:
              $ref: '#/components/schemas/VXModuleDef'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXModuleDef:
        - addedById: 12345
          createDate: 12345
          createTime: 12345
          groupPermList:
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          id: 12345
          module: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updateTime: 12345
          updatedBy: '...'
          updatedById: 12345
          url: '...'
          userPermList:
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
        - addedById: 12345
          createDate: 12345
          createTime: 12345
          groupPermList:
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          id: 12345
          module: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updateTime: 12345
          updatedBy: '...'
          updatedById: 12345
          url: '...'
          userPermList:
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
      title: VXModuleDefList
      type: object
    VXPasswordChange:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          emailAddress:
            description: Returns the value for the member attribute <b>emailAddress<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          loginId:
            description: Returns the value for the member attribute <b>loginId<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          oldPassword:
            description: Returns the value for the member attribute <b>oldPassword<b>
            readOnly: false
            schema:
              type: string
          resetCode:
            description: Returns the value for the member attribute <b>resetCode<b>
            readOnly: false
            schema:
              type: string
          updPassword:
            description: Returns the value for the member attribute <b>updPassword<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        emailAddress: '...'
        id: 12345
        loginId: '...'
        myClassType: 12345
        oldPassword: '...'
        resetCode: '...'
        updPassword: '...'
      title: VXPasswordChange
      type: object
    VXPermMap:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          grantOrRevoke:
            description: Returns the value for the member attribute <b>grantOrRevoke<b>
            readOnly: false
            type: boolean
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          groupName:
            description: Returns the value for the member attribute <b>groupName<b>
            readOnly: false
            schema:
              type: string
          ipAddress:
            description: ""
            readOnly: false
            schema:
              type: string
          isRecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            format: int32
            readOnly: false
            type: integer
          isWildCard:
            description: Returns the value for the member attribute <b>isWildCard<b>
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          permFor:
            description: Returns the value for the member attribute <b>permFor<b>
            format: int32
            readOnly: false
            type: integer
          permGroup:
            description: Returns the value for the member attribute <b>permGroup<b>
            readOnly: false
            schema:
              type: string
          permType:
            description: Returns the value for the member attribute <b>permType<b>
            format: int32
            readOnly: false
            type: integer
          resourceId:
            description: Returns the value for the member attribute <b>resourceId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
          userName:
            description: Returns the value for the member attribute <b>userName<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        grantOrRevoke: true
        groupId: 12345
        groupName: '...'
        id: 12345
        ipAddress: '...'
        isRecursive: 12345
        isWildCard: true
        myClassType: 12345
        owner: '...'
        permFor: 12345
        permGroup: '...'
        permType: 12345
        resourceId: 12345
        updateDate: 12345
        updatedBy: '...'
        userId: 12345
        userName: '...'
      title: VXPermMap
      type: object
    VXPermMapList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXPermMaps:
            description: ""
            items:
              $ref: '#/components/schemas/VXPermMap'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXPermMaps:
        - createDate: 12345
          grantOrRevoke: true
          groupId: 12345
          groupName: '...'
          id: 12345
          ipAddress: '...'
          isRecursive: 12345
          isWildCard: true
          myClassType: 12345
          owner: '...'
          permFor: 12345
          permGroup: '...'
          permType: 12345
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        - createDate: 12345
          grantOrRevoke: true
          groupId: 12345
          groupName: '...'
          id: 12345
          ipAddress: '...'
          isRecursive: 12345
          isWildCard: true
          myClassType: 12345
          owner: '...'
          permFor: 12345
          permGroup: '...'
          permType: 12345
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
      title: VXPermMapList
      type: object
    VXPermObj:
      description: ""
      example:
        groupList:
        - '...'
        - '...'
        ipAddress: '...'
        permList:
        - '...'
        - '...'
        userList:
        - '...'
        - '...'
      properties:
        groupList:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        ipAddress:
          description: ""
          readOnly: false
          schema:
            type: string
        permList:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
        userList:
          description: ""
          items:
            schema:
              type: string
          readOnly: false
          type: array
      title: VXPermObj
      type: object
    VXPermObjList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXPermObjs:
            description: ""
            items:
              $ref: '#/components/schemas/VXPermObj'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXPermObjs:
        - groupList:
          - '...'
          - '...'
          ipAddress: '...'
          permList:
          - '...'
          - '...'
          userList:
          - '...'
          - '...'
        - groupList:
          - '...'
          - '...'
          ipAddress: '...'
          permList:
          - '...'
          - '...'
          userList:
          - '...'
          - '...'
      title: VXPermObjList
      type: object
    VXPolicy:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          columnFamilies:
            description: Returns the value for the member attribute <b>columnFamilies<b>
            readOnly: false
            schema:
              type: string
          columnType:
            description: Returns the value for the member attribute <b>columnType<b>
            readOnly: false
            schema:
              type: string
          columns:
            description: Returns the value for the member attribute <b>columns<b>
            readOnly: false
            schema:
              type: string
          databases:
            description: Returns the value for the member attribute <b>databases<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          grantor:
            description: ""
            readOnly: false
            schema:
              type: string
          hiveServices:
            description: Returns the value for the member attribute <b>hiveservices<b>
            readOnly: false
            schema:
              type: string
          isAuditEnabled:
            description: Returns the value for the member attribute <b>isAuditEnabled<b>
            readOnly: false
            type: boolean
          isEnabled:
            description: Returns the value for the member attribute <b>isEnable<b>
            readOnly: false
            type: boolean
          isRecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          permMapList:
            description: Returns the value for the member attribute <b>userPermList<b>
            items:
              $ref: '#/components/schemas/VXPermObj'
            readOnly: false
            type: array
          policyLabel:
            description: ""
            readOnly: false
            schema:
              type: string
          policyName:
            description: Returns the value for the member attribute <b>policyName<b>
            readOnly: false
            schema:
              type: string
          replacePerm:
            description: ""
            readOnly: false
            type: boolean
          repositoryName:
            description: Returns the value for the member attribute <b>repositoryName<b>
            readOnly: false
            schema:
              type: string
          repositoryType:
            description: Returns the value for the member attribute <b>repositoryType<b>
            readOnly: false
            schema:
              type: string
          resourceName:
            description: Returns the value for the member attribute <b>resourceName<b>
            readOnly: false
            schema:
              type: string
          services:
            description: Returns the value for the member attribute <b>services<b>
            readOnly: false
            schema:
              type: string
          tableType:
            description: Returns the value for the member attribute <b>tableType<b>
            readOnly: false
            schema:
              type: string
          tables:
            description: Returns the value for the member attribute <b>tables<b>
            readOnly: false
            schema:
              type: string
          topologies:
            description: Returns the value for the member attribute <b>topologies<b>
            readOnly: false
            schema:
              type: string
          udfs:
            description: Returns the value for the member attribute <b>udfs<b>
            readOnly: false
            schema:
              type: string
          version:
            description: Returns the value for the member attribute <b>version<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        columnFamilies: '...'
        columnType: '...'
        columns: '...'
        createDate: 12345
        databases: '...'
        description: '...'
        grantor: '...'
        hiveServices: '...'
        id: 12345
        isAuditEnabled: true
        isEnabled: true
        isRecursive: true
        myClassType: 12345
        owner: '...'
        permMapList:
        - groupList:
          - '...'
          - '...'
          ipAddress: '...'
          permList:
          - '...'
          - '...'
          userList:
          - '...'
          - '...'
        - groupList:
          - '...'
          - '...'
          ipAddress: '...'
          permList:
          - '...'
          - '...'
          userList:
          - '...'
          - '...'
        policyLabel: '...'
        policyName: '...'
        replacePerm: true
        repositoryName: '...'
        repositoryType: '...'
        resourceName: '...'
        services: '...'
        tableType: '...'
        tables: '...'
        topologies: '...'
        udfs: '...'
        updateDate: 12345
        updatedBy: '...'
        version: '...'
      title: VXPolicy
      type: object
    VXPolicyExportAudit:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          agentId:
            description: Returns the value for the member attribute <b>agentId<b>
            readOnly: false
            schema:
              type: string
          clientIP:
            description: Returns the value for the member attribute <b>clientIP<b>
            readOnly: false
            schema:
              type: string
          clusterName:
            description: ""
            readOnly: false
            schema:
              type: string
          exportedJson:
            description: Returns the value for the member attribute <b>exportedJson<b>
            readOnly: false
            schema:
              type: string
          httpRetCode:
            description: Returns the value for the member attribute <b>httpRetCode<b>
            format: int32
            readOnly: false
            type: integer
          lastUpdated:
            description: Returns the value for the member attribute <b>lastUpdated<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          policyVersion:
            description: ""
            readOnly: false
            type: number
          repositoryName:
            description: Returns the value for the member attribute <b>repositoryName<b>
            readOnly: false
            schema:
              type: string
          requestedEpoch:
            description: Returns the value for the member attribute <b>requestedEpoch<b>
            readOnly: false
            type: number
          syncStatus:
            description: ""
            readOnly: false
            schema:
              type: string
          zoneName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        agentId: '...'
        clientIP: '...'
        clusterName: '...'
        createDate: 12345
        exportedJson: '...'
        httpRetCode: 12345
        id: 12345
        lastUpdated: 12345
        myClassType: 12345
        owner: '...'
        policyVersion: 12345
        repositoryName: '...'
        requestedEpoch: 12345
        syncStatus: '...'
        updateDate: 12345
        updatedBy: '...'
        zoneName: '...'
      title: VXPolicyExportAudit
      type: object
    VXPolicyExportAuditList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXPolicyExportAudits:
            description: ""
            items:
              $ref: '#/components/schemas/VXPolicyExportAudit'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXPolicyExportAudits:
        - agentId: '...'
          clientIP: '...'
          clusterName: '...'
          createDate: 12345
          exportedJson: '...'
          httpRetCode: 12345
          id: 12345
          lastUpdated: 12345
          myClassType: 12345
          owner: '...'
          policyVersion: 12345
          repositoryName: '...'
          requestedEpoch: 12345
          syncStatus: '...'
          updateDate: 12345
          updatedBy: '...'
          zoneName: '...'
        - agentId: '...'
          clientIP: '...'
          clusterName: '...'
          createDate: 12345
          exportedJson: '...'
          httpRetCode: 12345
          id: 12345
          lastUpdated: 12345
          myClassType: 12345
          owner: '...'
          policyVersion: 12345
          repositoryName: '...'
          requestedEpoch: 12345
          syncStatus: '...'
          updateDate: 12345
          updatedBy: '...'
          zoneName: '...'
      title: VXPolicyExportAuditList
      type: object
    VXPolicyLabel:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          policyLabel:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        policyLabel: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXPolicyLabel
      type: object
    VXPolicyLabelList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vxPolicyLabels:
            description: ""
            items:
              $ref: '#/components/schemas/VXPolicyLabel'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vxPolicyLabels:
        - createDate: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          policyLabel: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          policyLabel: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXPolicyLabelList
      type: object
    VXPolicyList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXPolicies:
            description: ""
            items:
              $ref: '#/components/schemas/VXPolicy'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXPolicies:
        - columnFamilies: '...'
          columnType: '...'
          columns: '...'
          createDate: 12345
          databases: '...'
          description: '...'
          grantor: '...'
          hiveServices: '...'
          id: 12345
          isAuditEnabled: true
          isEnabled: true
          isRecursive: true
          myClassType: 12345
          owner: '...'
          permMapList:
          - groupList:
            - '...'
            - '...'
            ipAddress: '...'
            permList:
            - '...'
            - '...'
            userList:
            - '...'
            - '...'
          - groupList:
            - '...'
            - '...'
            ipAddress: '...'
            permList:
            - '...'
            - '...'
            userList:
            - '...'
            - '...'
          policyLabel: '...'
          policyName: '...'
          replacePerm: true
          repositoryName: '...'
          repositoryType: '...'
          resourceName: '...'
          services: '...'
          tableType: '...'
          tables: '...'
          topologies: '...'
          udfs: '...'
          updateDate: 12345
          updatedBy: '...'
          version: '...'
        - columnFamilies: '...'
          columnType: '...'
          columns: '...'
          createDate: 12345
          databases: '...'
          description: '...'
          grantor: '...'
          hiveServices: '...'
          id: 12345
          isAuditEnabled: true
          isEnabled: true
          isRecursive: true
          myClassType: 12345
          owner: '...'
          permMapList:
          - groupList:
            - '...'
            - '...'
            ipAddress: '...'
            permList:
            - '...'
            - '...'
            userList:
            - '...'
            - '...'
          - groupList:
            - '...'
            - '...'
            ipAddress: '...'
            permList:
            - '...'
            - '...'
            userList:
            - '...'
            - '...'
          policyLabel: '...'
          policyName: '...'
          replacePerm: true
          repositoryName: '...'
          repositoryType: '...'
          resourceName: '...'
          services: '...'
          tableType: '...'
          tables: '...'
          topologies: '...'
          udfs: '...'
          updateDate: 12345
          updatedBy: '...'
          version: '...'
      title: VXPolicyList
      type: object
    VXPortalUser:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          emailAddress:
            description: Returns the value for the member attribute <b>emailAddress<b>
            readOnly: false
            schema:
              type: string
          firstName:
            description: Returns the value for the member attribute <b>firstName<b>
            readOnly: false
            schema:
              type: string
          groupIdList:
            description: ""
            items:
              type: number
            readOnly: false
            type: array
          groupPermissions:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroupPermission'
            readOnly: false
            type: array
          lastName:
            description: Returns the value for the member attribute <b>lastName<b>
            readOnly: false
            schema:
              type: string
          loginId:
            description: Returns the value for the member attribute <b>loginId<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          notes:
            description: Returns the value for the member attribute <b>notes<b>
            readOnly: false
            schema:
              type: string
          password:
            description: Returns the value for the member attribute <b>password<b>
            readOnly: false
            schema:
              type: string
          publicScreenName:
            description: Returns the value for the member attribute <b>publicScreenName<b>
            readOnly: false
            schema:
              type: string
          status:
            description: Returns the value for the member attribute <b>status<b>
            format: int32
            readOnly: false
            type: integer
          userPermList:
            description: ""
            items:
              $ref: '#/components/schemas/VXUserPermission'
            readOnly: false
            type: array
          userRoleList:
            description: Returns the value for the member attribute <b>userRoleList<b>
            items:
              schema:
                type: string
            readOnly: false
            type: array
          userSource:
            description: Returns the value for the member attribute <b>userSource<b>
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        createDate: 12345
        emailAddress: '...'
        firstName: '...'
        groupIdList:
        - 12345
        - 12345
        groupPermissions:
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          groupId: 12345
          groupName: '...'
          id: 12345
          isAllowed: 12345
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        id: 12345
        lastName: '...'
        loginId: '...'
        myClassType: 12345
        notes: '...'
        owner: '...'
        password: '...'
        publicScreenName: '...'
        status: 12345
        updateDate: 12345
        updatedBy: '...'
        userPermList:
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        userRoleList:
        - '...'
        - '...'
        userSource: 12345
      title: VXPortalUser
      type: object
    VXPortalUserList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXPortalUsers:
            description: ""
            items:
              $ref: '#/components/schemas/VXPortalUser'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXPortalUsers:
        - createDate: 12345
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupPermissions:
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          id: 12345
          lastName: '...'
          loginId: '...'
          myClassType: 12345
          notes: '...'
          owner: '...'
          password: '...'
          publicScreenName: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userPermList:
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
        - createDate: 12345
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupPermissions:
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          - createDate: 12345
            groupId: 12345
            groupName: '...'
            id: 12345
            isAllowed: 12345
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
          id: 12345
          lastName: '...'
          loginId: '...'
          myClassType: 12345
          notes: '...'
          owner: '...'
          password: '...'
          publicScreenName: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userPermList:
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            id: 12345
            isAllowed: 12345
            loginId: '...'
            moduleId: 12345
            moduleName: '...'
            myClassType: 12345
            owner: '...'
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
      title: VXPortalUserList
      type: object
    VXRepository:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          config:
            description: Returns the value for the member attribute <b>config<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          isActive:
            description: Returns the value for the member attribute <b>isActive<b>
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          repositoryType:
            description: Returns the value for the member attribute <b>repositoryType<b>
            readOnly: false
            schema:
              type: string
          version:
            description: Returns the value for the member attribute <b>version<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        config: '...'
        createDate: 12345
        description: '...'
        id: 12345
        isActive: true
        myClassType: 12345
        name: '...'
        owner: '...'
        repositoryType: '...'
        updateDate: 12345
        updatedBy: '...'
        version: '...'
      title: VXRepository
      type: object
    VXRepositoryList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXRepositories:
            description: ""
            items:
              $ref: '#/components/schemas/VXRepository'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXRepositories:
        - config: '...'
          createDate: 12345
          description: '...'
          id: 12345
          isActive: true
          myClassType: 12345
          name: '...'
          owner: '...'
          repositoryType: '...'
          updateDate: 12345
          updatedBy: '...'
          version: '...'
        - config: '...'
          createDate: 12345
          description: '...'
          id: 12345
          isActive: true
          myClassType: 12345
          name: '...'
          owner: '...'
          repositoryType: '...'
          updateDate: 12345
          updatedBy: '...'
          version: '...'
      title: VXRepositoryList
      type: object
    VXResource:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          assetId:
            description: Returns the value for the member attribute <b>assetId<b>
            readOnly: false
            type: number
          assetName:
            description: Returns the value for the member attribute <b>assetName<b>
            readOnly: false
            schema:
              type: string
          assetType:
            description: Returns the value for the member attribute <b>assetType<b>
            format: int32
            readOnly: false
            type: integer
          auditList:
            description: Returns the value for the member attribute <b>auditList<b>
            items:
              $ref: '#/components/schemas/VXAuditMap'
            readOnly: false
            type: array
          checkParentPermission:
            description: Returns the value for the member attribute <b>checkParentPermission<b>
            format: int32
            readOnly: false
            type: integer
          columnFamilies:
            description: Returns the value for the member attribute <b>columnFamilies<b>
            readOnly: false
            schema:
              type: string
          columnType:
            description: Returns the value for the member attribute <b>columnType<b>
            format: int32
            readOnly: false
            type: integer
          columns:
            description: Returns the value for the member attribute <b>columns<b>
            readOnly: false
            schema:
              type: string
          databases:
            description: Returns the value for the member attribute <b>databases<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          guid:
            description: Returns the value for the member attribute <b>guid<b>
            readOnly: false
            schema:
              type: string
          hiveServices:
            description: Returns the value for the member attribute <b>hiveservices<b>
            readOnly: false
            schema:
              type: string
          isEncrypt:
            description: Returns the value for the member attribute <b>isEncrypt<b>
            format: int32
            readOnly: false
            type: integer
          isRecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            format: int32
            readOnly: false
            type: integer
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentId:
            description: Returns the value for the member attribute <b>parentId<b>
            readOnly: false
            type: number
          parentPath:
            description: Returns the value for the member attribute <b>parentPath<b>
            readOnly: false
            schema:
              type: string
          permMapList:
            description: Returns the value for the member attribute <b>permMapList<b>
            items:
              $ref: '#/components/schemas/VXPermMap'
            readOnly: false
            type: array
          policyName:
            description: ""
            readOnly: false
            schema:
              type: string
          resourceGroup:
            description: Returns the value for the member attribute <b>resourceGroup<b>
            readOnly: false
            schema:
              type: string
          resourceStatus:
            description: Returns the value for the member attribute <b>resourceStatus<b>
            format: int32
            readOnly: false
            type: integer
          resourceType:
            description: Returns the value for the member attribute <b>resourceType<b>
            format: int32
            readOnly: false
            type: integer
          services:
            description: Returns the value for the member attribute <b>services<b>
            readOnly: false
            schema:
              type: string
          tableType:
            description: Returns the value for the member attribute <b>tableType<b>
            format: int32
            readOnly: false
            type: integer
          tables:
            description: Returns the value for the member attribute <b>tables<b>
            readOnly: false
            schema:
              type: string
          topologies:
            description: Returns the value for the member attribute <b>topologies<b>
            readOnly: false
            schema:
              type: string
          udfs:
            description: Returns the value for the member attribute <b>udfs<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        assetId: 12345
        assetName: '...'
        assetType: 12345
        auditList:
        - auditType: 12345
          createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
        - auditType: 12345
          createDate: 12345
          groupId: 12345
          id: 12345
          myClassType: 12345
          owner: '...'
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
        checkParentPermission: 12345
        columnFamilies: '...'
        columnType: 12345
        columns: '...'
        createDate: 12345
        databases: '...'
        description: '...'
        guid: '...'
        hiveServices: '...'
        id: 12345
        isEncrypt: 12345
        isRecursive: 12345
        myClassType: 12345
        name: '...'
        owner: '...'
        parentId: 12345
        parentPath: '...'
        permMapList:
        - createDate: 12345
          grantOrRevoke: true
          groupId: 12345
          groupName: '...'
          id: 12345
          ipAddress: '...'
          isRecursive: 12345
          isWildCard: true
          myClassType: 12345
          owner: '...'
          permFor: 12345
          permGroup: '...'
          permType: 12345
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        - createDate: 12345
          grantOrRevoke: true
          groupId: 12345
          groupName: '...'
          id: 12345
          ipAddress: '...'
          isRecursive: 12345
          isWildCard: true
          myClassType: 12345
          owner: '...'
          permFor: 12345
          permGroup: '...'
          permType: 12345
          resourceId: 12345
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        policyName: '...'
        resourceGroup: '...'
        resourceStatus: 12345
        resourceType: 12345
        services: '...'
        tableType: 12345
        tables: '...'
        topologies: '...'
        udfs: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXResource
      type: object
    VXResourceList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXResources:
            description: ""
            items:
              $ref: '#/components/schemas/VXResource'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXResources:
        - assetId: 12345
          assetName: '...'
          assetType: 12345
          auditList:
          - auditType: 12345
            createDate: 12345
            groupId: 12345
            id: 12345
            myClassType: 12345
            owner: '...'
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
          - auditType: 12345
            createDate: 12345
            groupId: 12345
            id: 12345
            myClassType: 12345
            owner: '...'
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
          checkParentPermission: 12345
          columnFamilies: '...'
          columnType: 12345
          columns: '...'
          createDate: 12345
          databases: '...'
          description: '...'
          guid: '...'
          hiveServices: '...'
          id: 12345
          isEncrypt: 12345
          isRecursive: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentId: 12345
          parentPath: '...'
          permMapList:
          - createDate: 12345
            grantOrRevoke: true
            groupId: 12345
            groupName: '...'
            id: 12345
            ipAddress: '...'
            isRecursive: 12345
            isWildCard: true
            myClassType: 12345
            owner: '...'
            permFor: 12345
            permGroup: '...'
            permType: 12345
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            grantOrRevoke: true
            groupId: 12345
            groupName: '...'
            id: 12345
            ipAddress: '...'
            isRecursive: 12345
            isWildCard: true
            myClassType: 12345
            owner: '...'
            permFor: 12345
            permGroup: '...'
            permType: 12345
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          policyName: '...'
          resourceGroup: '...'
          resourceStatus: 12345
          resourceType: 12345
          services: '...'
          tableType: 12345
          tables: '...'
          topologies: '...'
          udfs: '...'
          updateDate: 12345
          updatedBy: '...'
        - assetId: 12345
          assetName: '...'
          assetType: 12345
          auditList:
          - auditType: 12345
            createDate: 12345
            groupId: 12345
            id: 12345
            myClassType: 12345
            owner: '...'
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
          - auditType: 12345
            createDate: 12345
            groupId: 12345
            id: 12345
            myClassType: 12345
            owner: '...'
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
          checkParentPermission: 12345
          columnFamilies: '...'
          columnType: 12345
          columns: '...'
          createDate: 12345
          databases: '...'
          description: '...'
          guid: '...'
          hiveServices: '...'
          id: 12345
          isEncrypt: 12345
          isRecursive: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          parentId: 12345
          parentPath: '...'
          permMapList:
          - createDate: 12345
            grantOrRevoke: true
            groupId: 12345
            groupName: '...'
            id: 12345
            ipAddress: '...'
            isRecursive: 12345
            isWildCard: true
            myClassType: 12345
            owner: '...'
            permFor: 12345
            permGroup: '...'
            permType: 12345
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          - createDate: 12345
            grantOrRevoke: true
            groupId: 12345
            groupName: '...'
            id: 12345
            ipAddress: '...'
            isRecursive: 12345
            isWildCard: true
            myClassType: 12345
            owner: '...'
            permFor: 12345
            permGroup: '...'
            permType: 12345
            resourceId: 12345
            updateDate: 12345
            updatedBy: '...'
            userId: 12345
            userName: '...'
          policyName: '...'
          resourceGroup: '...'
          resourceStatus: 12345
          resourceType: 12345
          services: '...'
          tableType: 12345
          tables: '...'
          topologies: '...'
          udfs: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXResourceList
      type: object
    VXResponse:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          messageList:
            description: Returns the value for the member attribute <b>messageList<b>
            items:
              $ref: '#/components/schemas/VXMessage'
            readOnly: false
            type: array
          msgDesc:
            description: Returns the value for the member attribute <b>msgDesc<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          statusCode:
            description: Returns the value for the member attribute <b>statusCode<b>
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        messageList:
        - fieldName: '...'
          message: '...'
          myClassType: 12345
          name: '...'
          objectId: 12345
          rbKey: '...'
        - fieldName: '...'
          message: '...'
          myClassType: 12345
          name: '...'
          objectId: 12345
          rbKey: '...'
        msgDesc: '...'
        myClassType: 12345
        statusCode: 12345
      title: VXResponse
      type: object
    VXString:
      allOf:
      - $ref: '#/components/schemas/ViewBaseBean'
      - properties:
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          value:
            description: Returns the value for the member attribute <b>value<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        myClassType: 12345
        value: '...'
      title: VXString
      type: object
    VXStringList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXStrings:
            description: ""
            items:
              $ref: '#/components/schemas/VXString'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXStrings:
        - myClassType: 12345
          value: '...'
        - myClassType: 12345
          value: '...'
      title: VXStringList
      type: object
    VXTrxLog:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          action:
            description: Returns the value for the member attribute <b>action<b>
            readOnly: false
            schema:
              type: string
          attributeName:
            description: Returns the value for the member attribute <b>attributeName<b>
            readOnly: false
            schema:
              type: string
          newValue:
            description: Returns the value for the member attribute <b>newValue<b>
            readOnly: false
            schema:
              type: string
          objectClassType:
            description: Returns the value for the member attribute <b>objectClassType<b>
            format: int32
            readOnly: false
            type: integer
          objectId:
            description: Returns the value for the member attribute <b>objectId<b>
            readOnly: false
            type: number
          objectName:
            description: Returns the value for the member attribute <b>objectName<b>
            readOnly: false
            schema:
              type: string
          parentObjectClassType:
            description: Returns the value for the member attribute <b>parentObjectClassType<b>
            format: int32
            readOnly: false
            type: integer
          parentObjectId:
            description: Returns the value for the member attribute <b>parentObjectId<b>
            readOnly: false
            type: number
          parentObjectName:
            description: Returns the value for the member attribute <b>parentObjectName<b>
            readOnly: false
            schema:
              type: string
          previousValue:
            description: Returns the value for the member attribute <b>previousValue<b>
            readOnly: false
            schema:
              type: string
          requestId:
            description: Returns the value for the member attribute <b>requestId<b>
            readOnly: false
            schema:
              type: string
          sessionId:
            description: Returns the value for the member attribute <b>sessionId<b>
            readOnly: false
            schema:
              type: string
          sessionType:
            description: Returns the value for the member attribute <b>sessionType<b>
            readOnly: false
            schema:
              type: string
          transactionId:
            description: Returns the value for the member attribute <b>transactionId<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        action: '...'
        attributeName: '...'
        createDate: 12345
        id: 12345
        myClassType: 12345
        newValue: '...'
        objectClassType: 12345
        objectId: 12345
        objectName: '...'
        owner: '...'
        parentObjectClassType: 12345
        parentObjectId: 12345
        parentObjectName: '...'
        previousValue: '...'
        requestId: '...'
        sessionId: '...'
        sessionType: '...'
        transactionId: '...'
        updateDate: 12345
        updatedBy: '...'
      title: VXTrxLog
      type: object
    VXTrxLogList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXTrxLogs:
            description: ""
            items:
              $ref: '#/components/schemas/VXTrxLog'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXTrxLogs:
        - action: '...'
          attributeName: '...'
          createDate: 12345
          id: 12345
          myClassType: 12345
          newValue: '...'
          objectClassType: 12345
          objectId: 12345
          objectName: '...'
          owner: '...'
          parentObjectClassType: 12345
          parentObjectId: 12345
          parentObjectName: '...'
          previousValue: '...'
          requestId: '...'
          sessionId: '...'
          sessionType: '...'
          transactionId: '...'
          updateDate: 12345
          updatedBy: '...'
        - action: '...'
          attributeName: '...'
          createDate: 12345
          id: 12345
          myClassType: 12345
          newValue: '...'
          objectClassType: 12345
          objectId: 12345
          objectName: '...'
          owner: '...'
          parentObjectClassType: 12345
          parentObjectId: 12345
          parentObjectName: '...'
          previousValue: '...'
          requestId: '...'
          sessionId: '...'
          sessionType: '...'
          transactionId: '...'
          updateDate: 12345
          updatedBy: '...'
      title: VXTrxLogList
      type: object
    VXUgsyncAuditInfo:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          eventTime:
            description: ""
            readOnly: false
            type: number
          fileSyncSourceInfo:
            $ref: '#/components/schemas/VXFileSyncSourceInfo'
            readOnly: false
          ldapSyncSourceInfo:
            $ref: '#/components/schemas/VXLdapSyncSourceInfo'
            readOnly: false
          noOfModifiedGroups:
            description: ""
            readOnly: false
            type: number
          noOfModifiedUsers:
            description: ""
            readOnly: false
            type: number
          noOfNewGroups:
            description: ""
            readOnly: false
            type: number
          noOfNewUsers:
            description: ""
            readOnly: false
            type: number
          sessionId:
            description: ""
            readOnly: false
            schema:
              type: string
          syncSource:
            description: ""
            readOnly: false
            schema:
              type: string
          syncSourceInfo:
            additionalProperties:
              schema:
                type: string
            description: ""
            readOnly: false
            type: object
          unixSyncSourceInfo:
            $ref: '#/components/schemas/VXUnixSyncSourceInfo'
            readOnly: false
          userName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        eventTime: 12345
        fileSyncSourceInfo:
          fileName: '...'
          lastModified: '...'
          syncTime: '...'
          totalGroupsSynced: 12345
          totalUsersSynced: 12345
        id: 12345
        ldapSyncSourceInfo:
          groupHierarchyLevel: '...'
          groupSearchEnabled: '...'
          groupSearchFilter: '...'
          groupSearchFirstEnabled: '...'
          ldapUrl: '...'
          totalGroupsSynced: 12345
          totalUsersSynced: 12345
          userSearchEnabled: '...'
          userSearchFilter: '...'
        myClassType: 12345
        noOfModifiedGroups: 12345
        noOfModifiedUsers: 12345
        noOfNewGroups: 12345
        noOfNewUsers: 12345
        owner: '...'
        sessionId: '...'
        syncSource: '...'
        syncSourceInfo:
          property1: '...'
          property2: '...'
        unixSyncSourceInfo:
          fileName: '...'
          lastModified: '...'
          minGroupId: '...'
          minUserId: '...'
          syncTime: '...'
          totalGroupsSynced: 12345
          totalUsersSynced: 12345
          unixBackend: '...'
        updateDate: 12345
        updatedBy: '...'
        userName: '...'
      title: VXUgsyncAuditInfo
      type: object
    VXUgsyncAuditInfoList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vxUgsyncAuditInfoList:
            description: ""
            items:
              $ref: '#/components/schemas/VXUgsyncAuditInfo'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vxUgsyncAuditInfoList:
        - createDate: 12345
          eventTime: 12345
          fileSyncSourceInfo:
            fileName: '...'
            lastModified: '...'
            syncTime: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
          id: 12345
          ldapSyncSourceInfo:
            groupHierarchyLevel: '...'
            groupSearchEnabled: '...'
            groupSearchFilter: '...'
            groupSearchFirstEnabled: '...'
            ldapUrl: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
            userSearchEnabled: '...'
            userSearchFilter: '...'
          myClassType: 12345
          noOfModifiedGroups: 12345
          noOfModifiedUsers: 12345
          noOfNewGroups: 12345
          noOfNewUsers: 12345
          owner: '...'
          sessionId: '...'
          syncSource: '...'
          syncSourceInfo:
            property1: '...'
            property2: '...'
          unixSyncSourceInfo:
            fileName: '...'
            lastModified: '...'
            minGroupId: '...'
            minUserId: '...'
            syncTime: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
            unixBackend: '...'
          updateDate: 12345
          updatedBy: '...'
          userName: '...'
        - createDate: 12345
          eventTime: 12345
          fileSyncSourceInfo:
            fileName: '...'
            lastModified: '...'
            syncTime: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
          id: 12345
          ldapSyncSourceInfo:
            groupHierarchyLevel: '...'
            groupSearchEnabled: '...'
            groupSearchFilter: '...'
            groupSearchFirstEnabled: '...'
            ldapUrl: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
            userSearchEnabled: '...'
            userSearchFilter: '...'
          myClassType: 12345
          noOfModifiedGroups: 12345
          noOfModifiedUsers: 12345
          noOfNewGroups: 12345
          noOfNewUsers: 12345
          owner: '...'
          sessionId: '...'
          syncSource: '...'
          syncSourceInfo:
            property1: '...'
            property2: '...'
          unixSyncSourceInfo:
            fileName: '...'
            lastModified: '...'
            minGroupId: '...'
            minUserId: '...'
            syncTime: '...'
            totalGroupsSynced: 12345
            totalUsersSynced: 12345
            unixBackend: '...'
          updateDate: 12345
          updatedBy: '...'
          userName: '...'
      title: VXUgsyncAuditInfoList
      type: object
    VXUnixSyncSourceInfo:
      description: ""
      example:
        fileName: '...'
        lastModified: '...'
        minGroupId: '...'
        minUserId: '...'
        syncTime: '...'
        totalGroupsSynced: 12345
        totalUsersSynced: 12345
        unixBackend: '...'
      properties:
        fileName:
          description: ""
          readOnly: false
          schema:
            type: string
        lastModified:
          description: ""
          readOnly: false
          schema:
            type: string
        minGroupId:
          description: ""
          readOnly: false
          schema:
            type: string
        minUserId:
          description: ""
          readOnly: false
          schema:
            type: string
        syncTime:
          description: ""
          readOnly: false
          schema:
            type: string
        totalGroupsSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
        totalUsersSynced:
          description: ""
          format: int64
          readOnly: false
          type: integer
        unixBackend:
          description: ""
          readOnly: false
          schema:
            type: string
      title: VXUnixSyncSourceInfo
      type: object
    VXUser:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          credStoreId:
            description: Returns the value for the member attribute <b>credStoreId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          emailAddress:
            description: Returns the value for the member attribute <b>emailAddress<b>
            readOnly: false
            schema:
              type: string
          firstName:
            description: Returns the value for the member attribute <b>firstName<b>
            readOnly: false
            schema:
              type: string
          groupIdList:
            description: Returns the value for the member attribute <b>groupIdList<b>
            items:
              type: number
            readOnly: false
            type: array
          groupNameList:
            description: ""
            items:
              schema:
                type: string
            readOnly: false
            type: array
          isVisible:
            description: ""
            readOnly: false
            type: number
          lastName:
            description: Returns the value for the member attribute <b>lastName<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          password:
            description: Returns the value for the member attribute <b>password<b>
            readOnly: false
            schema:
              type: string
          status:
            description: ""
            format: int32
            readOnly: false
            type: integer
          userRoleList:
            description: Returns the value for the member attribute <b>userRoleList<b>
            items:
              schema:
                type: string
            readOnly: false
            type: array
          userSource:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        createDate: 12345
        credStoreId: 12345
        description: '...'
        emailAddress: '...'
        firstName: '...'
        groupIdList:
        - 12345
        - 12345
        groupNameList:
        - '...'
        - '...'
        id: 12345
        isVisible: 12345
        lastName: '...'
        myClassType: 12345
        name: '...'
        owner: '...'
        password: '...'
        status: 12345
        updateDate: 12345
        updatedBy: '...'
        userRoleList:
        - '...'
        - '...'
        userSource: 12345
      title: VXUser
      type: object
    VXUserGroupInfo:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          xgroupInfo:
            description: ""
            items:
              $ref: '#/components/schemas/VXGroup'
            readOnly: false
            type: array
          xuserInfo:
            $ref: '#/components/schemas/VXUser'
            readOnly: false
      description: ""
      example:
        createDate: 12345
        id: 12345
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
        xgroupInfo:
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          groupSource: 12345
          groupType: 12345
          id: 12345
          isVisible: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          groupSource: 12345
          groupType: 12345
          id: 12345
          isVisible: 12345
          myClassType: 12345
          name: '...'
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
        xuserInfo:
          createDate: 12345
          credStoreId: 12345
          description: '...'
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupNameList:
          - '...'
          - '...'
          id: 12345
          isVisible: 12345
          lastName: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          password: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
      title: VXUserGroupInfo
      type: object
    VXUserList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXUsers:
            description: ""
            items:
              $ref: '#/components/schemas/VXUser'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXUsers:
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupNameList:
          - '...'
          - '...'
          id: 12345
          isVisible: 12345
          lastName: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          password: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
        - createDate: 12345
          credStoreId: 12345
          description: '...'
          emailAddress: '...'
          firstName: '...'
          groupIdList:
          - 12345
          - 12345
          groupNameList:
          - '...'
          - '...'
          id: 12345
          isVisible: 12345
          lastName: '...'
          myClassType: 12345
          name: '...'
          owner: '...'
          password: '...'
          status: 12345
          updateDate: 12345
          updatedBy: '...'
          userRoleList:
          - '...'
          - '...'
          userSource: 12345
      title: VXUserList
      type: object
    VXUserPermission:
      allOf:
      - $ref: '#/components/schemas/VXDataObject'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isAllowed:
            description: ""
            readOnly: false
            type: number
          loginId:
            description: ""
            readOnly: false
            schema:
              type: string
          moduleId:
            description: ""
            readOnly: false
            type: number
          moduleName:
            description: ""
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          userId:
            description: ""
            readOnly: false
            type: number
          userName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        createDate: 12345
        id: 12345
        isAllowed: 12345
        loginId: '...'
        moduleId: 12345
        moduleName: '...'
        myClassType: 12345
        owner: '...'
        updateDate: 12345
        updatedBy: '...'
        userId: 12345
        userName: '...'
      title: VXUserPermission
      type: object
    VXUserPermissionList:
      allOf:
      - $ref: '#/components/schemas/VList'
      - properties:
          vXUserPermission:
            description: ""
            items:
              $ref: '#/components/schemas/VXUserPermission'
            readOnly: false
            type: array
      description: ""
      example:
        list:
        - {}
        - {}
        listSize: 12345
        pageSize: 12345
        resultSize: 12345
        sortBy: '...'
        sortType: '...'
        startIndex: 12345
        totalCount: 12345
        vXUserPermission:
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
        - createDate: 12345
          id: 12345
          isAllowed: 12345
          loginId: '...'
          moduleId: 12345
          moduleName: '...'
          myClassType: 12345
          owner: '...'
          updateDate: 12345
          updatedBy: '...'
          userId: 12345
          userName: '...'
      title: VXUserPermissionList
      type: object
    VXXTrxLog:
      description: ""
      example:
        action: '...'
        addedByUserId: 12345
        attributeName: '...'
        createTime: 12345
        id: 12345
        newValue: '...'
        objectClassType: 12345
        objectId: 12345
        objectName: '...'
        parentObjectClassType: 12345
        parentObjectId: 12345
        parentObjectName: '...'
        previousValue: '...'
        requestId: '...'
        sessionId: '...'
        sessionType: '...'
        transactionId: '...'
        updateTime: 12345
        updatedByUserId: 12345
      properties:
        action:
          description: Returns the value for the member attribute <b>action<b>
          readOnly: false
          schema:
            type: string
        addedByUserId:
          description: ""
          readOnly: false
          type: number
        attributeName:
          description: Returns the value for the member attribute <b>attributeName<b>
          readOnly: false
          schema:
            type: string
        createTime:
          description: ""
          readOnly: false
          type: number
        id:
          description: ""
          readOnly: false
          type: number
        newValue:
          description: Returns the value for the member attribute <b>newValue<b>
          readOnly: false
          schema:
            type: string
        objectClassType:
          description: ""
          format: int32
          readOnly: false
          type: integer
        objectId:
          description: ""
          readOnly: false
          type: number
        objectName:
          description: ""
          readOnly: false
          schema:
            type: string
        parentObjectClassType:
          description: Returns the value for the member attribute <b>parentObjectClassType<b>
          format: int32
          readOnly: false
          type: integer
        parentObjectId:
          description: Returns the value for the member attribute <b>parentObjectId<b>
          readOnly: false
          type: number
        parentObjectName:
          description: ""
          readOnly: false
          schema:
            type: string
        previousValue:
          description: Returns the value for the member attribute <b>previousValue<b>
          readOnly: false
          schema:
            type: string
        requestId:
          description: Returns the value for the member attribute <b>requestId<b>
          readOnly: false
          schema:
            type: string
        sessionId:
          description: Returns the value for the member attribute <b>sessionId<b>
          readOnly: false
          schema:
            type: string
        sessionType:
          description: Returns the value for the member attribute <b>sessionType<b>
          readOnly: false
          schema:
            type: string
        transactionId:
          description: Returns the value for the member attribute <b>transactionId<b>
          readOnly: false
          schema:
            type: string
        updateTime:
          description: ""
          readOnly: false
          type: number
        updatedByUserId:
          description: ""
          readOnly: false
          type: number
      title: VXXTrxLog
      type: object
    ValidityInterval:
      description: ""
      example:
        days: 12345
        hours: 12345
        minutes: 12345
      properties:
        days:
          description: ""
          format: int32
          readOnly: false
          type: integer
        hours:
          description: ""
          format: int32
          readOnly: false
          type: integer
        minutes:
          description: ""
          format: int32
          readOnly: false
          type: integer
      title: ValidityInterval
      type: object
    ViewBaseBean:
      description: ""
      example: {}
      title: ViewBaseBean
      type: object
    XXAccessAudit:
      allOf:
      - $ref: '#/components/schemas/XXAccessAuditBase'
      - properties:
          eventCount:
            description: ""
            format: int64
            readOnly: false
            type: integer
          eventDuration:
            description: ""
            format: int64
            readOnly: false
            type: integer
          sequenceNumber:
            description: ""
            format: int64
            readOnly: false
            type: integer
          tags:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        accessResult: 12345
        accessType: '...'
        aclEnforcer: '...'
        action: '...'
        addedByUserId: 12345
        agentId: '...'
        auditType: 12345
        clientIP: '...'
        clientType: '...'
        createTime: 12345
        eventCount: 12345
        eventDuration: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        repoName: '...'
        repoType: 12345
        requestData: '...'
        requestUser: '...'
        resourcePath: '...'
        resourceType: '...'
        resultReason: '...'
        sequenceNumber: 12345
        sessionId: '...'
        tags: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessAudit
      type: object
    XXAccessAuditBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          accessResult:
            description: Returns the value for the member attribute <b>accessResult<b>
            format: int32
            readOnly: false
            type: integer
          accessType:
            description: Returns the value for the member attribute <b>accessType<b>
            readOnly: false
            schema:
              type: string
          aclEnforcer:
            description: Returns the value for the member attribute <b>aclEnforcer<b>
            readOnly: false
            schema:
              type: string
          action:
            description: Returns the value for the member attribute <b>action<b>
            readOnly: false
            schema:
              type: string
          agentId:
            description: Returns the value for the member attribute <b>agentId<b>
            readOnly: false
            schema:
              type: string
          auditType:
            description: Returns the value for the member attribute <b>auditType<b>
            format: int32
            readOnly: false
            type: integer
          clientIP:
            description: Returns the value for the member attribute <b>clientIP<b>
            readOnly: false
            schema:
              type: string
          clientType:
            description: Returns the value for the member attribute <b>clientType<b>
            readOnly: false
            schema:
              type: string
          eventTime:
            description: Returns the value for the member attribute <b>eventTime<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            format: int64
            readOnly: false
            type: integer
          repoName:
            description: Returns the value for the member attribute <b>repoName<b>
            readOnly: false
            schema:
              type: string
          repoType:
            description: Returns the value for the member attribute <b>repoType<b>
            format: int32
            readOnly: false
            type: integer
          requestData:
            description: Returns the value for the member attribute <b>requestData<b>
            readOnly: false
            schema:
              type: string
          requestUser:
            description: Returns the value for the member attribute <b>requestUser<b>
            readOnly: false
            schema:
              type: string
          resourcePath:
            description: Returns the value for the member attribute <b>resourcePath<b>
            readOnly: false
            schema:
              type: string
          resourceType:
            description: Returns the value for the member attribute <b>resourceType<b>
            readOnly: false
            schema:
              type: string
          resultReason:
            description: Returns the value for the member attribute <b>resultReason<b>
            readOnly: false
            schema:
              type: string
          sessionId:
            description: Returns the value for the member attribute <b>sessionId<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        accessResult: 12345
        accessType: '...'
        aclEnforcer: '...'
        action: '...'
        addedByUserId: 12345
        agentId: '...'
        auditType: 12345
        clientIP: '...'
        clientType: '...'
        createTime: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        repoName: '...'
        repoType: 12345
        requestData: '...'
        requestUser: '...'
        resourcePath: '...'
        resourceType: '...'
        resultReason: '...'
        sessionId: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessAuditBase
      type: object
    XXAccessAuditV4:
      allOf:
      - $ref: '#/components/schemas/XXAccessAuditBase'
      - properties:
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        accessResult: 12345
        accessType: '...'
        aclEnforcer: '...'
        action: '...'
        addedByUserId: 12345
        agentId: '...'
        auditType: 12345
        clientIP: '...'
        clientType: '...'
        createTime: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        repoName: '...'
        repoType: 12345
        requestData: '...'
        requestUser: '...'
        resourcePath: '...'
        resourceType: '...'
        resultReason: '...'
        sessionId: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessAuditV4
      type: object
    XXAccessAuditV5:
      allOf:
      - $ref: '#/components/schemas/XXAccessAuditBase'
      - properties:
          eventCount:
            description: ""
            format: int64
            readOnly: false
            type: integer
          eventDuration:
            description: ""
            format: int64
            readOnly: false
            type: integer
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          sequenceNumber:
            description: ""
            format: int64
            readOnly: false
            type: integer
      description: ""
      example:
        accessResult: 12345
        accessType: '...'
        aclEnforcer: '...'
        action: '...'
        addedByUserId: 12345
        agentId: '...'
        auditType: 12345
        clientIP: '...'
        clientType: '...'
        createTime: 12345
        eventCount: 12345
        eventDuration: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        repoName: '...'
        repoType: 12345
        requestData: '...'
        requestUser: '...'
        resourcePath: '...'
        resourceType: '...'
        resultReason: '...'
        sequenceNumber: 12345
        sessionId: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessAuditV5
      type: object
    XXAccessTypeDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          dataMaskOptions:
            description: ""
            readOnly: false
            schema:
              type: string
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          rowFilterOptions:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        dataMaskOptions: '...'
        defid: 12345
        id: 12345
        itemId: 12345
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        rbkeylabel: '...'
        rowFilterOptions: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessTypeDef
      type: object
    XXAccessTypeDefGrants:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          atdId:
            description: Returns the value for the member attribute <b>atdId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          impliedGrant:
            description: Returns the value for the member attribute <b>impliedGrant<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        atdId: 12345
        createTime: 12345
        id: 12345
        impliedGrant: '...'
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAccessTypeDefGrants
      type: object
    XXAsset:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          activeStatus:
            description: Returns the value for the member attribute <b>activeStatus<b>
            format: int32
            readOnly: false
            type: integer
          assetType:
            description: Returns the value for the member attribute <b>assetType<b>
            format: int32
            readOnly: false
            type: integer
          config:
            description: Returns the value for the member attribute <b>config<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          supportNative:
            description: Returns the value for the member attribute <b>supportNative<b>
            readOnly: false
            type: boolean
      description: ""
      example:
        activeStatus: 12345
        addedByUserId: 12345
        assetType: 12345
        config: '...'
        createTime: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        supportNative: true
        updateTime: 12345
        updatedByUserId: 12345
      title: XXAsset
      type: object
    XXAuditMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          auditType:
            description: Returns the value for the member attribute <b>auditType<b>
            format: int32
            readOnly: false
            type: integer
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resourceId:
            description: Returns the value for the member attribute <b>resourceId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        auditType: 12345
        createTime: 12345
        groupId: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        resourceId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
      title: XXAuditMap
      type: object
    XXAuthSession:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          authProvider:
            description: Returns the value for the member attribute <b>authProvider<b>
            format: int32
            readOnly: false
            type: integer
          authStatus:
            description: Returns the value for the member attribute <b>authStatus<b>
            format: int32
            readOnly: false
            type: integer
          authTime:
            description: Returns the value for the member attribute <b>authTime<b>
            readOnly: false
            type: number
          authType:
            description: Returns the value for the member attribute <b>authType<b>
            format: int32
            readOnly: false
            type: integer
          deviceType:
            description: Returns the value for the member attribute <b>deviceType<b>
            format: int32
            readOnly: false
            type: integer
          extSessionId:
            description: Returns the value for the member attribute <b>extSessionId<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          loginId:
            description: Returns the value for the member attribute <b>loginId<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          requestIP:
            description: Returns the value for the member attribute <b>requestIP<b>
            readOnly: false
            schema:
              type: string
          requestUserAgent:
            description: Returns the value for the member attribute <b>requestUserAgent<b>
            readOnly: false
            schema:
              type: string
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        authProvider: 12345
        authStatus: 12345
        authTime: 12345
        authType: 12345
        createTime: 12345
        deviceType: 12345
        extSessionId: '...'
        id: 12345
        loginId: '...'
        myClassType: 12345
        myDisplayValue: '...'
        requestIP: '...'
        requestUserAgent: '...'
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
      title: XXAuthSession
      type: object
    XXContextEnricherDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          enricher:
            description: Returns the value for the member attribute <b>enricher<b>
            readOnly: false
            schema:
              type: string
          enricherOptions:
            description: Returns the value for the member attribute <b>evaluatorOptions<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defid: 12345
        enricher: '...'
        enricherOptions: '...'
        id: 12345
        itemId: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXContextEnricherDef
      type: object
    XXCredentialStore:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXCredentialStore
      type: object
    XXDBBase:
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
      properties:
        addedByUserId:
          description: Returns the value for the member attribute <b>addedByUserId<b>
          readOnly: false
          type: number
        createTime:
          description: Returns the value for the member attribute <b>createTime<b>
          readOnly: false
          type: number
        id:
          description: Returns the value for the member attribute <b>id<b>
          readOnly: false
          type: number
        myClassType:
          description: ""
          format: int32
          readOnly: false
          type: integer
        myDisplayValue:
          description: ""
          readOnly: false
          schema:
            type: string
        updateTime:
          description: Returns the value for the member attribute <b>updateTime<b>
          readOnly: false
          type: number
        updatedByUserId:
          description: Returns the value for the member attribute <b>updatedByUserId<b>
          readOnly: false
          type: number
      title: XXDBBase
      type: object
    XXDataHist:
      description: ""
      example:
        action: '...'
        content: '...'
        createTime: 12345
        fromTime: 12345
        id: 12345
        objectClassType: 12345
        objectGuid: '...'
        objectId: 12345
        objectName: '...'
        toTime: 12345
        updateTime: 12345
        version: 12345
      properties:
        action:
          description: Returns the value for the member attribute <b>action<b>
          readOnly: false
          schema:
            type: string
        content:
          description: Returns the value for the member attribute <b>content<b>
          readOnly: false
          schema:
            type: string
        createTime:
          description: ""
          readOnly: false
          type: number
        fromTime:
          description: Returns the value for the member attribute <b>fromTime<b>
          readOnly: false
          type: number
        id:
          description: Returns the value for the member attribute <b>id<b>
          readOnly: false
          type: number
        objectClassType:
          description: Returns the value for the member attribute <b>type<b>
          readOnly: false
          type: number
        objectGuid:
          description: ""
          readOnly: false
          schema:
            type: string
        objectId:
          description: ""
          readOnly: false
          type: number
        objectName:
          description: Returns the value for the member attribute <b>name<b>
          readOnly: false
          schema:
            type: string
        toTime:
          description: Returns the value for the member attribute <b>toTime<b>
          readOnly: false
          type: number
        updateTime:
          description: ""
          readOnly: false
          type: number
        version:
          description: Returns the value for the member attribute <b>version<b>
          readOnly: false
          type: number
      title: XXDataHist
      type: object
    XXDataMaskTypeDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          dataMaskOptions:
            description: Returns the value for the member attribute <b>dataMaskOptions<b>
            readOnly: false
            schema:
              type: string
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          rbKeyDescription:
            description: Returns the value for the member attribute <b>rbKeyDescription<b>
            readOnly: false
            schema:
              type: string
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          transformer:
            description: Returns the value for the member attribute <b>transformer<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        dataMaskOptions: '...'
        defid: 12345
        description: '...'
        id: 12345
        itemId: 12345
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        rbKeyDescription: '...'
        rbkeylabel: '...'
        transformer: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXDataMaskTypeDef
      type: object
    XXEnumDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          defaultindex:
            description: Returns the value for the member attribute <b>defaultIndex<b>
            readOnly: false
            type: number
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defaultindex: 12345
        defid: 12345
        id: 12345
        itemId: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXEnumDef
      type: object
    XXEnumElementDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          enumdefid:
            description: Returns the value for the member attribute <b>enumDefId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        enumdefid: 12345
        id: 12345
        itemId: 12345
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        rbkeylabel: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXEnumElementDef
      type: object
    XXGlobalState:
      allOf:
      - $ref: '#/components/schemas/XXGlobalStateBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        appData: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        stateName: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXGlobalState
      type: object
    XXGlobalStateBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          appData:
            description: ""
            readOnly: false
            schema:
              type: string
          stateName:
            description: ""
            readOnly: false
            schema:
              type: string
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        appData: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        stateName: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXGlobalStateBase
      type: object
    XXGroup:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          credStoreId:
            description: Returns the value for the member attribute <b>credStoreId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          groupSource:
            description: ""
            format: int32
            readOnly: false
            type: integer
          groupType:
            description: Returns the value for the member attribute <b>groupType<b>
            format: int32
            readOnly: false
            type: integer
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isVisible:
            description: ""
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          status:
            description: Returns the value for the member attribute <b>status<b>
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        credStoreId: 12345
        description: '...'
        groupSource: 12345
        groupType: 12345
        id: 12345
        isVisible: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        status: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXGroup
      type: object
    XXGroupGroup:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentGroupId:
            description: Returns the value for the member attribute <b>parentGroupId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        groupId: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        parentGroupId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXGroupGroup
      type: object
    XXGroupPermission:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupId:
            description: ""
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isAllowed:
            description: ""
            readOnly: false
            type: number
          moduleId:
            description: ""
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        groupId: 12345
        id: 12345
        isAllowed: 12345
        moduleId: 12345
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXGroupPermission
      type: object
    XXGroupUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentGroupId:
            description: Returns the value for the member attribute <b>parentGroupId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        parentGroupId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
      title: XXGroupUser
      type: object
    XXModuleDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          module:
            description: ""
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          url:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        module: '...'
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
        url: '...'
      title: XXModuleDef
      type: object
    XXPermMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          grantOrRevoke:
            description: Returns the value for the member attribute <b>grantOrRevoke<b>
            readOnly: false
            type: boolean
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          ipAddress:
            description: ""
            readOnly: false
            schema:
              type: string
          isRecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            format: int32
            readOnly: false
            type: integer
          isWildCard:
            description: Returns the value for the member attribute <b>isWildCard<b>
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          permFor:
            description: Returns the value for the member attribute <b>permFor<b>
            format: int32
            readOnly: false
            type: integer
          permGroup:
            description: Returns the value for the member attribute <b>permGroup<b>
            readOnly: false
            schema:
              type: string
          permType:
            description: Returns the value for the member attribute <b>permType<b>
            format: int32
            readOnly: false
            type: integer
          resourceId:
            description: Returns the value for the member attribute <b>resourceId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        grantOrRevoke: true
        groupId: 12345
        id: 12345
        ipAddress: '...'
        isRecursive: 12345
        isWildCard: true
        myClassType: 12345
        myDisplayValue: '...'
        permFor: 12345
        permGroup: '...'
        permType: 12345
        resourceId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
      title: XXPermMap
      type: object
    XXPluginInfo:
      description: ""
      example:
        appType: '...'
        createTime: 12345
        hostName: '...'
        id: 12345
        info: '...'
        ipAddress: '...'
        myClassType: 12345
        myDisplayValue: '...'
        serviceName: '...'
        updateTime: 12345
      properties:
        appType:
          description: ""
          readOnly: false
          schema:
            type: string
        createTime:
          description: ""
          readOnly: false
          type: number
        hostName:
          description: ""
          readOnly: false
          schema:
            type: string
        id:
          description: ""
          readOnly: false
          type: number
        info:
          description: ""
          readOnly: false
          schema:
            type: string
        ipAddress:
          description: ""
          readOnly: false
          schema:
            type: string
        myClassType:
          description: ""
          format: int32
          readOnly: false
          type: integer
        myDisplayValue:
          description: ""
          readOnly: false
          schema:
            type: string
        serviceName:
          description: ""
          readOnly: false
          schema:
            type: string
        updateTime:
          description: ""
          readOnly: false
          type: number
      title: XXPluginInfo
      type: object
    XXPolicy:
      allOf:
      - $ref: '#/components/schemas/XXPolicyBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isAuditEnabled: true
        isEnabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        options: '...'
        policyPriority: 12345
        policyText: '...'
        policyType: 12345
        resourceSignature: '...'
        service: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
        zoneId: 12345
      title: XXPolicy
      type: object
    XXPolicyBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          isAuditEnabled:
            description: Returns the value for the member attribute <b>isAuditEnabled<b>
            readOnly: false
            type: boolean
          isEnabled:
            description: Returns the value for the member attribute <b>isEnabled<b>
            readOnly: false
            type: boolean
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          options:
            description: Returns the value for the member attribute <b>options<b>
            readOnly: false
            schema:
              type: string
          policyPriority:
            description: ""
            readOnly: false
            type: number
          policyText:
            description: ""
            readOnly: false
            schema:
              type: string
          policyType:
            description: ""
            readOnly: false
            type: number
          resourceSignature:
            description: ""
            readOnly: false
            schema:
              type: string
          service:
            description: Returns the value for the member attribute <b>service<b>
            readOnly: false
            type: number
          version:
            description: Returns the value for the member attribute <b>version<b>
            readOnly: false
            type: number
          zoneId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isAuditEnabled: true
        isEnabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        options: '...'
        policyPriority: 12345
        policyText: '...'
        policyType: 12345
        resourceSignature: '...'
        service: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
        zoneId: 12345
      title: XXPolicyBase
      type: object
    XXPolicyChangeLog:
      description: ""
      example:
        changeType: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        policyType: 12345
        policyVersion: 12345
        serviceId: 12345
        serviceType: '...'
        zoneName: '...'
      properties:
        changeType:
          description: ""
          readOnly: false
          type: number
        createTime:
          description: ""
          readOnly: false
          type: number
        id:
          description: ""
          readOnly: false
          type: number
        myClassType:
          description: ""
          format: int32
          readOnly: false
          type: integer
        myDisplayValue:
          description: ""
          readOnly: false
          schema:
            type: string
        policyId:
          description: ""
          readOnly: false
          type: number
        policyType:
          description: ""
          readOnly: false
          type: number
        policyVersion:
          description: ""
          readOnly: false
          type: number
        serviceId:
          description: ""
          readOnly: false
          type: number
        serviceType:
          description: ""
          readOnly: false
          schema:
            type: string
        zoneName:
          description: ""
          readOnly: false
          schema:
            type: string
      title: XXPolicyChangeLog
      type: object
    XXPolicyConditionDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          evaluator:
            description: Returns the value for the member attribute <b>evaluator<b>
            readOnly: false
            schema:
              type: string
          evaluatoroptions:
            description: Returns the value for the member attribute <b>evaluatorOptions<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          rbKeyValidationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          rbkeydescription:
            description: Returns the value for the member attribute <b>rbKeyDescription<b>
            readOnly: false
            schema:
              type: string
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          uiHint:
            description: ""
            readOnly: false
            schema:
              type: string
          validationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          validationRegEx:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defid: 12345
        description: '...'
        evaluator: '...'
        evaluatoroptions: '...'
        id: 12345
        itemId: 12345
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        rbKeyValidationMessage: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        uiHint: '...'
        updateTime: 12345
        updatedByUserId: 12345
        validationMessage: '...'
        validationRegEx: '...'
      title: XXPolicyConditionDef
      type: object
    XXPolicyExportAudit:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          agentId:
            description: Returns the value for the member attribute <b>agentId<b>
            readOnly: false
            schema:
              type: string
          clientIP:
            description: Returns the value for the member attribute <b>clientIP<b>
            readOnly: false
            schema:
              type: string
          clusterName:
            description: Returns the value for the member attribute <b>clusterName<b>
            readOnly: false
            schema:
              type: string
          exportedJson:
            description: Returns the value for the member attribute <b>exportedJson<b>
            readOnly: false
            schema:
              type: string
          httpRetCode:
            description: Returns the value for the member attribute <b>httpRetCode<b>
            format: int32
            readOnly: false
            type: integer
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          lastUpdated:
            description: Returns the value for the member attribute <b>lastUpdated<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          policyVersion:
            description: Returns the value for the member attribute <b>policyVersion<b>
            readOnly: false
            type: number
          repositoryName:
            description: Returns the value for the member attribute <b>repositoryName<b>
            readOnly: false
            schema:
              type: string
          requestedEpoch:
            description: Returns the value for the member attribute <b>requestedEpoch<b>
            readOnly: false
            type: number
          zoneName:
            description: Returns the value for the member attribute <b>zoneName<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        agentId: '...'
        clientIP: '...'
        clusterName: '...'
        createTime: 12345
        exportedJson: '...'
        httpRetCode: 12345
        id: 12345
        lastUpdated: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyVersion: 12345
        repositoryName: '...'
        requestedEpoch: 12345
        updateTime: 12345
        updatedByUserId: 12345
        zoneName: '...'
      title: XXPolicyExportAudit
      type: object
    XXPolicyItem:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          GUID:
            description: ""
            readOnly: false
            schema:
              type: string
          comments:
            description: Returns the value for the member attribute <b>comments<b>
            readOnly: false
            schema:
              type: string
          delegateAdmin:
            description: Returns the value for the member attribute <b>delegateAdmin<b>
            readOnly: false
            type: boolean
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isEnabled:
            description: Returns the value for the member attribute <b>isEnabled<b>
            readOnly: false
            type: boolean
          itemType:
            description: Returns the value for the member attribute <b>itemType<b>
            readOnly: false
            type: number
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          policyid:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
      description: ""
      example:
        GUID: '...'
        addedByUserId: 12345
        comments: '...'
        createTime: 12345
        delegateAdmin: true
        id: 12345
        isEnabled: true
        itemType: 12345
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        policyid: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyItem
      type: object
    XXPolicyItemAccess:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          GUID:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isallowed:
            description: Returns the value for the member attribute <b>isAllowed<b>
            readOnly: false
            type: boolean
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          policyitemid:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            type: number
      description: ""
      example:
        GUID: '...'
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        isallowed: true
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        policyitemid: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyItemAccess
      type: object
    XXPolicyItemCondition:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          GUID:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          policyitemid:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            type: number
          value:
            description: Returns the value for the member attribute <b>value<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        GUID: '...'
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        policyitemid: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        value: '...'
      title: XXPolicyItemCondition
      type: object
    XXPolicyItemDataMaskInfo:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          conditionExpr:
            description: Returns the value for the member attribute <b>valueExpr<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyItemId:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            type: number
          valueExpr:
            description: Returns the value for the member attribute <b>valueExpr<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        conditionExpr: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyItemId: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        valueExpr: '...'
      title: XXPolicyItemDataMaskInfo
      type: object
    XXPolicyItemGroupPerm:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupid:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          policyitemid:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        groupid: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        policyitemid: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyItemGroupPerm
      type: object
    XXPolicyItemRowFilterInfo:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          filterExpr:
            description: Returns the value for the member attribute <b>filterExpr<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyItemId:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        filterExpr: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyItemId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyItemRowFilterInfo
      type: object
    XXPolicyItemUserPerm:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          policyitemid:
            description: Returns the value for the member attribute <b>policyItemId<b>
            readOnly: false
            type: number
          userid:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        policyitemid: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userid: 12345
      title: XXPolicyItemUserPerm
      type: object
    XXPolicyLabel:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyLabel:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyLabel: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyLabel
      type: object
    XXPolicyLabelMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: ""
            readOnly: false
            type: number
          policyLabelId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        policyLabelId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyLabelMap
      type: object
    XXPolicyRefAccessType:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          accessDefId:
            description: Returns the value for the member attribute <b>accessDefId<b>
            readOnly: false
            type: number
          accessTypeName:
            description: Returns the value for the member attribute <b>accessTypeName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
      description: ""
      example:
        accessDefId: 12345
        accessTypeName: '...'
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefAccessType
      type: object
    XXPolicyRefCondition:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          conditionDefId:
            description: Returns the value for the member attribute <b>conditionDefId<b>
            readOnly: false
            type: number
          conditionName:
            description: Returns the value for the member attribute <b>conditionName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        conditionDefId: 12345
        conditionName: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefCondition
      type: object
    XXPolicyRefDataMaskType:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          dataMaskDefId:
            description: Returns the value for the member attribute <b>dataMaskDefId<b>
            readOnly: false
            type: number
          dataMaskTypeName:
            description: Returns the value for the member attribute <b>dataMaskTypeName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        dataMaskDefId: 12345
        dataMaskTypeName: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefDataMaskType
      type: object
    XXPolicyRefGroup:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          groupName:
            description: Returns the value for the member attribute <b>groupName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
      description: The persistent class for the x_policy_ref_group database table.
      example:
        addedByUserId: 12345
        createTime: 12345
        groupId: 12345
        groupName: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefGroup
      type: object
    XXPolicyRefResource:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
          resourceDefId:
            description: Returns the value for the member attribute <b>resourceDefId<b>
            readOnly: false
            type: number
          resourceName:
            description: Returns the value for the member attribute <b>resourceName<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        resourceDefId: 12345
        resourceName: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefResource
      type: object
    XXPolicyRefRole:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
          roleId:
            description: Returns the value for the member attribute <b>roleId<b>
            readOnly: false
            type: number
          roleName:
            description: Returns the value for the member attribute <b>roleName<b>
            readOnly: false
            schema:
              type: string
      description: The persistent class for the x_policy_ref_role database table.
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        roleId: 12345
        roleName: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyRefRole
      type: object
    XXPolicyRefUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          policyId:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
          userName:
            description: Returns the value for the member attribute <b>userName<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
        userName: '...'
      title: XXPolicyRefUser
      type: object
    XXPolicyResource:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isexcludes:
            description: Returns the value for the member attribute <b>isExcludes<b>
            readOnly: false
            type: boolean
          isrecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            readOnly: false
            type: boolean
          policyid:
            description: Returns the value for the member attribute <b>policyId<b>
            readOnly: false
            type: number
          resdefid:
            description: Returns the value for the member attribute <b>resDefId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        isexcludes: true
        isrecursive: true
        myClassType: 12345
        myDisplayValue: '...'
        policyid: 12345
        resdefid: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXPolicyResource
      type: object
    XXPolicyResourceMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          resourceid:
            description: Returns the value for the member attribute <b>resourceId<b>
            readOnly: false
            type: number
          value:
            description: Returns the value for the member attribute <b>value<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        order: 12345
        resourceid: 12345
        updateTime: 12345
        updatedByUserId: 12345
        value: '...'
      title: XXPolicyResourceMap
      type: object
    XXPolicyWithAssignedId:
      allOf:
      - $ref: '#/components/schemas/XXPolicyBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isAuditEnabled: true
        isEnabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        options: '...'
        policyPriority: 12345
        policyText: '...'
        policyType: 12345
        resourceSignature: '...'
        service: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
        zoneId: 12345
      title: XXPolicyWithAssignedId
      type: object
    XXPortalUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          emailAddress:
            description: Returns the value for the member attribute <b>emailAddress<b>
            readOnly: false
            schema:
              type: string
          firstName:
            description: Returns the value for the member attribute <b>firstName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          lastName:
            description: Returns the value for the member attribute <b>lastName<b>
            readOnly: false
            schema:
              type: string
          loginId:
            description: Returns the value for the member attribute <b>loginId<b>
            readOnly: false
            schema:
              type: string
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          notes:
            description: Returns the value for the member attribute <b>notes<b>
            readOnly: false
            schema:
              type: string
          password:
            description: Returns the value for the member attribute <b>password<b>
            readOnly: false
            schema:
              type: string
          publicScreenName:
            description: Returns the value for the member attribute <b>publicScreenName<b>
            readOnly: false
            schema:
              type: string
          status:
            description: Returns the value for the member attribute <b>status<b>
            format: int32
            readOnly: false
            type: integer
          userSource:
            description: Returns the value for the member attribute <b>userSource<b>
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        emailAddress: '...'
        firstName: '...'
        id: 12345
        lastName: '...'
        loginId: '...'
        myClassType: 12345
        myDisplayValue: '...'
        notes: '...'
        password: '...'
        publicScreenName: '...'
        status: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userSource: 12345
      title: XXPortalUser
      type: object
    XXPortalUserRole:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          status:
            description: Returns the value for the member attribute <b>status<b>
            format: int32
            readOnly: false
            type: integer
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
          userRole:
            description: Returns the value for the member attribute <b>userRole<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        status: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
        userRole: '...'
      title: XXPortalUserRole
      type: object
    XXResource:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          assetId:
            description: Returns the value for the member attribute <b>assetId<b>
            readOnly: false
            type: number
          columnFamilies:
            description: Returns the value for the member attribute <b>columnFamilies<b>
            readOnly: false
            schema:
              type: string
          columnType:
            description: Returns the value for the member attribute <b>columnType<b>
            format: int32
            readOnly: false
            type: integer
          columns:
            description: Returns the value for the member attribute <b>columns<b>
            readOnly: false
            schema:
              type: string
          databases:
            description: Returns the value for the member attribute <b>databases<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isEncrypt:
            description: Returns the value for the member attribute <b>isEncrypt<b>
            format: int32
            readOnly: false
            type: integer
          isRecursive:
            description: Returns the value for the member attribute <b>isRecursive<b>
            format: int32
            readOnly: false
            type: integer
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          parentId:
            description: Returns the value for the member attribute <b>parentId<b>
            readOnly: false
            type: number
          parentPath:
            description: Returns the value for the member attribute <b>parentPath<b>
            readOnly: false
            schema:
              type: string
          policyName:
            description: ""
            readOnly: false
            schema:
              type: string
          resourceGroup:
            description: Returns the value for the member attribute <b>resourceGroup<b>
            readOnly: false
            schema:
              type: string
          resourceStatus:
            description: Returns the value for the member attribute <b>resourceStatus<b>
            format: int32
            readOnly: false
            type: integer
          resourceType:
            description: Returns the value for the member attribute <b>resourceType<b>
            format: int32
            readOnly: false
            type: integer
          services:
            description: Returns the value for the member attribute <b>services<b>
            readOnly: false
            schema:
              type: string
          tableType:
            description: Returns the value for the member attribute <b>tableType<b>
            format: int32
            readOnly: false
            type: integer
          tables:
            description: Returns the value for the member attribute <b>tables<b>
            readOnly: false
            schema:
              type: string
          topologies:
            description: Returns the value for the member attribute <b>topologies<b>
            readOnly: false
            schema:
              type: string
          udfs:
            description: Returns the value for the member attribute <b>udfs<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        assetId: 12345
        columnFamilies: '...'
        columnType: 12345
        columns: '...'
        createTime: 12345
        databases: '...'
        description: '...'
        id: 12345
        isEncrypt: 12345
        isRecursive: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        parentId: 12345
        parentPath: '...'
        policyName: '...'
        resourceGroup: '...'
        resourceStatus: 12345
        resourceType: 12345
        services: '...'
        tableType: 12345
        tables: '...'
        topologies: '...'
        udfs: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXResource
      type: object
    XXResourceDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          dataMaskOptions:
            description: ""
            readOnly: false
            schema:
              type: string
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          excludessupported:
            description: Returns the value for the member attribute <b>excludesSupported<b>
            readOnly: false
            type: boolean
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          level:
            description: Returns the value for the member attribute <b>level<b>
            readOnly: false
            type: number
          lookupsupported:
            description: Returns the value for the member attribute <b>lookUpSupported<b>
            readOnly: false
            type: boolean
          mandatory:
            description: Returns the value for the member attribute <b>mandatory<b>
            readOnly: false
            type: boolean
          matcher:
            description: Returns the value for the member attribute <b>matcher<b>
            readOnly: false
            schema:
              type: string
          matcheroptions:
            description: Returns the value for the member attribute <b>matcherOptions<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          parent:
            description: Returns the value for the member attribute <b>parent<b>
            readOnly: false
            type: number
          rbKeyValidationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          rbkeydescription:
            description: Returns the value for the member attribute <b>rbKeyDescription<b>
            readOnly: false
            schema:
              type: string
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          recursivesupported:
            description: Returns the value for the member attribute <b>recursiveSupported<b>
            readOnly: false
            type: boolean
          rowFilterOptions:
            description: ""
            readOnly: false
            schema:
              type: string
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            schema:
              type: string
          uiHint:
            description: ""
            readOnly: false
            schema:
              type: string
          validationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          validationRegEx:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        dataMaskOptions: '...'
        defid: 12345
        description: '...'
        excludessupported: true
        id: 12345
        itemId: 12345
        label: '...'
        level: 12345
        lookupsupported: true
        mandatory: true
        matcher: '...'
        matcheroptions: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        parent: 12345
        rbKeyValidationMessage: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        recursivesupported: true
        rowFilterOptions: '...'
        type: '...'
        uiHint: '...'
        updateTime: 12345
        updatedByUserId: 12345
        validationMessage: '...'
        validationRegEx: '...'
      title: XXResourceDef
      type: object
    XXRole:
      allOf:
      - $ref: '#/components/schemas/XXRoleBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        options: '...'
        roleText: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXRole
      type: object
    XXRoleBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          options:
            description: ""
            readOnly: false
            schema:
              type: string
          roleText:
            description: ""
            readOnly: false
            schema:
              type: string
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        options: '...'
        roleText: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXRoleBase
      type: object
    XXRoleRefGroup:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          groupName:
            description: Returns the value for the member attribute <b>groupName<b>
            readOnly: false
            schema:
              type: string
          groupType:
            description: Returns the value for the member attribute <b>groupType<b>
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          roleId:
            description: Returns the value for the member attribute <b>roleId<b>
            readOnly: false
            type: number
      description: The persistent class for the x_role_ref_group database table.
      example:
        addedByUserId: 12345
        createTime: 12345
        groupId: 12345
        groupName: '...'
        groupType: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        roleId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXRoleRefGroup
      type: object
    XXRoleRefRole:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          roleId:
            description: Returns the value for the member attribute <b>roleId<b>
            readOnly: false
            type: number
          subRoleId:
            description: Returns the value for the member attribute <b>subRoleId<b>
            readOnly: false
            type: number
          subRoleName:
            description: Returns the value for the member attribute <b>subRoleName<b>
            readOnly: false
            schema:
              type: string
          subRoleType:
            description: Returns the value for the member attribute <b>subRoleType<b>
            readOnly: false
            type: number
      description: The persistent class for the x_role_ref_role database table.
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        roleId: 12345
        subRoleId: 12345
        subRoleName: '...'
        subRoleType: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXRoleRefRole
      type: object
    XXRoleRefUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          roleId:
            description: Returns the value for the member attribute <b>roleId<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
          userName:
            description: Returns the value for the member attribute <b>userName<b>
            readOnly: false
            schema:
              type: string
          userType:
            description: Returns the value for the member attribute <b>userType<b>
            readOnly: false
            type: number
      description: The persistent class for the x_role_ref_user database table.
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        roleId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
        userName: '...'
        userType: 12345
      title: XXRoleRefUser
      type: object
    XXSecurityZone:
      allOf:
      - $ref: '#/components/schemas/XXSecurityZoneBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        id: 12345
        jsonData: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXSecurityZone
      type: object
    XXSecurityZoneBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          description:
            description: ""
            readOnly: false
            schema:
              type: string
          jsonData:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        id: 12345
        jsonData: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXSecurityZoneBase
      type: object
    XXSecurityZoneRefGroup:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          groupId:
            description: Returns the value for the member attribute <b>groupId<b>
            readOnly: false
            type: number
          groupName:
            description: Returns the value for the member attribute <b>groupName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          userType:
            description: Returns the value for the member attribute <b>groupType<b>
            readOnly: false
            type: number
          zoneId:
            description: Returns the value for the member attribute <b>zoneId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        groupId: 12345
        groupName: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
        userType: 12345
        zoneId: 12345
      title: XXSecurityZoneRefGroup
      type: object
    XXSecurityZoneRefResource:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          resourceDefId:
            description: Returns the value for the member attribute <b>resourceDefId<b>
            readOnly: false
            type: number
          resourceName:
            description: Returns the value for the member attribute <b>resourceName<b>
            readOnly: false
            schema:
              type: string
          zoneId:
            description: Returns the value for the member attribute <b>zoneId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        resourceDefId: 12345
        resourceName: '...'
        updateTime: 12345
        updatedByUserId: 12345
        zoneId: 12345
      title: XXSecurityZoneRefResource
      type: object
    XXSecurityZoneRefService:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          serviceId:
            description: Returns the value for the member attribute <b>serviceId<b>
            readOnly: false
            type: number
          serviceName:
            description: Returns the value for the member attribute <b>serviceName<b>
            readOnly: false
            schema:
              type: string
          zoneId:
            description: Returns the value for the member attribute <b>zoneId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        serviceId: 12345
        serviceName: '...'
        updateTime: 12345
        updatedByUserId: 12345
        zoneId: 12345
      title: XXSecurityZoneRefService
      type: object
    XXSecurityZoneRefTagService:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          tagServiceId:
            description: ""
            readOnly: false
            type: number
          tagServiceName:
            description: ""
            readOnly: false
            schema:
              type: string
          zoneId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        tagServiceId: 12345
        tagServiceName: '...'
        updateTime: 12345
        updatedByUserId: 12345
        zoneId: 12345
      title: XXSecurityZoneRefTagService
      type: object
    XXSecurityZoneRefUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          userId:
            description: Returns the value for the member attribute <b>userId<b>
            readOnly: false
            type: number
          userName:
            description: Returns the value for the member attribute <b>userName<b>
            readOnly: false
            schema:
              type: string
          userType:
            description: Returns the value for the member attribute <b>userType<b>
            readOnly: false
            type: number
          zoneId:
            description: Returns the value for the member attribute <b>zoneId<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
        userName: '...'
        userType: 12345
        zoneId: 12345
      title: XXSecurityZoneRefUser
      type: object
    XXService:
      allOf:
      - $ref: '#/components/schemas/XXServiceBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isenabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        tagService: 12345
        tagUpdateTime: 12345
        tagVersion: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXService
      type: object
    XXServiceBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          isenabled:
            description: Returns the value for the member attribute <b>isEnabled<b>
            readOnly: false
            type: boolean
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          policyUpdateTime:
            description: Returns the value for the member attribute <b>policyUpdateTime<b>
            readOnly: false
            type: number
          policyVersion:
            description: Returns the value for the member attribute <b>policyVersion<b>
            readOnly: false
            type: number
          tagService:
            description: Returns the value for the member attribute <b>tagService<b>
            readOnly: false
            type: number
          tagUpdateTime:
            description: Returns the value for the member attribute <b>tagUpdateTime<b>
            readOnly: false
            type: number
          tagVersion:
            description: Returns the value for the member attribute <b>tagVersion<b>
            readOnly: false
            type: number
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            type: number
          version:
            description: Returns the value for the member attribute <b>version<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isenabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        tagService: 12345
        tagUpdateTime: 12345
        tagVersion: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceBase
      type: object
    XXServiceConfigDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          defaultvalue:
            description: Returns the value for the member attribute <b>defaultValue<b>
            readOnly: false
            schema:
              type: string
          defid:
            description: Returns the value for the member attribute <b>defId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isMandatory:
            description: Returns the value for the member attribute <b>isMandatory<b>
            readOnly: false
            type: boolean
          itemId:
            description: Returns the value for the member attribute <b>itemId<b>
            readOnly: false
            type: number
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          order:
            description: Returns the value for the member attribute <b>order<b>
            readOnly: false
            type: number
          rbKeyValidationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          rbkeydescription:
            description: Returns the value for the member attribute <b>rbKeyDecription<b>
            readOnly: false
            schema:
              type: string
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          subtype:
            description: Returns the value for the member attribute <b>subType<b>
            readOnly: false
            schema:
              type: string
          type:
            description: Returns the value for the member attribute <b>type<b>
            readOnly: false
            schema:
              type: string
          uiHint:
            description: ""
            readOnly: false
            schema:
              type: string
          validationMessage:
            description: ""
            readOnly: false
            schema:
              type: string
          validationRegEx:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defaultvalue: '...'
        defid: 12345
        description: '...'
        id: 12345
        isMandatory: true
        itemId: 12345
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        order: 12345
        rbKeyValidationMessage: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        subtype: '...'
        type: '...'
        uiHint: '...'
        updateTime: 12345
        updatedByUserId: 12345
        validationMessage: '...'
        validationRegEx: '...'
      title: XXServiceConfigDef
      type: object
    XXServiceConfigMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          configkey:
            description: Returns the value for the member attribute <b>configKey<b>
            readOnly: false
            schema:
              type: string
          configvalue:
            description: Returns the value for the member attribute <b>configValue<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          serviceId:
            description: Returns the value for the member attribute <b>service<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        configkey: '...'
        configvalue: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        serviceId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXServiceConfigMap
      type: object
    XXServiceDef:
      allOf:
      - $ref: '#/components/schemas/XXServiceDefBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defOptions: '...'
        description: '...'
        guid: '...'
        id: 12345
        implclassname: '...'
        isEnabled: true
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceDef
      type: object
    XXServiceDefBase:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          defOptions:
            description: Returns the value for the member attribute <b>defOptions<b>
            readOnly: false
            schema:
              type: string
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          implclassname:
            description: Returns the value for the member attribute <b>implClassName<b>
            readOnly: false
            schema:
              type: string
          isEnabled:
            description: Returns the value for the member attribute <b>isEnabled<b>
            readOnly: false
            type: boolean
          label:
            description: Returns the value for the member attribute <b>label<b>
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          rbkeydescription:
            description: Returns the value for the member attribute <b>rbKeyDescription<b>
            readOnly: false
            schema:
              type: string
          rbkeylabel:
            description: Returns the value for the member attribute <b>rbKeyLabel<b>
            readOnly: false
            schema:
              type: string
          version:
            description: Returns the value for the member attribute <b>version<b>
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defOptions: '...'
        description: '...'
        guid: '...'
        id: 12345
        implclassname: '...'
        isEnabled: true
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceDefBase
      type: object
    XXServiceDefWithAssignedId:
      allOf:
      - $ref: '#/components/schemas/XXServiceDefBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        defOptions: '...'
        description: '...'
        guid: '...'
        id: 12345
        implclassname: '...'
        isEnabled: true
        label: '...'
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        rbkeydescription: '...'
        rbkeylabel: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceDefWithAssignedId
      type: object
    XXServiceResource:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isEnabled:
            description: ""
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resourceSignature:
            description: ""
            readOnly: false
            schema:
              type: string
          serviceId:
            description: ""
            readOnly: false
            type: number
          serviceResourceElements:
            description: ""
            readOnly: false
            schema:
              type: string
          tags:
            description: ""
            readOnly: false
            schema:
              type: string
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        isEnabled: true
        myClassType: 12345
        myDisplayValue: '...'
        resourceSignature: '...'
        serviceId: 12345
        serviceResourceElements: '...'
        tags: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceResource
      type: object
    XXServiceResourceElement:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isExcludes:
            description: ""
            readOnly: false
            type: boolean
          isRecursive:
            description: ""
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resDefId:
            description: ""
            readOnly: false
            type: number
          resourceId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        isExcludes: true
        isRecursive: true
        myClassType: 12345
        myDisplayValue: '...'
        resDefId: 12345
        resourceId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXServiceResourceElement
      type: object
    XXServiceResourceElementValue:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resElementId:
            description: ""
            readOnly: false
            type: number
          sortOrder:
            description: ""
            readOnly: false
            type: number
          value:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        resElementId: 12345
        sortOrder: 12345
        updateTime: 12345
        updatedByUserId: 12345
        value: '...'
      title: XXServiceResourceElementValue
      type: object
    XXServiceVersionInfo:
      description: ""
      example:
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        serviceId: 12345
        tagUpdateTime: 12345
        tagVersion: 12345
      properties:
        id:
          description: ""
          readOnly: false
          type: number
        myClassType:
          description: ""
          format: int32
          readOnly: false
          type: integer
        myDisplayValue:
          description: ""
          readOnly: false
          schema:
            type: string
        policyUpdateTime:
          description: ""
          readOnly: false
          type: number
        policyVersion:
          description: ""
          readOnly: false
          type: number
        serviceId:
          description: ""
          readOnly: false
          type: number
        tagUpdateTime:
          description: ""
          readOnly: false
          type: number
        tagVersion:
          description: ""
          readOnly: false
          type: number
      title: XXServiceVersionInfo
      type: object
    XXServiceWithAssignedId:
      allOf:
      - $ref: '#/components/schemas/XXServiceBase'
      - properties:
          id:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        description: '...'
        guid: '...'
        id: 12345
        isenabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        policyUpdateTime: 12345
        policyVersion: 12345
        tagService: 12345
        tagUpdateTime: 12345
        tagVersion: 12345
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXServiceWithAssignedId
      type: object
    XXTag:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          options:
            description: ""
            readOnly: false
            schema:
              type: string
          owner:
            description: ""
            readOnly: false
            type: number
          tagAttrs:
            description: ""
            readOnly: false
            schema:
              type: string
          type:
            description: ""
            readOnly: false
            type: number
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        options: '...'
        owner: 12345
        tagAttrs: '...'
        type: 12345
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXTag
      type: object
    XXTagAttribute:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          tagId:
            description: ""
            readOnly: false
            type: number
          value:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        tagId: 12345
        updateTime: 12345
        updatedByUserId: 12345
        value: '...'
      title: XXTagAttribute
      type: object
    XXTagAttributeDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          tagDefId:
            description: ""
            readOnly: false
            type: number
          type:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        tagDefId: 12345
        type: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXTagAttributeDef
      type: object
    XXTagDef:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isEnabled:
            description: ""
            readOnly: false
            type: boolean
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          name:
            description: ""
            readOnly: false
            schema:
              type: string
          source:
            description: ""
            readOnly: false
            schema:
              type: string
          tagAttrDefs:
            description: ""
            readOnly: false
            schema:
              type: string
          version:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        isEnabled: true
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        source: '...'
        tagAttrDefs: '...'
        updateTime: 12345
        updatedByUserId: 12345
        version: 12345
      title: XXTagDef
      type: object
    XXTagResourceMap:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          guid:
            description: ""
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          resourceId:
            description: ""
            readOnly: false
            type: number
          tagId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        guid: '...'
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        resourceId: 12345
        tagId: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXTagResourceMap
      type: object
    XXTrxLog:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          action:
            description: Returns the value for the member attribute <b>action<b>
            readOnly: false
            schema:
              type: string
          attributeName:
            description: Returns the value for the member attribute <b>attributeName<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          newValue:
            description: Returns the value for the member attribute <b>newValue<b>
            readOnly: false
            schema:
              type: string
          objectClassType:
            description: Returns the value for the member attribute <b>objectClassType<b>
            format: int32
            readOnly: false
            type: integer
          objectId:
            description: Returns the value for the member attribute <b>objectId<b>
            readOnly: false
            type: number
          objectName:
            description: Returns the value for the member attribute <b>objectName<b>
            readOnly: false
            schema:
              type: string
          parentObjectClassType:
            description: Returns the value for the member attribute <b>parentObjectClassType<b>
            format: int32
            readOnly: false
            type: integer
          parentObjectId:
            description: Returns the value for the member attribute <b>parentObjectId<b>
            readOnly: false
            type: number
          parentObjectName:
            description: Returns the value for the member attribute <b>parentObjectName<b>
            readOnly: false
            schema:
              type: string
          previousValue:
            description: Returns the value for the member attribute <b>previousValue<b>
            readOnly: false
            schema:
              type: string
          requestId:
            description: Returns the value for the member attribute <b>requestId<b>
            readOnly: false
            schema:
              type: string
          sessionId:
            description: Returns the value for the member attribute <b>sessionId<b>
            readOnly: false
            schema:
              type: string
          sessionType:
            description: Returns the value for the member attribute <b>sessionType<b>
            readOnly: false
            schema:
              type: string
          transactionId:
            description: Returns the value for the member attribute <b>transactionId<b>
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        action: '...'
        addedByUserId: 12345
        attributeName: '...'
        createTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        newValue: '...'
        objectClassType: 12345
        objectId: 12345
        objectName: '...'
        parentObjectClassType: 12345
        parentObjectId: 12345
        parentObjectName: '...'
        previousValue: '...'
        requestId: '...'
        sessionId: '...'
        sessionType: '...'
        transactionId: '...'
        updateTime: 12345
        updatedByUserId: 12345
      title: XXTrxLog
      type: object
    XXUgsyncAuditInfo:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          eventTime:
            description: ""
            readOnly: false
            type: number
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          noOfModifiedGroups:
            description: ""
            readOnly: false
            type: number
          noOfModifiedUsers:
            description: ""
            readOnly: false
            type: number
          noOfNewGroups:
            description: ""
            readOnly: false
            type: number
          noOfNewUsers:
            description: ""
            readOnly: false
            type: number
          sessionId:
            description: ""
            readOnly: false
            schema:
              type: string
          syncSource:
            description: ""
            readOnly: false
            schema:
              type: string
          syncSourceInfo:
            description: ""
            readOnly: false
            schema:
              type: string
          userName:
            description: ""
            readOnly: false
            schema:
              type: string
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        eventTime: 12345
        id: 12345
        myClassType: 12345
        myDisplayValue: '...'
        noOfModifiedGroups: 12345
        noOfModifiedUsers: 12345
        noOfNewGroups: 12345
        noOfNewUsers: 12345
        sessionId: '...'
        syncSource: '...'
        syncSourceInfo: '...'
        updateTime: 12345
        updatedByUserId: 12345
        userName: '...'
      title: XXUgsyncAuditInfo
      type: object
    XXUser:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          credStoreId:
            description: Returns the value for the member attribute <b>credStoreId<b>
            readOnly: false
            type: number
          description:
            description: Returns the value for the member attribute <b>description<b>
            readOnly: false
            schema:
              type: string
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isVisible:
            description: Returns the value for the member attribute <b>isVisible<b>
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          myDisplayValue:
            description: ""
            readOnly: false
            schema:
              type: string
          name:
            description: Returns the value for the member attribute <b>name<b>
            readOnly: false
            schema:
              type: string
          status:
            description: Returns the value for the member attribute <b>status<b>
            format: int32
            readOnly: false
            type: integer
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        credStoreId: 12345
        description: '...'
        id: 12345
        isVisible: 12345
        myClassType: 12345
        myDisplayValue: '...'
        name: '...'
        status: 12345
        updateTime: 12345
        updatedByUserId: 12345
      title: XXUser
      type: object
    XXUserPermission:
      allOf:
      - $ref: '#/components/schemas/XXDBBase'
      - properties:
          id:
            description: Returns the value for the member attribute <b>id<b>
            readOnly: false
            type: number
          isAllowed:
            description: ""
            readOnly: false
            type: number
          moduleId:
            description: ""
            readOnly: false
            type: number
          myClassType:
            description: ""
            format: int32
            readOnly: false
            type: integer
          userId:
            description: ""
            readOnly: false
            type: number
      description: ""
      example:
        addedByUserId: 12345
        createTime: 12345
        id: 12345
        isAllowed: 12345
        moduleId: 12345
        myClassType: 12345
        myDisplayValue: '...'
        updateTime: 12345
        updatedByUserId: 12345
        userId: 12345
      title: XXUserPermission
      type: object
    connection:
      properties:
        allowPreview:
          type: boolean
        allowQuery:
          type: boolean
        extra:
          type: object
        host:
          type: string
        name:
          pattern: ^[A-Za-z][a-zA-Z0-9_]+$
          type: string
        ownerGroups:
          type: string
        ownerUsers:
          type: string
        port:
          type: integer
        previewConfig:
          type: object
        queryConfig:
          type: object
      required:
      - name
      - host
      type: object
    createAlert:
      properties:
        alert_type:
          pattern: ^(slack|teams)$
          type: string
        from:
          type: string
        replace:
          type: object
        template_alias:
          type: string
        to:
          type: string
        url:
          type: string
      required:
      - alert_type
      - template_alias
      - url
      - to
      title: New Alert
      type: object
    createEmail:
      properties:
        bcc:
          items:
            format: email
            type: string
          type: array
        body:
          type: string
        cc:
          items:
            format: email
            type: string
          type: array
        name:
          minLength: 3
          type: string
        replace:
          type: object
        subject:
          type: string
        template:
          type: string
        to:
          items:
            format: email
            type: string
          minItems: 1
          type: array
      required:
      - to
      - subject
      title: New Email
      type: object
    createFile:
      properties:
        excludePrefix:
          type: boolean
        file:
          format: binary
          type: string
        force:
          type: boolean
        name:
          type: string
        prefix:
          type: string
      required:
      - name
      - prefix
      - file
      responses:
        "200":
          description: OK
          schema:
            type: object
      title: New File
      type: object
    createImage:
      properties:
        excludePrefix:
          type: boolean
        file:
          format: binary
          type: string
        force:
          type: boolean
        name:
          type: string
        prefix:
          type: string
      required:
      - name
      - prefix
      - file
      responses:
        "200":
          description: OK
          schema:
            type: object
      title: New Image
      type: object
    createNotification:
      properties:
        action:
          type: string
        attributes:
          items:
            properties:
              key:
                type: string
              value:
                type: string
            type: object
          type: array
        body:
          type: string
        category:
          type: string
        title:
          type: string
        userIds:
          items:
            type: string
          type: array
      required:
      - userIds
      - category
      title: New Notification
      type: object
    createRequest:
      properties:
        entities:
          items:
            type: object
          type: array
        message:
          type: string
        terms:
          items:
            type: object
          type: array
        type:
          enum:
          - terms
          - description
          type: string
      required:
      - type
      title: New Request
      type: object
    createSms:
      properties:
        Message:
          type: string
        Recipient:
          items:
            type: string
          type: array
        RecipientName:
          type: string
        callbackUrl:
          type: string
      required:
      - Recipient
      - Message
      title: New Sms
      type: object
    createTemplate:
      properties:
        alias:
          type: string
        description:
          type: string
        message_base64:
          type: string
        message_title:
          type: string
        name:
          type: string
      required:
      - name
      - message_base64
      - alias
      - message_title
      title: New Template
      type: object
    createTenant:
      properties:
        email:
          type: string
        firstname:
          type: string
        isResetPassword:
          default: false
          type: boolean
        lastname:
          type: string
        password:
          minLength: 6
          pattern: .*[0-9].*
          type: string
        tenantAlias:
          minLength: 4
          type: string
        tenantName:
          minLength: 3
          type: string
        username:
          minLength: 4
          type: string
      required:
      - tenantName
      - tenantAlias
      - firstname
      - lastname
      - username
      - email
      - password
      title: New Tenant
      type: object
    createUserAssetSuggestion:
      properties:
        asset:
          type: string
        assetId:
          type: string
        status:
          type: string
        suggestionType:
          type: string
        userId:
          type: string
      required:
      - userId
      - asset
      - assetId
      - status
      - suggestionType
      title: New UserAssetSuggestion
      type: object
    credential:
      properties:
        authType:
          type: string
        connType:
          type: string
        connectionQualifiedName:
          pattern: '[a-zA-Z0-9-]+/[a-zA-Z0-9-]+/[a-zA-Z0-9-]+'
          type: string
        description:
          type: string
        extra:
          type: object
        login:
          type: string
        name:
          pattern: ^[A-Za-z][a-zA-Z0-9_]+$
          type: string
        password:
          type: string
      required: []
      title: New Credential
      type: object
    error:
      properties:
        code:
          type: integer
        error:
          type: string
        info:
          type: string
      required:
      - info
      - error
      - code
      - info
      - error
      - code
      title: Error Response
      type: object
    evaluateAccess:
      properties:
        entityGuid:
          type: string
        typeName:
          type: string
      required:
      - typeName
      - entityGuid
      type: object
    getAdminEvent: {}
    job:
      properties:
        advanced:
          type: object
        arguments:
          type: object
        botQualifiedName:
          type: string
        connectionQualifiedName:
          type: string
        credentialQualifiedName:
          type: string
        cronString:
          type: string
        cronTimezone:
          type: string
        isCron:
          type: boolean
        isEvent:
          type: boolean
        name:
          type: string
        triggerNow:
          default: false
          type: boolean
      required: []
      title: New ConfigMap
      type: object
    previewTemplate:
      properties:
        replace:
          type: object
      title: Preview Template
      type: object
    scheduleAtlanJob:
      properties:
        cronstring:
          type: string
        timezone:
          type: string
      required:
      - cronstring
      title: Schedule AtlanJob
      type: object
    smtpConfigTest:
      properties:
        host:
          type: string
        password:
          type: string
        port:
          type: integer
        sslEnabled:
          type: boolean
        tlsEnabled:
          type: boolean
        username:
          type: string
      required:
      - host
      - username
      - password
      title: Smtp config test
      type: object
    termRequest:
      properties:
        action:
          type: string
        glossaryId:
          type: string
        termId:
          type: string
      type: object
    updateNotification:
      properties:
        delivered:
          type: boolean
        read:
          type: boolean
      title: Update Notification
      type: object
    updateRegistrationInfo:
      properties:
        allowRegistration:
          type: boolean
        domainRestriction:
          items:
            type: string
          type: array
      title: New Tenant
      type: object
    updateRequest:
      properties:
        action:
          enum:
          - approved
          - rejected
          type: string
        message:
          type: string
      required:
      - action
      title: Update Request
      type: object
    updateTemplate:
      properties:
        description:
          type: string
        message_base64:
          type: string
        message_title:
          type: string
        name:
          type: string
      title: Update Template
      type: object
    updateUserAssetSuggestion:
      properties:
        asset:
          type: string
        assetId:
          type: string
        status:
          type: string
        suggestionType:
          type: string
        userId:
          type: string
      title: Update UserAssetSuggestion
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
info:
  contact:
    email: engineering@atlan.com
    name: Atlan Engineering Team
    url: http://atlan.com
  description: ""
  license:
    name: Atlan
    url: ""
  termsOfService: ""
  title: atlan-user-service
  version: 0.0.1
openapi: 3.0.0
paths:
  /debug/cacheclear:
    post:
      consumes:
      - application/json
      description: to clear the cache for certificates
      operationId: cacheClear
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security: []
      tags:
      - Kubernetes
  /debug/health:
    get:
      consumes:
      - application/json
      description: used by Kubernetes liveness probe
      operationId: debugHealth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security: []
      summary: Liveness check
      tags:
      - Kubernetes
  /debug/ready:
    get:
      consumes:
      - application/json
      description: used by Kubernetes readiness probe
      operationId: debugReady
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security: []
      summary: Liveness check
      tags:
      - Kubernetes
  /internal/tenants/{tenant}/k8s/{resourceType}/{alias}/archive:
    post:
      description: Archive k8s secret by alias
      operationId: archiveK8sResource
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      - $ref: '#/components/parameters/resourceTypeParam'
      responses: {}
      security: []
      tags:
      - credentials
      x-action: atlan:credentials:archive:$id
      x-disable-for-access-token: true
  /tenants:
    post:
      description: Get current tenant in case of single tenant
      operationId: createTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTenant'
        description: Create a new tenant
        required: false
      responses: {}
      security: []
      tags:
      - tenants
      x-action: atlan:tenants:create
      x-auth: false
  /tenants/{tenant}:
    delete:
      description: Delete Tenant by tenant
      operationId: deleteTenant
      responses: {}
      summary: Delete tenant.
      tags:
      - tenants
      x-action: atlan:tenants:delete:$tenant
      x-disable-for-access-token: true
    get:
      description: Get tenant by tenant
      operationId: getTenant
      parameters:
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmRepresentation'
          description: success
      tags:
      - tenants
      x-action: atlan:tenants:get:$tenant
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Update Tenant by tenant
      operationId: updateTenant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmRepresentation'
        required: true
      responses:
        "200":
          description: success
      summary: Update the top-level information of the tenant   Any user, roles or
        client information in the representation  will be ignored.
      tags:
      - tenants
      x-action: atlan:tenants:update:$tenant
  /tenants/{tenant}/access/evaluate:
    post:
      description: Evaluate Policies
      operationId: evaluatePolicies
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/evaluateAccess'
        required: true
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - policies
      x-action: atlan:policies:evaluate
  /tenants/{tenant}/accesstokens:
    get:
      description: List access tokens
      operationId: listAccessToken
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - accesstokens
      x-action: atlan:accesstokens:list
    post:
      description: Create access token
      operationId: createAccessToken
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessToken'
        description: Remove Groups from role
        required: true
      responses: {}
      tags:
      - accesstokens
      x-action: atlan:accesstokens:create
  /tenants/{tenant}/accesstokens/{id}/delete:
    post:
      description: Delete access token
      operationId: deleteAccessToken
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      responses: {}
      tags:
      - accesstokens
      x-action: atlan:accesstokens:delete
      x-disable-for-access-token: true
  /tenants/{tenant}/accesstokens/reset:
    post:
      description: Reset access tokens
      operationId: resetAccessTokens
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses: {}
      tags:
      - accesstokens
      x-action: atlan:accesstokens:reset
  /tenants/{tenant}/adoption/recentassets:
    get:
      description: get recent assets of an user or all users
      operationId: getRecentAssets
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - in: query
        name: username
        required: false
        schema:
          type: string
      - in: query
        name: typenames
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: assets
        required: false
        schema:
          type: integer
      responses: {}
      tags:
      - adoption
      x-action: atlan:groups:$id:get
    parameters: []
  /tenants/{tenant}/adoption/topassets:
    get:
      description: get top assets of an user or all users
      operationId: getTopAssets
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - in: query
        name: username
        required: false
        schema:
          type: string
      - in: query
        name: typenames
        required: false
        schema:
          items:
            type: string
          type: array
      - in: query
        name: assets
        required: false
        schema:
          type: integer
      responses: {}
      tags:
      - adoption
      x-action: atlan:groups:$id:get
    parameters: []
  /tenants/{tenant}/adoption/topterms:
    get:
      description: get top terms of an user or all users
      operationId: getTopTerms
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - in: query
        name: username
        required: false
        schema:
          type: string
      - in: query
        name: glossaryQualifiedName
        required: false
        schema:
          type: string
      - in: query
        name: terms
        required: false
        schema:
          type: integer
      responses: {}
      tags:
      - adoption
      x-action: atlan:groups:$id:get
    parameters: []
  /tenants/{tenant}/adoption/topusers:
    get:
      description: get top users of an asset/tenant
      operationId: getTopUsers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - in: query
        name: users
        required: false
        schema:
          type: integer
      responses: {}
      tags:
      - adoption
      x-action: atlan:groups:$id:get
    parameters: []
  /tenants/{tenant}/alerts:
    get:
      description: Create a new alert
      operationId: listAlerts
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
      - in: query
        name: offset
        schema:
          type: integer
      - in: query
        name: filter
        schema:
          type: string
      - in: query
        name: count
        schema:
          type: boolean
      - in: query
        name: sort
        schema:
          items:
            type: string
          type: array
      - description: columns to include
        in: query
        name: columns
        required: false
        schema:
          items:
            type: string
          type: array
      - $ref: '#/components/parameters/tenantParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - alerts
      x-action: atlan:alerts:list
    post:
      description: Create a new alert
      operationId: createAlert
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAlert'
        description: Create a new alert
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - alerts
      x-action: atlan:alerts:create
      x-action-audit: true
  /tenants/{tenant}/alerts/{id}:
    get:
      description: Get alert by objectid
      operationId: getAlert
      parameters:
      - description: columns to include
        in: query
        name: columns
        required: false
        schema:
          items:
            type: string
          type: array
      - description: if the object exists
        in: query
        name: exists
        required: false
        schema:
          type: boolean
      - $ref: '#/components/parameters/tenantParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - alerts
      x-action: atlan:alerts:get:$id
    parameters:
    - description: Id of the alert
      in: path
      name: id
      required: true
      schema:
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
  /tenants/{tenant}/avatars:
    post:
      description: Create a new avatar
      operationId: createAvatar
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses: {}
      tags:
      - avatars
      x-action: atlan:avatars:create
      x-action-audit: true
  /tenants/{tenant}/avatars/{avatar}:
    get:
      description: Get avatar by objectid
      operationId: getAvatar
      parameters:
      - $ref: '#/components/parameters/avatar'
      responses: {}
      security: []
      tags:
      - avatars
      x-action: atlan:avatars:get:$id
    parameters:
    - $ref: '#/components/parameters/tenantParam'
  /tenants/{tenant}/avatars/{avatar}/archive:
    post:
      description: Archive avatar by objectid
      operationId: archiveAvatar
      parameters:
      - $ref: '#/components/parameters/avatar'
      - $ref: '#/components/parameters/tenantParam'
      responses: {}
      tags:
      - avatars
      x-action: atlan:avatars:archive:$id
  /tenants/{tenant}/connections:
    post:
      description: Setup connection
      operationId: createConnection
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetup'
        description: Setup connection
        required: true
      responses: {}
      tags:
      - connection
      x-action: atlan:connection:setup
      x-action-audit: true
  /tenants/{tenant}/connections/{id}:
    post:
      description: update connection
      operationId: updateConnection
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionSetup'
        description: Update connection
        required: true
      responses: {}
      tags:
      - connection
      x-action: atlan:connection:id:update
      x-action-audit: true
  /tenants/{tenant}/connections/{id}/archive:
    post:
      description: Delete a connection
      operationId: archiveConnection
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionArchive'
        description: Archive connection
        required: true
      responses: {}
      tags:
      - connection
      x-action: atlan:connection:setup
      x-action-audit: true
  /tenants/{tenant}/connections/{id}/query:
    post:
      description: Update connection query config
      operationId: connectionQuery
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionQuery'
        description: Update connection query config
        required: true
      responses: {}
      tags:
      - connection
      x-action: atlan:connection:query
      x-action-audit: true
  /tenants/{tenant}/connections/test:
    post:
      description: Check connection connectivity
      operationId: connectionTest
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionTest'
        description: Check connection
        required: true
      responses: {}
      tags:
      - connection
      x-action: atlan:connection:check
      x-action-audit: true
  /tenants/{tenant}/credentials:
    post:
      description: Create a new credential
      operationId: createCredential
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credential'
        description: Create a new credential
        required: false
      responses: {}
      tags:
      - credentials
      x-action: atlan:credentials:create
      x-action-audit: true
  /tenants/{tenant}/credentials/{id}:
    get:
      description: Get credential by id
      operationId: getCredential
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      response: {}
      responses: {}
      tags:
      - credentials
      x-action: atlan:credentials:get:$id
      x-action-audit: true
    post:
      description: Update credential by objectid
      operationId: updateCredential
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/credential'
        description: Update the credential
        required: true
      responses: {}
      tags:
      - credentials
      x-action: atlan:credentials:update:$id
      x-action-audit: true
  /tenants/{tenant}/credentials/{id}/archive:
    post:
      description: Archive subscription by objectid
      operationId: archiveCredential
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      responses: {}
      tags:
      - credentials
      x-action: atlan:credentials:archive:$id
      x-disable-for-access-token: true
  /tenants/{tenant}/emails:
    post:
      description: Create a new email
      operationId: createEmail
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createEmail'
        description: Create a new email
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - emails
      x-action: atlan:emails:create
      x-action-audit: true
  /tenants/{tenant}/emails/{id}:
    get:
      description: Get email by objectid
      operationId: getEmail
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - emails
      x-action: atlan:emails:get:$id
  /tenants/{tenant}/events/login:
    get:
      description: Get tenant events
      operationId: getTenantEvents
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/clientParam'
      - $ref: '#/components/parameters/dateFromParam'
      - $ref: '#/components/parameters/dateToParam'
      - $ref: '#/components/parameters/firstParam'
      - $ref: '#/components/parameters/ipAddressParam'
      - $ref: '#/components/parameters/maxParam'
      - $ref: '#/components/parameters/typeParam'
      - $ref: '#/components/parameters/userParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRepresentation'
          description: success
      tags:
      - tenants
      - events
      x-action: atlan:tenants:events:get:$tenant
  /tenants/{tenant}/events/main:
    get:
      description: Get admin events
      operationId: getTenantAdminEvents
      parameters:
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminEventRepresentation'
          description: success
      tags:
      - tenants
      - admin-events
      x-action: atlan:tenants:admin-events:get:$tenant
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - in: query
      name: authClient
      schema:
        type: string
      style: form
    - in: query
      name: authIpAddress
      schema:
        type: string
      style: form
    - in: query
      name: authRealm
      schema:
        type: string
      style: form
    - description: user id
      in: query
      name: authUser
      schema:
        type: string
      style: form
    - in: query
      name: dateFrom
      schema:
        type: string
      style: form
    - in: query
      name: dateTo
      schema:
        type: string
      style: form
    - in: query
      name: first
      schema:
        format: int32
        type: integer
      style: form
    - description: Maximum results size (defaults to 100)
      in: query
      name: max
      schema:
        format: int32
        type: integer
      style: form
    - in: query
      name: operationTypes
      schema:
        items:
          type: string
        type: array
      style: form
    - in: query
      name: resourcePath
      schema:
        type: string
      style: form
    - in: query
      name: resourceTypes
      schema:
        items:
          type: string
        type: array
      style: form
  /tenants/{tenant}/files:
    post:
      description: Create a new file
      operationId: createFile
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createFile'
        description: Create a new file
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - files
      x-action: atlan:files:create
      x-action-audit: true
  /tenants/{tenant}/files/{id}:
    get:
      description: Get file by objectid
      operationId: getFile
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - description: Id of the file
        in: path
        name: id
        required: true
        schema:
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
      - description: columns to include
        in: query
        name: ContentDisposition
        required: true
        schema:
          type: string
      - description: name
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - files
      x-action: atlan:files:get:$id
  /tenants/{tenant}/groups:
    get:
      description: List groups
      operationId: listGroups
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/fullParam'
      - $ref: '#/components/parameters/previewParam'
      - $ref: '#/components/parameters/searchParam'
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:list
    post:
      description: Create a new group
      operationId: createGroup
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup'
        description: Create a new group
        required: false
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:create
      x-auth: false
  /tenants/{tenant}/groups/{id}:
    get:
      description: Get group by objectid
      operationId: getGroup
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRepresentation'
          description: success
      tags:
      - groups
      x-action: atlan:groups:$id:get
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Update group by objectid
      operationId: updateGroup
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRepresentation'
        required: true
      responses:
        "200":
          description: success
      tags:
      - groups
      x-action: atlan:groups:$id:update
  /tenants/{tenant}/groups/{id}/addchild:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Add Child to a group
      operationId: addchildGroup
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRepresentation'
        description: Create a new group
        required: false
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:add
      x-auth: false
  /tenants/{tenant}/groups/{id}/delete:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Delete a group
      operationId: deleteGroup
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:delete
      x-auth: false
      x-disable-for-access-token: true
  /tenants/{tenant}/groups/{id}/members:
    get:
      description: Add Child to a group
      operationId: getMembers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:members
      x-auth: false
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Add members to a group
      operationId: addMembers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMembersToGroup'
        description: Create a new group
        required: true
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:members:add
      x-auth: false
  /tenants/{tenant}/groups/{id}/members/remove:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Remove members from a group
      operationId: removeMembers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMembersToGroup'
        description: Remove members from a group
        required: true
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:members:remove
      x-auth: false
  /tenants/{tenant}/groups/v2:
    get:
      description: List groups V2
      operationId: listGroupsV2
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - group
      x-action: atlan:groups:list:v2
  /tenants/{tenant}/idp:
    get:
      description: Get tenant idps
      operationId: listTenantIdps
      parameters: []
      responses: {}
      tags:
      - tenants
      - idp
      x-action: atlan:tenants:idp:list:$tenant
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Create new idp instance
      operationId: addTenantIdp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRepresentation'
        description: Create a new tenant idp instance
        required: true
      responses: {}
      tags:
      - tenants
      - idp
      x-action: atlan:tenants:idp:add
      x-auth: false
  /tenants/{tenant}/idp/{alias}:
    get:
      description: Get tenant idps
      operationId: getTenantIdpByAlias
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      responses: {}
      tags:
      - tenants
      - idp
      x-action: atlan:tenants:idp:get:$tenant:$alias
    post:
      description: Update idp instance
      operationId: updateTenantIdp
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRepresentation'
        description: Update tenant idp
        required: true
      responses: {}
      tags:
      - tenants
      - idp
      x-action: atlan:tenants:idp:update:$tenant:$alias
      x-auth: false
  /tenants/{tenant}/idp/{alias}/delete:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/aliasParam'
    post:
      description: Delete idp instance
      operationId: DeleteTenantIdp
      responses: {}
      tags:
      - tenants
      - idp
      x-action: atlan:tenants:idp:delete:$tenant:$alias
      x-auth: false
      x-disable-for-access-token: true
  /tenants/{tenant}/idp/{alias}/mappers:
    get:
      description: List tenant idp mappers
      operationId: listTenantIdpMappers
      parameters: []
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:mappers:list:$tenant:$alias
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/aliasParam'
    post:
      description: Create new idp mapper
      operationId: createTenantIdpMapper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
        description: Create a new tenant idp mapper
        required: false
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:mappes:create:$tenant:$alias
      x-auth: false
  /tenants/{tenant}/idp/{alias}/mappers/{id}:
    get:
      description: Get tenant idp mapper by id
      operationId: getTenantIdpMapper
      parameters: []
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:mappers:get:$tenant:$alias:$id
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/aliasParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: 'Update idp mapper '
      operationId: updateTenantIdpMapper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
        description: Update idp mapper
        required: false
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:mapper:update:$tenant:$alias:$id
      x-auth: false
  /tenants/{tenant}/idp/{alias}/mappers/{id}/delete:
    post:
      description: Delete idp mapper
      operationId: deleteTenantIdpMapper
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      - $ref: '#/components/parameters/idParam'
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:mappers:delete:$tenant:$alias:$id
      x-auth: false
      x-disable-for-access-token: true
  /tenants/{tenant}/idp/default:
    get:
      description: Get default IDP
      operationId: getDefaultIDP
      parameters: []
      responses: {}
      tags:
      - tenants
      - idp
      - default
      x-action: atlan:tenants:idp:default
    parameters:
    - $ref: '#/components/parameters/tenantParam'
  /tenants/{tenant}/idp/default/{alias}:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/aliasParam'
    post:
      description: Set default IDP
      operationId: setDefaultIDP
      requestBody: {}
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:default
      x-auth: false
  /tenants/{tenant}/idp/default/{alias}/delete:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/aliasParam'
    post:
      description: Remove default IDP
      operationId: removeDefaultIDP
      requestBody: {}
      responses: {}
      tags:
      - tenants
      - idp
      - mappers
      x-action: atlan:tenants:idp:default
      x-auth: false
  /tenants/{tenant}/images:
    post:
      description: Create a new image
      operationId: createImage
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createImage'
        description: Create a new image
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security: []
      tags:
      - images
      x-action: atlan:images:create
      x-action-audit: true
  /tenants/{tenant}/images/{id}:
    get:
      description: Get image by objectid
      operationId: getImage
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - description: Id of the image
        in: path
        name: id
        required: true
        schema:
          pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
      - description: columns to include
        in: query
        name: ContentDisposition
        required: true
        schema:
          type: string
      - description: name
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
      security: []
      tags:
      - images
      x-action: atlan:images:get:$id
  /tenants/{tenant}/jobs:
    post:
      description: Create new AtlanJob
      operationId: createAtlanJob
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job'
        description: Create AtlanJob
        required: true
      responses: {}
      tags:
      - argo
      x-action: atlan:job:create
      x-action-audit: true
  /tenants/{tenant}/jobs/{id}:
    get:
      description: Get AtlanJob
      operationId: getAtlanJob
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody: {}
      responses: {}
      tags:
      - argo
      x-action: atlan:job:get
      x-action-audit: true
    post:
      description: Update AtlanJob
      operationId: updateAtlanJob
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job'
        description: Update the AtlanJob
        required: true
      responses: {}
      tags:
      - argo
      x-action: atlan:job:update
      x-action-audit: true
  /tenants/{tenant}/jobs/{id}/schedule:
    post:
      description: Schedule AtlanJob
      operationId: scheduleAtlanJob
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/scheduleAtlanJob'
        description: Schedule AtlanJob
        required: true
      responses: {}
      tags:
      - argo
      x-action: atlan:argo:schedule
      x-action-audit: true
  /tenants/{tenant}/jobs/{id}/submit:
    post:
      description: Submit AtlanJob
      operationId: submitAtlanJob
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      responses: {}
      tags:
      - argo
      x-action: atlan:argo:submit
      x-action-audit: true
  /tenants/{tenant}/jobs/{id}/suspend:
    post:
      description: Suspend schedule of AtlanJob
      operationId: suspendAtlanJobSchedule
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody: {}
      responses: {}
      tags:
      - argo
      x-action: atlan:argo:suspend
      x-action-audit: true
  /tenants/{tenant}/metrics/toptables:
    get:
      description: Sync Keycloak with ranger
      operationId: getTenantMetricsTable
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      responses: {}
      tags:
      - tenants
      - ranger
      x-action: ""
      x-auth: false
  /tenants/{tenant}/metrics/topusers:
    get:
      description: Tenant Metrics with Top Users
      operationId: getTenantMetricsUsers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      responses: {}
      tags:
      - tenants
      - ranger
      x-action: ""
      x-auth: false
  /tenants/{tenant}/notifications:
    get:
      description: List notifications
      operationId: listNotifications
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - notifications
      x-action: atlan:notifications:list
    post:
      description: Create a new notification
      operationId: createNotification
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createNotification'
        description: Create a new notification
        required: false
      responses: {}
      tags:
      - notifications
      x-action: atlan:notifications:create
      x-action-audit: true
  /tenants/{tenant}/notifications/{id}:
    get:
      description: Get notification by objectid
      operationId: getNotification
      parameters:
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses: {}
      tags:
      - notifications
      x-action: atlan:notifications:get:$id
    post:
      description: Update notification by objectid
      operationId: updateNotification
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateNotification'
        description: Update the notification
        required: true
      responses: {}
      tags:
      - notifications
      x-action: atlan:notifications:update:$id
      x-action-audit: true
  /tenants/{tenant}/policies:
    post:
      description: Create a new ranger policy
      operationId: createPolicy
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangerPolicy'
        description: Add groups to role
        required: true
      responses:
        "201":
          description: ""
          example:
            allowExceptions:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            conditions:
            - type: '...'
              values:
              - '...'
              - '...'
            - type: '...'
              values:
              - '...'
              - '...'
            createTime: 12345
            createdBy: '...'
            dataMaskPolicyItems:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              dataMaskInfo:
                conditionExpr: '...'
                dataMaskType: '...'
                valueExpr: '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              dataMaskInfo:
                conditionExpr: '...'
                dataMaskType: '...'
                valueExpr: '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            denyExceptions:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            denyPolicyItems:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            description: '...'
            guid: '...'
            id: 12345
            isAuditEnabled: true
            isDenyAllElse: true
            isEnabled: true
            name: '...'
            options:
              property1: {}
              property2: {}
            policyItems:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              users:
              - '...'
              - '...'
            policyLabels:
            - '...'
            - '...'
            policyPriority: 12345
            policyType: 12345
            resourceSignature: '...'
            resources:
              property1:
                isExcludes: true
                isRecursive: true
                values:
                - '...'
                - '...'
              property2:
                isExcludes: true
                isRecursive: true
                values:
                - '...'
                - '...'
            rowFilterPolicyItems:
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              rowFilterInfo:
                filterExpr: '...'
              users:
              - '...'
              - '...'
            - accesses:
              - isAllowed: true
                type: '...'
              - isAllowed: true
                type: '...'
              conditions:
              - type: '...'
                values:
                - '...'
                - '...'
              - type: '...'
                values:
                - '...'
                - '...'
              delegateAdmin: true
              groups:
              - '...'
              - '...'
              roles:
              - '...'
              - '...'
              rowFilterInfo:
                filterExpr: '...'
              users:
              - '...'
              - '...'
            service: '...'
            serviceType: '...'
            updateTime: 12345
            updatedBy: '...'
            validitySchedules:
            - endTime: '...'
              recurrences:
              - interval: {}
                schedule: {}
              - interval: {}
                schedule: {}
              startTime: '...'
              timeZone: '...'
            - endTime: '...'
              recurrences:
              - interval: {}
                schedule: {}
              - interval: {}
                schedule: {}
              startTime: '...'
              timeZone: '...'
            version: 12345
            zoneName: '...'
          schema:
            $ref: '#/components/schemas/RangerPolicy'
      security:
      - bearerAuth: []
      tags:
      - policy
      x-action: atlan:policies:create
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
  /tenants/{tenant}/policies/{id}:
    get:
      description: Get ranger policy
      operationId: getPolicy
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:get
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    parameters:
    - in: path
      name: id
      schema:
        type: integer
    - $ref: '#/components/parameters/tenantParam'
    put:
      description: Create a new ranger policy
      operationId: updatePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangerPolicy'
        description: Add groups to role
        required: true
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:create
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/{id}/delete:
    parameters:
    - in: path
      name: id
      schema:
        type: integer
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Delete a ranger policy
      operationId: deletePolicy
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:delete
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-disable-for-access-token: true
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
  /tenants/{tenant}/policies/accesslogs:
    get:
      description: Get all user sessions
      operationId: getAllAccessLogs
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/usernameParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - $ref: '#/components/parameters/actionParam'
      - $ref: '#/components/parameters/policyIdParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/accessParam'
      - $ref: '#/components/parameters/userTypesParam'
      - in: query
        name: result
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      responses: {}
      x-action: atlan:users:sessions
      x-auth: false
  /tenants/{tenant}/policies/asset:
    get:
      description: paginate policies attached to asset
      operationId: getPolicesAttachedToAsset
      parameters:
      - $ref: '#/components/parameters/qualifiedNameParam'
      - in: query
        name: assetType
        schema:
          type: string
      - in: query
        name: classifications
        schema:
          items:
            type: string
          type: array
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:paginate
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/assets/{assetGuid}:
    get:
      description: Create ranger policy for asset
      operationId: getAssetPolicy
      responses: {}
      x-action: atlan:policies:asset
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    parameters:
    - in: path
      name: assetGuid
      schema:
        type: string
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Create ranger policy for asset
      operationId: postAssetPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangerAssetPolicy'
        description: Add policy to asset
        required: true
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:asset
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/atlan:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Create ranger policy for atlan asset
      operationId: createAtlanAssetPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangerAtlanAssetPolicy'
        description: Add policy to asset
        required: true
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:asset
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/atlan/{id}:
    parameters:
    - in: path
      name: id
      schema:
        type: integer
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Update ranger policy for atlan asset
      operationId: updateAtlanAssetPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RangerAtlanAssetPolicy'
        description: Add policy to asset
        required: true
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:asset
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/lastsync:
    get:
      description: Delete a ranger policy
      operationId: getLastSync
      responses: {}
      tags:
      - policy
      x-action: atlan:policies:lastsync
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    security:
    - bearerAuth: []
  /tenants/{tenant}/policies/paginate:
    get:
      description: paginate ranger policies
      operationId: paginatePolicy
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - in: query
        name: pageSize
        schema:
          type: string
      - in: query
        name: startIndex
        schema:
          type: string
      - in: query
        name: page
        schema:
          type: string
      - in: query
        name: policyType
        schema:
          type: string
      - in: query
        name: resource:end-one-entity-classification
        schema:
          type: string
      - in: query
        name: resource:end-one-entity
        schema:
          type: string
      - in: query
        name: resource:end-one-entity-type
        schema:
          type: string
      - in: query
        name: resource:end-two-entity-classification
        schema:
          type: string
      - in: query
        name: resource:end-two-entity
        schema:
          type: string
      - in: query
        name: resource:end-two-entity-type
        schema:
          type: string
      - in: query
        name: resource:entity-classification
        schema:
          type: string
      - in: query
        name: resource:entity
        schema:
          type: string
      - in: query
        name: resource:entity-type
        schema:
          type: string
      - in: query
        name: resource:relationship-type
        schema:
          type: string
      - in: query
        name: resource:type-category
        schema:
          type: string
      - in: query
        name: resource:Aatlas-service
        schema:
          type: string
      - in: query
        name: group
        schema:
          type: string
      - in: query
        name: policyLabelsPartial
        schema:
          type: string
      - in: query
        name: policyNamePartial
        schema:
          type: string
      - in: query
        name: isEnabled
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: string
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - policy
      x-action: atlan:policies:paginate
      x-action-audit: true
      x-allowPublic: false
      x-checkPolicy: false
      x-isDisplay: true
      x-resource: rangerPolicy
      x-resourceType: policy
  /tenants/{tenant}/ranger/sync:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Sync Keycloak with ranger
      operationId: rangerSync
      responses: {}
      tags:
      - tenants
      - ranger
      x-action: atlan:tenants:ranger:sync
      x-auth: false
  /tenants/{tenant}/registration/info:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Get tenant by tenant
      operationId: updateRegistrationInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRegistrationInfo'
        description: Create a new tenant
        required: false
      responses: {}
      tags:
      - tenants
      x-action: atlan:tenants:update:$tenant:logininfo
  /tenants/{tenant}/requests:
    get:
      description: Create a new request
      operationId: listRequests
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      - $ref: '#/components/parameters/whereParam'
      responses: {}
      tags:
      - requests
      x-action: atlan:requests:list
    post:
      description: Create a new request
      operationId: createRequest
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createRequest'
        description: Create a new request
        required: false
      responses: {}
      tags:
      - requests
      x-action: atlan:requests:create
      x-action-audit: true
  /tenants/{tenant}/requests/{id}:
    get:
      description: Get request by objectid
      operationId: getRequest
      parameters:
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses: {}
      tags:
      - requests
      x-action: atlan:requests:get:$id
    parameters:
    - $ref: '#/components/parameters/idParam'
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Update request by objectid
      operationId: updateRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update the request
        required: true
      responses: {}
      tags:
      - requests
      x-action: atlan:requests:update:$id
      x-action-audit: true
  /tenants/{tenant}/requests/{id}/archive:
    post:
      description: Archive subscription by objectid
      operationId: archiveRequest
      parameters:
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/tenantParam'
      responses: {}
      tags:
      - requests
      x-action: atlan:requests:archive:$id
      x-disable-for-access-token: true
  /tenants/{tenant}/roles:
    get:
      description: List roles
      operationId: listRoles
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/searchParam'
      responses: {}
      tags:
      - roles
      x-action: atlan:roles:list
  /tenants/{tenant}/roles/{id}:
    get:
      description: Get role by objectid
      operationId: getRole
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRepresentation'
          description: success
      tags:
      - roles
      x-action: atlan:roles:$id:get
    parameters:
    - $ref: '#/components/parameters/idParam'
  /tenants/{tenant}/roles/{id}/groups:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Add groups to role
      operationId: addGroupsToRole
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupsToRole'
        description: Add groups to role
        required: true
      responses: {}
      tags:
      - roles
      x-action: atlan:roles:$id:addgroups
  /tenants/{tenant}/roles/{id}/groups/remove:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Remove groups from role
      operationId: removeGroupsFromRole
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupsToRole'
        description: Remove Groups from role
        required: true
      responses: {}
      tags:
      - roles
      x-action: atlan:roles:$id:removegroups
  /tenants/{tenant}/roles/{id}/users:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Add users to role
      operationId: addUsersToRole
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUsersToRole'
        description: Add users to role
        required: true
      responses: {}
      tags:
      - roles
      x-action: atlan:roles:$id:addusers
  /tenants/{tenant}/roles/{id}/users/remove:
    parameters:
    - $ref: '#/components/parameters/idParam'
    post:
      description: Remove users from role
      operationId: removeUsersFromRole
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUsersToRole'
        description: Remove users from role
        required: true
      responses: {}
      tags:
      - roles
      x-action: atlan:roles:$id:removeusers
  /tenants/{tenant}/runs:
    get:
      description: List runs
      operationId: listWorkflows
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - $ref: '#/components/parameters/guidParamQuery'
      - description: Continue string
        in: query
        name: continue
        schema:
          type: string
      - description: Field Selector
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: Label Selector
        in: query
        name: labelSelector
        schema:
          type: string
      - description: Fields to include or exclude
        in: query
        name: fields
        schema:
          type: string
      - description: Field Selector
        in: query
        name: resourceVersion
        schema:
          type: string
      requestBody: {}
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:list
      x-action-audit: true
  /tenants/{tenant}/runs/{workflowName}/logs:
    get:
      description: Stream logs of a workflow
      operationId: streamWorkflowLogs
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - $ref: '#/components/parameters/guidParamQuery'
      - $ref: '#/components/parameters/podNameParamQuery'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:logs:$id
  /tenants/{tenant}/runs/{workflowName}/resubmit:
    post:
      description: Resubmit a workflow
      operationId: resubmitWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/{workflowName}/resume:
    post:
      description: Resume a workflow
      operationId: resumeWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/{workflowName}/retry:
    post:
      description: Retry workflow by workflowName
      operationId: retryWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/{workflowName}/stop:
    post:
      description: Stop a workflow
      operationId: stopWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/{workflowName}/suspend:
    post:
      description: Suspend a workflow
      operationId: suspendWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/{workflowName}/terminate:
    post:
      description: Terminate a worklfow
      operationId: terminateWorkflow
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/workflowNameParam'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archive:$id
  /tenants/{tenant}/runs/archived:
    get:
      description: List archived runs
      operationId: listArchivedWorkflows
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - $ref: '#/components/parameters/guidParamQuery'
      - description: Continue string
        in: query
        name: continue
        schema:
          type: string
      - description: Field Selector
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: Label Selector
        in: query
        name: labelSelector
        schema:
          type: string
      - description: Field Selector
        in: query
        name: resourceVersion
        schema:
          type: string
      requestBody: {}
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:archived:list
      x-action-audit: true
  /tenants/{tenant}/runs/archived/{id}/logs:
    get:
      description: Get logs artifact of an archived workflow
      operationId: GetArchivedWorkflowLogArtifact
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/podNameParamQuery'
      - $ref: '#/components/parameters/qualifiedNameParam'
      - $ref: '#/components/parameters/guidParamQuery'
      responses: {}
      tags:
      - runs
      x-action: atlan:runs:logs:$id
  /tenants/{tenant}/sms:
    post:
      description: Create a new sms
      operationId: createSms
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createSms'
        description: Create a new sms
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - sms
      x-action: atlan:smss:create
      x-action-audit: true
  /tenants/{tenant}/sms/{id}:
    get:
      description: Get sms by objectid
      operationId: getSms
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - description: Id of the sms
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: columns to include
        in: query
        name: columns
        required: false
        schema:
          items:
            type: string
          type: array
      - description: if the object exists
        in: query
        name: exists
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - sms
      x-action: atlan:smss:get:$id
  /tenants/{tenant}/smtp/test:
    post:
      description: Sync Keycloak with ranger
      operationId: smtpConfigTest
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/smtpConfigTest'
        description: Update idp mapper
        required: false
      responses: {}
      tags:
      - tenants
      - ranger
      x-action: atlan:tenants:smtp:test
      x-auth: false
  /tenants/{tenant}/templates:
    get:
      description: List Templates
      operationId: listTemplates
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:list
    post:
      description: Create a new Template
      operationId: createTemplate
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createTemplate'
        description: Create a new Template
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:create
  /tenants/{tenant}/templates/{id}/history:
    get:
      description: Get Template History
      operationId: listTemplateHistory
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:$id:list
  /tenants/{tenant}/templates/alias/{alias}:
    get:
      description: Get Template By Alias
      operationId: getTemplateAlias
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:$alias
    post:
      description: Update Template by Alias
      operationId: updateTemplateAlias
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateTemplate'
        description: Update the email
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:update:$alias
      x-action-audit: true
  /tenants/{tenant}/templates/alias/{alias}/archive:
    post:
      description: Archive Template by Alias
      operationId: archiveTemplateAlias
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/aliasParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:archive:$alias
      x-disable-for-access-token: true
  /tenants/{tenant}/templates/alias/{alias}/preview:
    post:
      description: Get Template Preview By Alias
      operationId: previewTemplate
      parameters:
      - $ref: '#/components/parameters/aliasParam'
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/previewTemplate'
        description: Create a new Template
        required: false
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:$alias:preview
  /tenants/{tenant}/userAssetSuggestions:
    get:
      description: Create a new userAssetSuggestion
      operationId: listUserAssetSuggestions
      parameters:
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:list
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Create a new userAssetSuggestion
      operationId: createUserAssetSuggestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserAssetSuggestion'
        description: Create a new userAssetSuggestion
        required: false
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:create
      x-action-audit: true
  /tenants/{tenant}/userAssetSuggestions/{id}:
    get:
      description: Get userAssetSuggestion by objectid
      operationId: getUserAssetSuggestion
      parameters:
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/relationParam'
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:get:$id
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Update userAssetSuggestion by objectid
      operationId: updateUserAssetSuggestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserAssetSuggestion'
        description: Update the userAssetSuggestion
        required: true
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:update:$id
      x-action-audit: true
  /tenants/{tenant}/userAssetSuggestions/{id}/archive:
    post:
      description: Archive subscription by objectid
      operationId: archiveUserAssetSuggestion
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:archive:$id
  /tenants/{tenant}/userAssetSuggestions/{id}/history:
    get:
      description: Get UserAssetSuggestion History
      operationId: listUserAssetSuggestionHistory
      parameters:
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/relationParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:$id:list
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
  /tenants/{tenant}/userAssetSuggestions/{id}/history/{version}:
    get:
      description: Get UserAssetSuggestion History
      operationId: getUserAssetSuggestionHistory
      parameters: []
      responses: {}
      tags:
      - userAssetSuggestions
      x-action: atlan:userAssetSuggestions:$id:version
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    - $ref: '#/components/parameters/versionParam'
  /tenants/{tenant}/users:
    get:
      description: List users
      operationId: listUsers
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/previewParam'
      - $ref: '#/components/parameters/searchParam'
      - $ref: '#/components/parameters/emailParam'
      - $ref: '#/components/parameters/firstNameParam'
      - $ref: '#/components/parameters/lastNameParam'
      - $ref: '#/components/parameters/usernameParam'
      - $ref: '#/components/parameters/ignoreGroupMetaParam'
      - $ref: '#/components/parameters/ignoreRolesMetaParam'
      - $ref: '#/components/parameters/ignoreCountParam'
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - users
      x-action: atlan:users:list
    post:
      description: Add user
      operationId: addUser
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUser'
        required: true
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - users
      x-action: atlan:users:add
  /tenants/{tenant}/users/{id}:
    get:
      description: Get user by objectid
      operationId: getUser
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
          description: success
      tags:
      - users
      x-action: atlan:users:get:$id
    post:
      description: Update user by objectid
      operationId: updateUser
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRepresentation'
        required: true
      responses:
        "200":
          description: success
      tags:
      - users
      x-action: atlan:users:update:$id
  /tenants/{tenant}/users/{id}/accesslogs:
    get:
      description: Get all user sessions
      operationId: getAccessLogs
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/startDateParam'
      - $ref: '#/components/parameters/endDateParam'
      - $ref: '#/components/parameters/resourceParam'
      - $ref: '#/components/parameters/actionParam'
      - $ref: '#/components/parameters/policyIdParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/accessParam'
      responses: {}
      x-action: atlan:users:sessions
      x-auth: false
  /tenants/{tenant}/users/{id}/delete:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Delete a user
      operationId: deleteUser
      responses: {}
      tags:
      - users
      x-action: atlan:users:delete
      x-auth: false
      x-disable-for-access-token: true
  /tenants/{tenant}/users/{id}/events:
    get:
      description: Get user events
      operationId: getUserEvents
      parameters:
      - $ref: '#/components/parameters/clientParam'
      - $ref: '#/components/parameters/dateFromParam'
      - $ref: '#/components/parameters/dateToParam'
      - $ref: '#/components/parameters/firstParam'
      - $ref: '#/components/parameters/ipAddressParam'
      - $ref: '#/components/parameters/maxParam'
      - $ref: '#/components/parameters/typeParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRepresentation'
          description: success
      tags:
      - users
      - events
      x-action: atlan:users:events:get:$id
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
  /tenants/{tenant}/users/{id}/groups:
    get:
      description: get groups of a user
      operationId: getUserGroups
      parameters:
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      tags:
      - groups
      x-action: atlan:users:$id:groups
      x-auth: false
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Add groups to a user
      operationId: addGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddGroupsToUser'
        description: Add users to a group
        required: true
      responses: {}
      tags:
      - groups
      x-action: atlan:groups:$id:members:add
      x-auth: false
  /tenants/{tenant}/users/{id}/resendinvite:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Send an email for updating password
      operationId: resendVerificationEmail
      responses: {}
      tags:
      - users
      x-action: atlan:users:updatepasswordemail
      x-auth: false
  /tenants/{tenant}/users/{id}/roles/update:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Update user role
      operationId: updateUserRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRole'
        required: true
      responses: {}
      tags:
      - roles
      x-action: atlan:users:$id:roles
      x-auth: false
  /tenants/{tenant}/users/{id}/sessions:
    get:
      description: Get user sessions
      operationId: getUserSessions
      parameters: []
      responses: {}
      tags:
      - users
      - sessions
      x-action: atlan:users:$id:sessions
      x-auth: false
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
  /tenants/{tenant}/users/{id}/sessions/delete:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Delete user's all session
      operationId: deleteUserAllSession
      parameters: []
      responses: {}
      tags:
      - users
      - sessions
      x-action: atlan:users:$id:sessions:<.*>:delete
      x-auth: false
  /tenants/{tenant}/users/{id}/sync:
    parameters:
    - $ref: '#/components/parameters/idParam'
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Sync the current user with ranger
      operationId: syncCurrentUser
      responses: {}
      tags:
      - users
      x-auth: false
  /tenants/{tenant}/users/{id}/updatepassword:
    parameters:
    - $ref: '#/components/parameters/idParam'
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: Set up a new password for the user.
      operationId: updateUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        description: The representation must contain a value and the type equals to
          "password"
        required: true
      responses:
        2XX:
          description: success
      tags:
      - users
      x-action: atlan:users:updatepassword
      x-auth: false
  /tenants/{tenant}/users/{id}/updatepasswordemail:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    - $ref: '#/components/parameters/idParam'
    post:
      description: Send an email for updating password
      operationId: updateUserPasswordEmail
      responses: {}
      tags:
      - users
      x-action: atlan:users:updatepasswordemail
      x-auth: false
  /tenants/{tenant}/users/bulk:
    parameters:
    - $ref: '#/components/parameters/tenantParam'
    post:
      description: get users in bulk
      operationId: getBukUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUserRepresentation'
        required: true
      responses: {}
      tags:
      - users
      x-action: atlan:users:update:$id
  /tenants/{tenant}/users/current:
    get:
      description: Get current user
      operationId: getCurrentUser
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
          description: success
      tags:
      - users
      x-action: atlan:users:get:current
    parameters: []
  /tenants/{tenant}/users/sessions:
    get:
      description: Get all user sessions
      operationId: getAllUserSessions
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - description: Session type - online or offline
        in: query
        name: sessionType
        schema:
          type: string
      responses: {}
      tags:
      - users
      - sessions
      x-action: atlan:users:sessions
      x-auth: false
  /tenants/{tenant}/users/sessions/{sessionId}/delete:
    post:
      description: Delete user session
      operationId: deleteUserSession
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/sessionIdParam'
      responses: {}
      tags:
      - users
      - sessions
      x-action: atlan:users:$id:sessions:$sessionId:delete
      x-auth: false
  /tenants/{tenant}/users/v2:
    get:
      description: List users V2
      operationId: listUsersV2
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/sortParam'
      - $ref: '#/components/parameters/countParam'
      - $ref: '#/components/parameters/columnParam'
      - $ref: '#/components/parameters/filterParam'
      responses: {}
      security:
      - bearerAuth: []
      tags:
      - users
      x-action: atlan:users:list:v2
  /tenants/{tenant}/v1/templates/{id}/history/{version}:
    get:
      description: Get Template History
      operationId: getTemplateHistory
      parameters:
      - $ref: '#/components/parameters/tenantParam'
      - $ref: '#/components/parameters/idParam'
      - $ref: '#/components/parameters/versionParam'
      responses:
        "200":
          description: OK
          schema:
            type: object
      security:
      - bearerAuth: []
      tags:
      - templates
      x-action: atlan:templates:$id:version
  /tenants/exists:
    get:
      description: Check if tenant with the id exists
      operationId: checkTenantExists
      parameters:
      - $ref: '#/components/parameters/tenantQueryParam'
      responses: {}
      security: []
      tags:
      - tenants
      x-action: atlan:tenants:checkexists
security:
- bearerAuth: []
servers:
- description: The production API server
  url: :5008
