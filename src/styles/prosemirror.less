.ProseMirror-focused .ProseMirror-gapcursor {
    display: block;
}
.ProseMirror {
    outline: none;

    p {
        @apply m-0 !important;
        @apply text-gray-700;
    }

    h1 {
        @apply mb-3 mt-0 text-gray-700 font-bold !important;
    }

    h2 {
        @apply mb-2 mt-0 text-gray-500 font-semibold !important;
    }
    h3 {
        @apply mb-1 mt-0 text-gray-500 font-semibold !important;
    }

    &.prose {
        max-width: 100% !important;
    }

    .is-empty::before {
        @apply text-gray-400;
        content: attr(data-placeholder);
        float: left;

        pointer-events: none;
        height: 0;
    }

    hr {
        @apply my-3 !important;
    }

    a {
        @apply text-blue-500;
    }

    ul > li::before {
        @apply bg-gray;
        // display: none;
        // height: 0.3571429em;
        // width: 0.3571429em;
        // top: calc(0.8571429em - 0.1785714em);
        // left: 0.2142857em;
    }

    blockquote p:first-of-type::before, blockquote p:first-of-type::after {
        content: none !important;
    }

    ::marker {
        display: none !important;
        font-size: 0;
    }

    > * + * {
        @apply mt-1 !important;
    }

    img {
        @apply m-0 !important;
    }

    table {
        border-collapse: collapse;
        table-layout: fixed;
        width: 100%;
        margin: 0;
        overflow: hidden;

        ::selection {
            @apply text-black;
        }

        td,
        th {
            min-width: 1em;
            border: 2px solid #ced4da;
            padding: 3px 5px;
            vertical-align: top;
            box-sizing: border-box;
            position: relative;

            > * {
                margin-bottom: 0;
            }
        }

        th {
            font-weight: bold;
            text-align: left;
            background-color: #f1f3f5;
        }

        .selectedCell:after {
            z-index: 2;
            position: absolute;
            content: "";
            left: 0; right: 0; top: 0; bottom: 0;
            background: rgba(200, 200, 255, 0.4);
            pointer-events: none;
        }

        p {
            margin: 0;
        }
    }

    .columew-resize-handle {
        position: absolute;
        right: -2px;
        top: 0;
        bottom: -2px;
        width: 4px;
        background-color: #adf;
        pointer-events: none;
    }

    .resize-cursor {
        cursor: ew-resize;
        cursor: col-resize;
    }

    .mention {
        color: rgba(18, 100, 163, 1);
        background-color: rgba(18, 100, 163, 0.1);
        padding: 0 2px 1px;
    }

    .mention[data-is-me='true'] {
        @apply bg-warning-light;
    }

    code::before, code::after {
        content: "" !important;
    }
}

.resize-cursor {
    cursor: ew-resize;
    cursor: col-resize;
}

.ProseMirror-gapcursor {
    display: none;
    pointer-events: none;
    position: absolute;
}

.ProseMirror-gapcursor:after {
    content: '';
    display: block;
    position: absolute;
    top: -2px;
    width: 20px;
    border-top: 1px solid black;
    animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

ul[data-type="taskList"] {
    list-style: none;
    padding: 0;

    p {
        margin: 0;
    }

    li {
        display: flex;
        padding-left: 0 !important;
        align-items: flex-start;

        > label {
            display: flex;
            flex: 0 0 auto;
            user-select: none;
            margin-top: 0.38em !important;
            justify-items: center;
            justify-content: center;
            text-align: center;
        }

        > div {
            flex: 1 1 auto;
            margin-bottom: 0 !important;
            margin-top: 0 !important;
            margin-left: 0.5rem;
        }

        &::before {
            content: none !important;
        }
    }
}

@keyframes ProseMirror-cursor-blink {
    to {
        visibility: hidden;
    }
}

placeholder {
    color: #ccc;
    position: relative;
    top: 6px;
}
placeholder:after {
    content: "‚òÅ";
    font-size: 200%;
    line-height: 0.1;
    font-weight: bold;
}

.imagePluginRoot {
    display: flex;
    flex-direction: column;
    position: relative;
    border-radius: 0.25rem;
}

.imagePluginRoot img {
    align-self: center;
    width: 100%;
}

.imagePluginRoot:hover .imagePluginOverlay {
    opacity: 1;
}

.imagePluginOverlay {
    width: 100%;
    //display: flex;
    display: none;
    position: absolute;
    justify-content: center;
    transition: all 0.3s ease;
    opacity: 0;
    z-index: 2;
}
.imagePluginRoot .text {
    text-align: center;
}

.imageResizeBoxControl {
    display: none;
}

.imageResizeBoxControl.bottomRight {
    display: inline-block;
    cursor: ew-resize;
    margin-top: -5px;
    right: 0;
    top: 50%;
}

.imageResizeBoxControl.bottomLeft {
    display: inline-block;
    cursor: ew-resize;
    left: -5px;
    margin-top: -5px;
    top: 50%;
}

.imageResizeBoxControl::after {
    @apply bg-white;
    @apply border;
    @apply border-black;
    box-sizing: border-box;
    content: "";
    height: 50px;
    left: 0px;
    position: absolute;
    top: -20px;
    width: 10px;
}

.imagePluginRoot[imageplugin-align="left"] {
    float: left;
    margin: 1rem 2rem 0 0;
}
.imagePluginRoot[imageplugin-align="right"] {
    float: right;
    margin: 0;
}
.imagePluginRoot[imageplugin-align="center"] {
    float: none;
    margin: 0 auto;
}

.imagePluginRoot[imageplugin-align="fullWidth"] {
    width: auto;
    float: none;
    clear: both;
}

.alignFullWidthButton {
    display: none;
}

.alignRightButton,
.alignLeftButton,
.alignCenterButton {
    width: 5rem;
}

.imagePluginRoot[imageplugin-align="left"] [imagealign="left"] {
    background-color: red;
}
.imagePluginRoot[imageplugin-align="right"] [imagealign="right"] {
    background-color: red;
}
.imagePluginRoot[imageplugin-align="center"] [imagealign="center"] {
    background-color: red;
}

.imageResizeBox {
    background-repeat: no-repeat;
    box-sizing: border-box;
    left: 0;
    position: relative;
    top: 0;
    z-index: 1;
    opacity: 0;
    transition: all 0.3s ease;
    align-self: center;
}

.imageResizeBox.active {
    transition: none;
}

.imageResizeBoxControl {
    height: 5px;
    position: absolute;
    width: 5px;
    z-index: 2;
}

.imagePluginRoot:hover .imageResizeBox,
.imageResizeBox.active {
    opacity: 1;
}

.imageResizeBoxControl.topLeft {
    cursor: ew-resize;
    left: -5px;
    top: -5px;
}

.imageResizeBoxControl.top {
    cursor: ew-resize;
    left: 50%;
    margin-left: -5px;
    top: -5px;
}

.imageResizeBoxControl.topRight {
    cursor: ew-resize;
    right: 0;
    top: -5px;
}

.imageResizeBoxControl.right {
    cursor: ew-resize;
    margin-top: -5px;
    right: 0;
    top: 50%;
}

.imageResizeBoxControl.bottomRight {
    cursor: ew-resize;
    bottom: 0;
    right: 0;
}

.imageResizeBoxControl.bottom {
    cursor: ew-resize;
    bottom: 0;
    left: 50%;
    margin-left: -5px;
}

.imageResizeBoxControl.bottomLeft {
    cursor: ew-resize;
    bottom: 0;
    left: -5px;
}

.imageResizeBoxControl.left {
    cursor: w-resize;
    left: -5px;
    margin-top: -5px;
    top: 50%;
}

.imageResizeBoxControl::after {
    @apply bg-white;
    @apply border;
    @apply border-black;
    box-sizing: border-box;
    content: "";
    height: 10px;
    left: 0px;
    position: absolute;
    top: 0px;
    width: 10px;
}

.imageResizeBoxControl::before {
    bottom: -10px;
    content: "";
    left: -10px;
    position: absolute;
    right: -10px;
    top: -10px;
}

@media only print {
    .imageResizeBox {
        display: none;
    }
}

.imageResizeBoxWrapper {
    position: absolute;
    width: 100%;
    justify-content: center;
    display: flex;
}

.imageResizeBoxCenter {
    position: relative;
}
.imageResizeBox {
    position: absolute;
}
.imageResizeBoxControl {
    z-index: 1000;
}

.embed-input::placeholder {
    @apply text-gray-500;
}
